{
  "swagger": "2.0",
  "info": {
    "version": "4.0.0",
    "title": "Paragon Insights APIs",
    "description": "API interface for PI application",
    "contact": {
      "name": "Healthbot Team",
      "email": "healthbot-feedback@juniper.net",
      "url": "https://www.juniper.net/documentation/product/en_US/healthbot"
    }
  },
  "host": "api-server",
  "basePath": "/api/v2",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json",
    "application/octet-stream"
  ],
  "tags": [
    {
      "description": "Configuration endpoints",
      "name": "configuration"
    },
    {
      "description": "Service related endpoints",
      "name": "services"
    },
    {
      "description": "Documentation related endpoints",
      "name": "documentation"
    },
    {
      "description": "Data-store related endpoints",
      "name": "data-store"
    },
    {
      "description": "facts for device(s)",
      "name": "facts"
    },
    {
      "description": "License management related endpoints",
      "name": "license"
    },
    {
      "description": "System details related endpoints",
      "name": "system"
    },
    {
      "description": "Authentication endpoints",
      "name": "authentication"
    },
    {
      "description": "Administrative endpoints",
      "name": "administration"
    },
    {
      "description": "Organization endpoints",
      "name": "organization"
    },
    {
      "description": "workflows",
      "name": "workflow"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "GET static api documentation",
        "operationId": "retrieve_defined_api",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "Successful loaded HTML page"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get all All API's.",
        "tags": [
          "documentation"
        ]
      }
    },
    "/insights/": {
      "get": {
        "description": "GET static api documentation",
        "operationId": "retrieve_insights_api",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "Successful loaded HTML page"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get all All API's.",
        "tags": [
          "documentation"
        ]
      }
    },
    "/orchestrator/": {
      "get": {
        "description": "Get orchestrator type. Will be one of kubernetes or compose.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "operationId": "retrieve_orchestrator",
        "summary": "Get Orchestrator type",
        "tags": [
          "configuration"
        ]
      }
    },
    "/nodes/": {
      "get": {
        "description": "Get the list of available nodes in the installation.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "operationId": "retrieve_available_nodes",
        "summary": "List of available nodes",
        "tags": [
          "system"
        ]
      }
    },
    "/tsdb-counters/": {
      "get": {
        "description": "Get TSDB counters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "operationId": "retrieve_tsdb_counters",
        "summary": "TSDB counters",
        "tags": [
          "system"
        ]
      }
    },
    "/tsdb/query": {
      "get": {
        "description": "Query TSDB",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Name of the database. Multiple databases should be separated by ','. '*' can be used to specify all databases.",
            "in": "query",
            "name": "db",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the deviceGroup(s). Multiple device groups should be separated by ','. This can be used in combination with device, but is not mandatory. If device is given, then query will be executed only for that particular devices in the given device group, else all devices in group will be considered. Given devices will be applicable for all give device-groups.",
            "in": "query",
            "name": "deviceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the device. Multiple device should be separated by ','. This should be used along with deviceGroup. Without deviceGroup, this config will not be considered",
            "in": "query",
            "name": "device",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the measurement. Optional if topic/rule/trigger is used",
            "in": "query",
            "name": "measurement",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name of Healthbot topic. Optional if measurement is used",
            "in": "query",
            "name": "topic",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name of Healthbot rule. Required if topic is used. Optional if measurement is used",
            "in": "query",
            "name": "rule",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name of Healthbot trigger. Optional if measurement is used or rule table is being queried",
            "in": "query",
            "name": "trigger",
            "required": false,
            "type": "string"
          },
          {
            "description": "Fields that needs to be retrieved. Use * for to query all fields. Eg: fields=field1, field2",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort points in descending order based on time. By default points will be sorted in ascending order. Eg: order=desc",
            "in": "query",
            "name": "order",
            "required": false,
            "type": "string"
          },
          {
            "description": "Group results based on specified tags. Use * to group by all tags. Eg: groupBy=key1, key2",
            "in": "query",
            "name": "groupBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limit number of points in the result. If groupBy is used limit is applied per group. Eg: limit=10",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "string"
          },
          {
            "description": "Where clause filters data based on fields, tags, and/or timestamps. Eg: where=\"interface-name\" = 'ge-0/0/1' and \"in-pkts\" > 0",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "Influx query string. Use this when custom query format does not support a query",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation. NOTE: the \"values\" in the query result is a list of list. Elements in this list can be of any type string/integer/float/boolean. Because of the limitation in swagger 2.0, this information could not be encoded. So for now it is maked as string",
            "schema": {
              "$ref": "#/definitions/tsdb_results"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TsdbError"
            }
          },
          "500": {
            "description": "Innternal Error",
            "schema": {
              "$ref": "#/definitions/TsdbError"
            }
          }
        },
        "operationId": "query_tsdb",
        "summary": "TSDB query",
        "tags": [
          "system"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Query TSDB",
        "parameters": [
          {
            "description": "Query TSDB body object",
            "in": "body",
            "name": "tsdb_query_body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/tsdb_post_body",
              "type": "array"
            }
          },
          {
            "description": "Name of the database. Multiple databases should be separated by ','. '*' can be used to specify all databases.",
            "in": "query",
            "name": "db",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the deviceGroup(s). Multiple device groups should be separated by ','. This can be used in combination with device, but is not mandatory. If device is given, then query will be executed only for that particular devices in the given device group, else all devices in group will be considered. Given devices will be applicable for all give device-groups.",
            "in": "query",
            "name": "deviceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the device. Multiple device should be separated by ','. This should be used along with deviceGroup. Without deviceGroup, this config will not be considered",
            "in": "query",
            "name": "device",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the measurement. Optional if topic/rule/trigger is used",
            "in": "query",
            "name": "measurement",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name of Healthbot topic. Optional if measurement is used",
            "in": "query",
            "name": "topic",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name of Healthbot rule. Required if topic is used. Optional if measurement is used",
            "in": "query",
            "name": "rule",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name of Healthbot trigger. Optional if measurement is used or rule table is being queried",
            "in": "query",
            "name": "trigger",
            "required": false,
            "type": "string"
          },
          {
            "description": "Fields that needs to be retrieved. Use * for to query all fields. Eg: fields=field1, field2",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort points in descending order based on time. By default points will be sorted in ascending order. Eg: order=desc",
            "in": "query",
            "name": "order",
            "required": false,
            "type": "string"
          },
          {
            "description": "Group results based on specified tags. Use * to group by all tags. Eg: groupBy=key1, key2",
            "in": "query",
            "name": "groupBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limit number of points in the result. If groupBy is used limit is applied per group. Eg: limit=10",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "string"
          },
          {
            "description": "Where clause filters data based on fields, tags, and/or timestamps. Eg: where=\"interface-name\" = 'ge-0/0/1' and \"in-pkts\" > 0",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "Influx query string. Use this when custom query format does not support a query",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation. NOTE: the \"values\" in the query result is a list of list. Elements in this list can be of any type string/integer/float/boolean. Because of the limitation in swagger 2.0, this information could not be encoded. So for now it is maked as string",
            "schema": {
              "$ref": "#/definitions/tsdb_results"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TsdbError"
            }
          },
          "500": {
            "description": "Innternal Error",
            "schema": {
              "$ref": "#/definitions/TsdbError"
            }
          }
        },
        "operationId": "query_tsdb_post",
        "summary": "TSDB query",
        "tags": [
          "system"
        ]
      }
    },
    "/config/rca/generate-resource-dependencies": {
      "get": {
        "description": "Get resource dependency events. Internal API",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "operationId": "generate_resource_dependencies",
        "summary": "Resource dependencies",
        "tags": [
          "system"
        ]
      }
    },
    "/config/configuration/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "The API server follows a commit model. Unsaved configuration is called a working configuration. This API call deletes the working configuration.",
        "operationId": "rollback_unsaved_configuration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "DEBUG (Use with caution): roll-back a faulty transaction in HB-EMS communication",
            "in": "query",
            "name": "ems_sanity",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete the un-committed configuration.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "description": "Get all groups that are affected by the un-committed configuration changes.",
        "operationId": "retrieve_affected_groups",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/affected-groups"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get all groups affected by un-committed configuration changes.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "description": "Commit the configuration in configuration database. Services of all the affected groups are started or restarted. If there is an error in the configuration, changes would not be saved into the database. If there is some system error, changes would be saved into the database.",
        "operationId": "commit_unsaved_configuration",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Boolean variable is set to false allow the commit to go asynchronously, default value is true which means commit will go synchronously",
            "in": "query",
            "name": "sync",
            "required": false,
            "default": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "202": {
            "description": "Job Created"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Commit unsaved configuration.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/initialize/": {
      "post": {
        "description": "Initialize config-server",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "operationId": "initialize",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Boolean variable is set to true if group services have to be restarted. Defaults to true.",
            "in": "query",
            "name": "restart_groups",
            "required": false,
            "default": true,
            "type": "boolean"
          },
          {
            "description": "Boolean variable is set to true if default rules have to reloaded. Defaults to true.",
            "in": "query",
            "name": "reload_rules",
            "required": false,
            "default": true,
            "type": "boolean"
          },
          {
            "description": "Boolean variable is set to true if default playbooks have to be reloaded. Defaults to true.",
            "in": "query",
            "name": "reload_playbooks",
            "required": false,
            "default": true,
            "type": "boolean"
          },
          {
            "description": "Boolean variable is set to true if syslog patterns have to be reloaded. Defaults to true.",
            "in": "query",
            "name": "reload_syslog_patterns",
            "required": false,
            "default": true,
            "type": "boolean"
          },
          {
            "description": "Boolean variable is set to true if syslog pattern sets have to be reloaded. Defaults to true.",
            "in": "query",
            "name": "reload_syslog_pattern_sets",
            "required": false,
            "default": true,
            "type": "boolean"
          },
          {
            "description": "Boolean variable is set to true if flow templates have to be reloaded. Defaults to true.",
            "in": "query",
            "name": "reload_flow_templates",
            "required": false,
            "default": true,
            "type": "boolean"
          },
          {
            "description": "Boolean variable is set to true if sflow schema has to be reloaded. Defaults to true.",
            "in": "query",
            "name": "reload_sflow_schema",
            "required": false,
            "default": true,
            "type": "boolean"
          }
        ],
        "summary": "Initialize config-server",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/ingest/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: ingest",
        "operationId": "delete_iceberg_ingest",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete ingest by ID",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: ingest",
        "operationId": "retrieve_iceberg_ingest",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ingest-settings_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve ingest"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: ingest",
        "operationId": "create_iceberg_ingest",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ingest_settingsbody object",
            "in": "body",
            "name": "ingest_settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ingest-settings_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create ingest by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: ingest",
        "operationId": "update_iceberg_ingest",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ingest_settingsbody object",
            "in": "body",
            "name": "ingest_settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ingest-settings_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update ingest by ID"
      }
    },
    "/config/ingest/data-enrichment/tagging-profiles/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: tagging-profile",
        "operationId": "retrieve_healthbot_ingest_tagging_profiles",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest-settings/data-enrichment/tagging-profile/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve tagging-profile by ID"
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: tagging-profile",
        "operationId": "delete_healthbot_ingest_tagging_profiles",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete tagging-profile by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: tagging-profile",
        "operationId": "create_healthbot_ingest_tagging_profiles",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "tagging_profilebody object",
            "in": "body",
            "name": "tagging_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tagging-profiles_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest-settings/data-enrichment/tagging-profile/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create tagging-profile by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: tagging-profile",
        "operationId": "update_healthbot_ingest_tagging_profiles",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "tagging_profilebody object",
            "in": "body",
            "name": "tagging_profiles",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tagging-profiles_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest-settings/data-enrichment/tagging-profile/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update tagging-profile by ID"
      }
    },
    "/config/ingest/data-enrichment/tagging-profile/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: tagging-profile",
        "operationId": "delete_healthbot_ingest_tagging_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete tagging-profile by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: tagging-profile",
        "operationId": "retrieve_healthbot_ingest_tagging_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/tagging-profile_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve tagging-profile by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: tagging-profile",
        "operationId": "create_healthbot_ingest_tagging_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "tagging_profilebody object",
            "in": "body",
            "name": "tagging_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tagging-profile_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create tagging-profile by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: tagging-profile",
        "operationId": "update_healthbot_ingest_tagging_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "tagging_profilebody object",
            "in": "body",
            "name": "tagging_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tagging-profile_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update tagging-profile by ID"
      }
    },
    "/config/ingest/flow/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: flow",
        "operationId": "delete_iceberg_ingest_flow",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete flow by ID",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: flow",
        "operationId": "retrieve_iceberg_ingest_flow",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/flow_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve flow"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: flow",
        "operationId": "create_iceberg_ingest_flow",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "flowbody object",
            "in": "body",
            "name": "flow",
            "required": true,
            "schema": {
              "$ref": "#/definitions/flow_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create flow by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: flow",
        "operationId": "update_iceberg_ingest_flow",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "flowbody object",
            "in": "body",
            "name": "flow",
            "required": true,
            "schema": {
              "$ref": "#/definitions/flow_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update flow by ID"
      }
    },
    "/config/ingest/flow/template/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: template",
        "operationId": "retrieve_iceberg_ingest_flow_template_ids",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest/flow/template/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve template"
      }
    },
    "/config/ingest/flow/template/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: template",
        "operationId": "delete_iceberg_ingest_flow_template_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of template",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete template by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: template",
        "operationId": "retrieve_iceberg_ingest_flow_template_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of template",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/template_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve template by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: template",
        "operationId": "create_iceberg_ingest_flow_template_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of template",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "templatebody object",
            "in": "body",
            "name": "template",
            "required": true,
            "schema": {
              "$ref": "#/definitions/template_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create template by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: template",
        "operationId": "update_iceberg_ingest_flow_template_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of template",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "templatebody object",
            "in": "body",
            "name": "template",
            "required": true,
            "schema": {
              "$ref": "#/definitions/template_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update template by ID"
      }
    },
    "/config/ingest/sflow/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: sflow",
        "operationId": "delete_healthbot_ingest_sflow",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete sflow by ID",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: sflow",
        "operationId": "retrieve_healthbot_ingest_sflow",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/sflow_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve sflow"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: sflow",
        "operationId": "create_healthbot_ingest_sflow",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "sflowbody object",
            "in": "body",
            "name": "sflow",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sflow_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create sflow by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: sflow",
        "operationId": "update_healthbot_ingest_sflow",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "sflowbody object",
            "in": "body",
            "name": "sflow",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sflow_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update sflow by ID"
      }
    },
    "/config/ingest/sflow/counter-record/{record_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: counter-record",
        "operationId": "delete_healthbot_ingest_sflow_counter_record_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of record-name",
            "in": "path",
            "name": "record_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete counter-record by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: counter-record",
        "operationId": "retrieve_healthbot_ingest_sflow_counter_record_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of record-name",
            "in": "path",
            "name": "record_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/counter-record_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve counter-record by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: counter-record",
        "operationId": "create_healthbot_ingest_sflow_counter_record_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of record-name",
            "in": "path",
            "name": "record_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "counter_recordbody object",
            "in": "body",
            "name": "counter_record",
            "required": true,
            "schema": {
              "$ref": "#/definitions/counter-record_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create counter-record by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: counter-record",
        "operationId": "update_healthbot_ingest_sflow_counter_record_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of record-name",
            "in": "path",
            "name": "record_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "counter_recordbody object",
            "in": "body",
            "name": "counter_record",
            "required": true,
            "schema": {
              "$ref": "#/definitions/counter-record_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update counter-record by ID"
      }
    },
    "/config/ingest/sflow/flow-record/{record_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: flow-record",
        "operationId": "delete_healthbot_ingest_sflow_flow_record_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of record-name",
            "in": "path",
            "name": "record_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete flow-record by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: flow-record",
        "operationId": "retrieve_healthbot_ingest_sflow_flow_record_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of record-name",
            "in": "path",
            "name": "record_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/flow-record_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve flow-record by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: flow-record",
        "operationId": "create_healthbot_ingest_sflow_flow_record_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of record-name",
            "in": "path",
            "name": "record_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "flow_recordbody object",
            "in": "body",
            "name": "flow_record",
            "required": true,
            "schema": {
              "$ref": "#/definitions/flow-record_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create flow-record by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: flow-record",
        "operationId": "update_healthbot_ingest_sflow_flow_record_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of record-name",
            "in": "path",
            "name": "record_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "flow_recordbody object",
            "in": "body",
            "name": "flow_record",
            "required": true,
            "schema": {
              "$ref": "#/definitions/flow-record_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update flow-record by ID"
      }
    },
    "/config/ingest/sflow/sample/{sample_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: sample",
        "operationId": "delete_healthbot_ingest_sflow_sample_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of sample-name",
            "in": "path",
            "name": "sample_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete sample by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: sample",
        "operationId": "retrieve_healthbot_ingest_sflow_sample_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of sample-name",
            "in": "path",
            "name": "sample_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/sample_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve sample by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: sample",
        "operationId": "create_healthbot_ingest_sflow_sample_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of sample-name",
            "in": "path",
            "name": "sample_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "samplebody object",
            "in": "body",
            "name": "sample",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sample_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create sample by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: sample",
        "operationId": "update_healthbot_ingest_sflow_sample_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of sample-name",
            "in": "path",
            "name": "sample_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "samplebody object",
            "in": "body",
            "name": "sample",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sample_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update sample by ID"
      }
    },
    "/config/ingest/sflow/protocol/{protocol_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: protocol",
        "operationId": "delete_healthbot_ingest_sflow_protocol_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of protocol-name",
            "in": "path",
            "name": "protocol_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete protocol by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: protocol",
        "operationId": "retrieve_healthbot_ingest_sflow_protocol_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of protocol-name",
            "in": "path",
            "name": "protocol_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/protocol_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve protocol by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: protocol",
        "operationId": "create_healthbot_ingest_sflow_protocol_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of protocol-name",
            "in": "path",
            "name": "protocol_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "protocolbody object",
            "in": "body",
            "name": "protocol",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create protocol by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: protocol",
        "operationId": "update_healthbot_ingest_sflow_protocol_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of protocol-name",
            "in": "path",
            "name": "protocol_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "protocolbody object",
            "in": "body",
            "name": "protocol",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update protocol by ID"
      }
    },
    "/config/ingest/frequency-profiles/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: frequency-profile",
        "operationId": "retrieve_healthbot_ingest_frequency_profile",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest/frequency-profile/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve frequency-profile"
      }
    },
    "/config/ingest/frequency-profile/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: frequency-profile",
        "operationId": "delete_healthbot_ingest_frequency_profile__by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete frequency-profile by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: frequency-profile",
        "operationId": "retrieve_healthbot_ingest_frequency_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/frequency-profile_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve frequency-profile by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: frequency-profile",
        "operationId": "create_healthbot_ingest_frequency_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "frequency_profilebody object",
            "in": "body",
            "name": "frequency_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/frequency-profile_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create frequency-profile by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: frequency-profile",
        "operationId": "update_healthbot_ingest_frequency_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "frequency_profilebody object",
            "in": "body",
            "name": "frequency_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/frequency-profile_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update frequency-profile by ID"
      }
    },
    "/config/ingest/native-gpb/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: native-gpb",
        "operationId": "delete_iceberg_ingest_native_gpb",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete native-gpb by ID",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: native-gpb",
        "operationId": "retrieve_iceberg_ingest_native_gpb",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/native-gpb_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve native-gpb"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: native-gpb",
        "operationId": "create_iceberg_ingest_native_gpb",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "native_gpbbody object",
            "in": "body",
            "name": "native_gpb",
            "required": true,
            "schema": {
              "$ref": "#/definitions/native-gpb_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create native-gpb by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: native-gpb",
        "operationId": "update_iceberg_ingest_native_gpb",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "native_gpbbody object",
            "in": "body",
            "name": "native_gpb",
            "required": true,
            "schema": {
              "$ref": "#/definitions/native-gpb_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update native-gpb by ID"
      }
    },
    "/config/ingest/outbound-ssh/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: outbound-ssh",
        "operationId": "delete_healthbot_ingest_outbound_ssh",
        "parameters" : [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete outbound-ssh by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: outbound-ssh",
        "operationId": "retrieve_healthbot_ingest_outbound_ssh",
        "parameters": [
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          },
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/outbound-ssh_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve outbound-ssh"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: outbound-ssh",
        "operationId": "create_healthbot_ingest_outbound_ssh",
        "parameters": [
          {
            "description": "outbound_ssh body object",
            "in": "body",
            "name": "outbound_ssh",
            "required": true,
            "schema": {
              "$ref": "#/definitions/outbound-ssh_schema"
            }
          },
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create outbound-ssh by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: outbound-ssh",
        "operationId": "update_healthbot_ingest_outbound_ssh",
        "parameters": [
          {
            "description": "outbound_sshbody object",
            "in": "body",
            "name": "outbound_ssh",
            "required": true,
            "schema": {
              "$ref": "#/definitions/outbound-ssh_schema"
            }
          },
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update outbound-ssh by ID"
      }
    },
    "/config/ingest/snmp-notification/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: snmp-notification",
        "operationId": "delete_healthbot_ingest_snmp_notification",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete snmp-notification",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: snmp-notification",
        "operationId": "retrieve_healthbot_ingest_snmp_notification",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/snmp-notification_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve snmp-notification"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: snmp-notification",
        "operationId": "create_healthbot_ingest_snmp_notification",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "snmp_notification body object",
            "in": "body",
            "name": "snmp_notification",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snmp-notification_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create snmp-notification by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: snmp-notification",
        "operationId": "update_healthbot_ingest_snmp_notification",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "snmp_notification body object",
            "in": "body",
            "name": "snmp_notification",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snmp-notification_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update snmp-notification by ID"
      }
    },
    "/config/ingest/snmp-notification/v3/usm/user/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: snmp v3 usm user names",
        "operationId": "retrieve_healthbot_ingest_snmp_notification_v3_usm_usernames",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest/snmp-notification/v3/usm/user/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve snmp v3 usm user names"
      }
    },
    "/config/ingest/snmp-notification/v3/usm/users/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: SNMP v3 USM users",
        "operationId": "retrieve_healthbot_ingest_snmp_notification_v3_usm_users",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/snmpv3-usm-users_schema"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve SNMP v3 USM users"
      }
    },
    "/config/ingest/snmp-notification/v3/usm/user/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: snmp v3 usm user",
        "operationId": "delete_healthbot_ingest_snmp_notification_v3_usm_user_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "User Name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete SNMPv3 user by UserName(ID)"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: snmp v3 usm user",
        "operationId": "retrieve_healthbot_ingest_snmp_notification_v3_usm_user_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "User Name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/snmpv3-usm-user_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve SNMPv3 user by UserName(ID)"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: snmp v3 usm user",
        "operationId": "create_healthbot_ingest_snmp_notification_v3_usm_user_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "User Name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "snmp_v3_usm user object",
            "in": "body",
            "name": "usm_user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snmpv3-usm-user_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create SNMPv3 user by UserName(ID)"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: snmp v3 usm user",
        "operationId": "update_healthbot_ingest_snmp_notification_v3_usm_user_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "User Name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "snmp_v3_usm user object",
            "in": "body",
            "name": "usm_user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snmpv3-usm-user_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update SNMPv3 user by UserName(ID)"
      }
    },
    "/config/ingest/syslog/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: syslog",
        "operationId": "delete_iceberg_ingest_syslog",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete syslog by ID",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: syslog",
        "operationId": "retrieve_iceberg_ingest_syslog",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/syslog_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve syslog"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: syslog",
        "operationId": "create_iceberg_ingest_syslog",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "syslogbody object",
            "in": "body",
            "name": "syslog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/syslog_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create syslog by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: syslog",
        "operationId": "update_iceberg_ingest_syslog",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "syslogbody object",
            "in": "body",
            "name": "syslog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/syslog_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update syslog by ID"
      }
    },
    "/config/ingest/syslog/pattern-set/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: pattern-set",
        "operationId": "retrieve_iceberg_ingest_syslog_pattern_set_ids",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/iceberg/ingest/syslog/pattern-set/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve pattern-set"
      }
    },
    "/config/ingest/syslog/pattern-sets/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: pattern-set",
        "operationId": "retrieve_iceberg_ingest_syslog_pattern_sets",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/pattern-set_schema"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve pattern-set by ID"
      }
    },
    "/config/ingest/syslog/pattern-set/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: pattern-set",
        "operationId": "delete_iceberg_ingest_syslog_pattern_set_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern-set",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete pattern-set by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: pattern-set",
        "operationId": "retrieve_iceberg_ingest_syslog_pattern_set_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern-set",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/pattern-set_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve pattern-set by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: pattern-set",
        "operationId": "create_iceberg_ingest_syslog_pattern_set_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern-set",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "pattern_setbody object",
            "in": "body",
            "name": "pattern_set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pattern-set_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create pattern-set by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: pattern-set",
        "operationId": "update_iceberg_ingest_syslog_pattern_set_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern-set",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "pattern_setbody object",
            "in": "body",
            "name": "pattern_set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pattern-set_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update pattern-set by ID"
      }
    },
    "/config/ingest/syslog/pattern/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: pattern",
        "operationId": "retrieve_iceberg_ingest_syslog_pattern_ids",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/iceberg/ingest/syslog/pattern/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve pattern"
      }
    },
    "/config/ingest/syslog/patterns/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: pattern",
        "operationId": "retrieve_iceberg_ingest_syslog_patterns",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/pattern_schema"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve pattern by ID"
      }
    },
    "/config/ingest/syslog/pattern/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: pattern",
        "operationId": "delete_iceberg_ingest_syslog_pattern_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete pattern by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: pattern",
        "operationId": "retrieve_iceberg_ingest_syslog_pattern_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/pattern_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve pattern by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: pattern",
        "operationId": "create_iceberg_ingest_syslog_pattern_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "patternbody object",
            "in": "body",
            "name": "pattern",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pattern_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create pattern by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: pattern",
        "operationId": "update_iceberg_ingest_syslog_pattern_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "patternbody object",
            "in": "body",
            "name": "pattern",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pattern_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update pattern by ID"
      }
    },
    "/config/ingest/syslog/header-pattern/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: header-pattern",
        "operationId": "retrieve_healthbot_ingest_syslog_header_pattern_ids",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest/syslog/header-pattern/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve header pattern names"
      }
    },
    "/config/ingest/syslog/header-patterns/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: pattern",
        "operationId": "retrieve_healthbot_ingest_syslog_header_patterns",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/header-pattern_schema"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve header patterns"
      }
    },
    "/config/ingest/syslog/header-pattern/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: header-pattern",
        "operationId": "delete_healthbot_ingest_syslog_header_pattern_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete pattern by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: header-pattern",
        "operationId": "retrieve_healthbot_ingest_syslog_header_pattern_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/header-pattern_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve pattern by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: header-pattern",
        "operationId": "create_healthbot_ingest_syslog_header_pattern_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "header_patternbody object",
            "in": "body",
            "name": "pattern",
            "required": true,
            "schema": {
              "$ref": "#/definitions/header-pattern_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create pattern by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: header-pattern",
        "operationId": "update_healthbot_ingest_syslog_header_pattern_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "header_patternbody object",
            "in": "body",
            "name": "pattern",
            "required": true,
            "schema": {
              "$ref": "#/definitions/header-pattern_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update pattern by ID"
      }
    },
    "/config/ingest/byoi/custom-plugins/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve all the custom-plugins configured.",
        "operationId": "retrieve_healthbot_ingest_byoi_custom_plugins",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/custom-plugin_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve custom-plugin by ID"
      }
    },
    "/config/ingest/byoi/custom-plugin/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: custom-plugin",
        "operationId": "delete_healthbot_ingest_byoi_custom_plugin_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of custom-plugin",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete custom-plugin by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: custom-plugin",
        "operationId": "retrieve_healthbot_ingest_byoi_custom_plugin_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of custom-plugin",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/custom-plugin_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve custom-plugin by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: custom-plugin",
        "operationId": "create_healthbot_ingest_byoi_custom_plugin_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of custom-plugin",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "custom_pluginbody object",
            "in": "body",
            "name": "custom_plugin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/custom-plugin_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create custom-plugin by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: custom-plugin",
        "operationId": "update_healthbot_ingest_byoi_custom_plugin_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of custom-plugin",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "custom_pluginbody object",
            "in": "body",
            "name": "custom_plugin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/custom-plugin_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update custom-plugin by ID"
      }
    },
    "/config/ingest/byoi/default-plugin/tlive-kafka-ocs/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve all the tlive-kafka-ocs configured.",
        "operationId": "retrieve_healthbot_ingest_byoi_default_plugin_tlive_kafkas",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest/byoi/default-plugin/tlive-kafka-oc/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve tlive-kafka-oc"
      }
    },
    "/config/ingest/byoi/default-plugin/tlive-kafka-oc/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: tlive-kafka-oc",
        "operationId": "delete_healthbot_ingest_byoi_default_plugin_tlive_kafka_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of tlive-kafka-oc",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete tlive-kafka-oc by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: tlive-kafka-oc",
        "operationId": "retrieve_healthbot_ingest_byoi_default_plugin_tlive_kafka_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of tlive-kafka-oc",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/tlive-kafka-oc_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve tlive-kafka-oc by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Add/Merge a tlive-kafka-oc configuration.",
        "operationId": "create_healthbot_ingest_byoi_default_plugin_tlive_kafka_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of tlive-kafka-oc",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "tlive_kafkabody object",
            "in": "body",
            "name": "tlive_kafka",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tlive-kafka-oc_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create tlive-kafka-oc by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: tlive-kafka-oc",
        "operationId": "update_healthbot_ingest_byoi_default_plugin_tlive_kafka_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of tlive-kafka-oc",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "tlive_kafka body object",
            "in": "body",
            "name": "tlive_kafka",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tlive-kafka-oc_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update tlive-kafka-oc by ID"
      }
    },
    "/config/ingest/byoi/ingest-mappings/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve all the ingest mappings configured.",
        "operationId": "retrieve_healthbot_ingest_byoi_ingest_mappings",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest/byoi/ingest-mapping/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve ingest-mapping"
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all ingest-mappings.",
        "operationId": "delete_healthbot_ingest_byoi_ingest_mappings",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete all ingest-mappings.",
        "tags": [
          "configuration"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ]
      }
    },
    "/config/ingest/byoi/ingest-mapping/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete ingest-mapping by name",
        "operationId": "delete_healthbot_ingest_byoi_ingest_mapping_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of ingest-mapping",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete ingest-mapping by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve ingest-mapping by name",
        "operationId": "retrieve_healthbot_ingest_byoi_ingest_mapping_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of ingest-mapping",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ingest-mapping_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve ingest-mapping by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create ingest-mapping by name",
        "operationId": "create_healthbot_ingest_byoi_ingest_mapping_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of ingest-mapping",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ingest_mappingbody object",
            "in": "body",
            "name": "ingest_mapping",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ingest-mapping_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create ingest-mapping by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update ingest-mapping by name",
        "operationId": "update_healthbot_ingest_byoi_ingest_mapping_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of ingest-mapping",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ingest_mappingbody object",
            "in": "body",
            "name": "ingest_mapping",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ingest-mapping_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update ingest-mapping by ID"
      }
    },
    "/config/ingest-settings/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: ingest-settings",
        "operationId": "delete_iceberg_ingest_settings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete ingest-settings by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: ingest-settings",
        "operationId": "retrieve_iceberg_ingest_settings",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ingest-settings_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve ingest-settings"
      },
      "post": {
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "description": "Create operation of resource: ingest-settings",
        "operationId": "create_iceberg_ingest_settings",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ingest_settingsbody object",
            "in": "body",
            "name": "ingest_settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ingest-settings_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create ingest-settings by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: ingest-settings",
        "operationId": "update_iceberg_ingest_settings",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ingest_settingsbody object",
            "in": "body",
            "name": "ingest_settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ingest-settings_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update ingest-settings by ID"
      }
    },
    "/config/ingest-settings/data-enrichment/tagging-profiles/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: tagging-profile",
        "operationId": "retrieve_healthbot_ingest_settings_tagging_profiles",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest-settings/data-enrichment/tagging-profile/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve tagging-profile by ID"
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: tagging-profile",
        "operationId": "delete_healthbot_ingest_settings_tagging_profiles",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete tagging-profile by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: tagging-profile",
        "operationId": "create_healthbot_ingest_settings_tagging_profiles",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "tagging_profilebody object",
            "in": "body",
            "name": "tagging_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tagging-profiles_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest-settings/data-enrichment/tagging-profile/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create tagging-profile by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: tagging-profile",
        "operationId": "update_healthbot_ingest_settings_tagging_profiles",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "tagging_profilebody object",
            "in": "body",
            "name": "tagging_profiles",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tagging-profiles_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest-settings/data-enrichment/tagging-profile/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update tagging-profile by ID"
      }
    },
    "/config/ingest-settings/data-enrichment/tagging-profile/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: tagging-profile",
        "operationId": "delete_healthbot_ingest_settings_tagging_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete tagging-profile by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: tagging-profile",
        "operationId": "retrieve_healthbot_ingest_settings_tagging_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/tagging-profile_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve tagging-profile by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: tagging-profile",
        "operationId": "create_healthbot_ingest_settings_tagging_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "tagging_profilebody object",
            "in": "body",
            "name": "tagging_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tagging-profile_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create tagging-profile by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: tagging-profile",
        "operationId": "update_healthbot_ingest_settings_tagging_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "tagging_profilebody object",
            "in": "body",
            "name": "tagging_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tagging-profile_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update tagging-profile by ID"
      }
    },
    "/config/ingest-settings/flow/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: flow",
        "operationId": "delete_iceberg_ingest_settings_flow",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete flow by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: flow",
        "operationId": "retrieve_iceberg_ingest_settings_flow",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/flow_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve flow"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: flow",
        "operationId": "create_iceberg_ingest_settings_flow",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "flowbody object",
            "in": "body",
            "name": "flow",
            "required": true,
            "schema": {
              "$ref": "#/definitions/flow_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create flow by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: flow",
        "operationId": "update_iceberg_ingest_settings_flow",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "flowbody object",
            "in": "body",
            "name": "flow",
            "required": true,
            "schema": {
              "$ref": "#/definitions/flow_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update flow by ID"
      }
    },
    "/config/ingest-settings/flow/template/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: template",
        "operationId": "retrieve_iceberg_ingest_settings_flow_template_ids",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest-settings/flow/template/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve template"
      }
    },
    "/config/ingest-settings/flow/template/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: template",
        "operationId": "delete_iceberg_ingest_settings_flow_template_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of template",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete template by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: template",
        "operationId": "retrieve_iceberg_ingest_settings_flow_template_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of template",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/template_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve template by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: template",
        "operationId": "create_iceberg_ingest_settings_flow_template_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of template",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "templatebody object",
            "in": "body",
            "name": "template",
            "required": true,
            "schema": {
              "$ref": "#/definitions/template_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create template by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: template",
        "operationId": "update_iceberg_ingest_settings_flow_template_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of template",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "templatebody object",
            "in": "body",
            "name": "template",
            "required": true,
            "schema": {
              "$ref": "#/definitions/template_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update template by ID"
      }
    },
    "/config/ingest-settings/frequency-profiles/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: frequency-profile",
        "operationId": "retrieve_healthbot_ingest_settings_frequency_profile",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest-settings/frequency-profile/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve frequency-profile"
      }
    },
    "/config/ingest-settings/frequency-profile/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: frequency-profile",
        "operationId": "delete_healthbot_ingest_settings_frequency_profile__by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete frequency-profile by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: frequency-profile",
        "operationId": "retrieve_healthbot_ingest_settings_frequency_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/frequency-profile_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve frequency-profile by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: frequency-profile",
        "operationId": "create_healthbot_ingest_settings_frequency_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "frequency_profilebody object",
            "in": "body",
            "name": "frequency_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/frequency-profile_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create frequency-profile by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: frequency-profile",
        "operationId": "update_healthbot_ingest_settings_frequency_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "frequency_profilebody object",
            "in": "body",
            "name": "frequency_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/frequency-profile_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update frequency-profile by ID"
      }
    },
    "/config/ingest-settings/syslog/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: syslog",
        "operationId": "delete_iceberg_ingest_settings_syslog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete syslog by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: syslog",
        "operationId": "retrieve_iceberg_ingest_settings_syslog",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/syslog_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve syslog"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: syslog",
        "operationId": "create_iceberg_ingest_settings_syslog",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "syslogbody object",
            "in": "body",
            "name": "syslog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/syslog_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create syslog by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: syslog",
        "operationId": "update_iceberg_ingest_settings_syslog",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "syslogbody object",
            "in": "body",
            "name": "syslog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/syslog_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update syslog by ID"
      }
    },
    "/config/ingest-settings/syslog/pattern-set/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: pattern-set",
        "operationId": "retrieve_iceberg_ingest_settings_syslog_pattern_set_ids",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/iceberg/ingest-settings/syslog/pattern-set/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve pattern-set"
      }
    },
    "/config/ingest-settings/syslog/pattern-sets/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: pattern-set",
        "operationId": "retrieve_iceberg_ingest_settings_syslog_pattern_sets",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/pattern-set_schema"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve pattern-set by ID"
      }
    },
    "/config/ingest-settings/syslog/pattern-set/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: pattern-set",
        "operationId": "delete_iceberg_ingest_settings_syslog_pattern_set_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern-set",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete pattern-set by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: pattern-set",
        "operationId": "retrieve_iceberg_ingest_settings_syslog_pattern_set_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of patter-set",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/pattern-set_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve pattern-set by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: pattern-set",
        "operationId": "create_iceberg_ingest_settings_syslog_pattern_set_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern-set",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "pattern_setbody object",
            "in": "body",
            "name": "pattern_set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pattern-set_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create pattern-set by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: pattern-set",
        "operationId": "update_iceberg_ingest_settings_syslog_pattern_set_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern-set",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "pattern_setbody object",
            "in": "body",
            "name": "pattern_set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pattern-set_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update pattern-set by ID"
      }
    },
    "/config/ingest-settings/syslog/pattern/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: pattern",
        "operationId": "retrieve_iceberg_ingest_settings_syslog_pattern_ids",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/iceberg/ingest-settings/syslog/pattern/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve pattern"
      }
    },
    "/config/ingest-settings/syslog/patterns/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: pattern",
        "operationId": "retrieve_iceberg_ingest_settings_syslog_patterns",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/pattern_schema"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve pattern by ID"
      }
    },
    "/config/ingest-settings/syslog/pattern/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: pattern",
        "operationId": "delete_iceberg_ingest_settings_syslog_pattern_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete pattern by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: pattern",
        "operationId": "retrieve_iceberg_ingest_settings_syslog_pattern_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/pattern_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve pattern by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: pattern",
        "operationId": "create_iceberg_ingest_settings_syslog_pattern_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "patternbody object",
            "in": "body",
            "name": "pattern",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pattern_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create pattern by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: pattern",
        "operationId": "update_iceberg_ingest_settings_syslog_pattern_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of pattern",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "patternbody object",
            "in": "body",
            "name": "pattern",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pattern_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update pattern by ID"
      }
    },
    "/config/ingest-settings/byoi/custom-plugins/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve all the custom-plugins configured.",
        "operationId": "retrieve_healthbot_ingest_settings_byoi_custom_plugins",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/custom-plugin_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve custom-plugin by ID"
      }
    },
    "/config/ingest-settings/byoi/custom-plugin/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: custom-plugin",
        "operationId": "delete_healthbot_ingest_settings_byoi_custom_plugin_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of custom-plugin",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete custom-plugin by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: custom-plugin",
        "operationId": "retrieve_healthbot_ingest_settings_byoi_custom_plugin_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of custom-plugin",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/custom-plugin_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve custom-plugin by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: custom-plugin",
        "operationId": "create_healthbot_ingest_settings_byoi_custom_plugin_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of custom-plugin",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "custom_pluginbody object",
            "in": "body",
            "name": "custom_plugin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/custom-plugin_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create custom-plugin by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: custom-plugin",
        "operationId": "update_healthbot_ingest_settings_byoi_custom_plugin_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of custom-plugin",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "custom_pluginbody object",
            "in": "body",
            "name": "custom_plugin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/custom-plugin_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update custom-plugin by ID"
      }
    },
    "/config/ingest-settings/byoi/default-plugin/tlive-kafka-ocs/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve all the tlive-kafka-ocs configured.",
        "operationId": "retrieve_healthbot_ingest_settings_byoi_default_plugin_tlive_kafkas",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest-settings/byoi/default-plugin/tlive-kafka-oc/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve tlive-kafka-oc"
      }
    },
    "/config/ingest-settings/byoi/default-plugin/tlive-kafka-oc/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: tlive-kafka-oc",
        "operationId": "delete_healthbot_ingest_settings_byoi_default_plugin_tlive_kafka_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of tlive-kafka-oc",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete tlive-kafka-oc by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: tlive-kafka-oc",
        "operationId": "retrieve_healthbot_ingest_settings_byoi_default_plugin_tlive_kafka_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of tlive-kafka-oc",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/tlive-kafka-oc_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve tlive-kafka-oc by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Add/Merge a tlive-kafka-oc configuration.",
        "operationId": "create_healthbot_ingest_settings_byoi_default_plugin_tlive_kafka_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of tlive-kafka-oc",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "tlive_kafkabody object",
            "in": "body",
            "name": "tlive_kafka",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tlive-kafka-oc_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create tlive-kafka-oc by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: tlive-kafka-oc",
        "operationId": "update_healthbot_ingest_settings_byoi_default_plugin_tlive_kafka_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of tlive-kafka-oc",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "tlive_kafka body object",
            "in": "body",
            "name": "tlive_kafka",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tlive-kafka-oc_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update tlive-kafka-oc by ID"
      }
    },
    "/config/ingest-settings/byoi/ingest-mappings/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve all the ingest mappings configured.",
        "operationId": "retrieve_healthbot_ingest_settings_byoi_ingest_mappings",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/ingest-settings/byoi/ingest-mapping/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve ingest-mapping"
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all ingest-mappings.",
        "operationId": "delete_healthbot_ingest_settings_byoi_ingest_mappings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete all ingest-mappings.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/ingest-settings/byoi/ingest-mapping/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete ingest-mapping by name",
        "operationId": "delete_healthbot_ingest_settings_byoi_ingest_mapping_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of ingest-mapping",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete ingest-mapping by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve ingest-mapping by name",
        "operationId": "retrieve_healthbot_ingest_settings_byoi_ingest_mapping_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of ingest-mapping",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ingest-mapping_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve ingest-mapping by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create ingest-mapping by name",
        "operationId": "create_healthbot_ingest_settings_byoi_ingest_mapping_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of ingest-mapping",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ingest_mappingbody object",
            "in": "body",
            "name": "ingest_mapping",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ingest-mapping_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create ingest-mapping by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update ingest-mapping by name",
        "operationId": "update_healthbot_ingest_settings_byoi_ingest_mapping_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of ingest-mapping",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ingest_mappingbody object",
            "in": "body",
            "name": "ingest_mapping",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ingest-mapping_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update ingest-mapping by ID"
      }
    },
    "/config/deployment/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: deployment",
        "operationId": "delete_healthbot_deployment_deployment_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete deployment by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: deployment",
        "operationId": "retrieve_healthbot_deployment_deployment",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/deployment_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve deployment"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: deployment",
        "operationId": "create_healthbot_deployment_deployment_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "deployment body object",
            "in": "body",
            "name": "deployment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deployment_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create deployment by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: deployment",
        "operationId": "update_healthbot_deployment_deployment_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "deploymentbody object",
            "in": "body",
            "name": "deployment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deployment_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update deployment by ID"
      }
    },
    "/config/configuration/check/device-group/{device_group_name}/": {
      "post": {
        "description": "Checks if the un-committed configuration of a device-group is correct. The un-committed changes are merged with the committed configuration and the complete configuration required for the supplied device-group is validated.",
        "operationId": "check_device_group_unsaved_configuration",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of device group",
            "in": "path",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Check if the un-committed configuration of the given device group is correct",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/configuration/check/network-group/{network_group_name}/": {
      "post": {
        "description": "Checks if the un-committed configuration of a network-group is correct. The un-committed changes are merged with the committed configuration and the complete configuration required for the supplied network-group is validated.",
        "operationId": "check_network_group_unsaved_configuration",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of network group",
            "in": "path",
            "name": "network_group_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Check if the unsaved configuration of the given network group is correct.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/configuration/jobs/": {
      "get": {
        "description": "Return list of all the Commit Job ID's",
        "operationId": "retrieve_configuration_jobs",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Id of Job",
            "format": "uuid",
            "in": "query",
            "name": "job_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Type of job",
            "in": "query",
            "name": "job_status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful creation of job.",
            "schema": {
              "items": {
                "properties": {
                  "job-id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "job-result": {
                    "type": "string"
                  },
                  "job-status": {
                    "enum": [
                      "finished",
                      "killed",
                      "pending",
                      "started"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/data/database/table/": {
      "get": {
        "description": "Get information about different types of tables stored for a device of a device-group.",
        "operationId": "retrieve_data_database_table",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of device",
            "in": "query",
            "name": "device_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name of device-group",
            "in": "query",
            "name": "device_group_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name of network-group",
            "in": "query",
            "name": "network_group_name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Tables in the given database",
            "schema": {
              "items": {
                "$ref": "#/definitions/table_schema"
              },
              "type": "array"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get information about tables for a device of a device-group."
      }
    },
    "/data/database/table/column/": {
      "get": {
        "description": "Get information about columns in a table.",
        "operationId": "retrieve_data_database_table_column_by_table_name",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of device",
            "in": "query",
            "name": "device_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name of device-group",
            "in": "query",
            "name": "device_group_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name of network-group",
            "in": "query",
            "name": "network_group_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name of table",
            "in": "query",
            "name": "table_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of columns in the given table",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "field-1",
                "field-2"
              ]
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get information about columns in a table."
      }
    },
    "/data/database/table/tags/": {
      "get": {
        "description": "Get information about tags keys and values in a table.",
        "operationId": "retrieve_data_database_tags_by_table_name",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of device",
            "in": "query",
            "name": "device_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name of device-group",
            "in": "query",
            "name": "device_group_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name of network-group",
            "in": "query",
            "name": "network_group_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name of table",
            "in": "query",
            "name": "table_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Tag key for which values are requested.",
            "in": "query",
            "name": "tag",
            "required": false,
            "type": "string"
          },
          {
            "description": "Where condition to select values for the requested key. This would not be processed if there is no `tag` query parameter. eg: `tag_key1=val1 AND tag_key2=val2`",
            "in": "query",
            "name": "where_clause",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tags in the given table",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "Value-1",
                "Value-2"
              ]
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get information about tags keys and values in a table."
      }
    },
    "/config/data-store/{group_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete data_store details for the given group-name, or as per the keys passed in query.",
        "operationId": "delete_data_store",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of dashboard",
            "in": "query",
            "name": "key",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "description": "Group name",
            "in": "path",
            "name": "group_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete dashboard details.",
        "tags": [
          "data-store"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve data_store details for the given group-name, or as per the keys passed in query.",
        "operationId": "retrieve_data_store",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Key of data_store object",
            "in": "query",
            "name": "key",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "description": "Group name",
            "in": "path",
            "name": "group_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/datastore_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete dashboard details.",
        "tags": [
          "data-store"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Store data-store details in database for the requested group name and key.",
        "operationId": "create_data_store",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Key of data_store object",
            "in": "query",
            "name": "key",
            "required": true,
            "type": "string"
          },
          {
            "description": "Value of data_store object",
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/datastore_schema"
            }
          },
          {
            "description": "Group name",
            "in": "path",
            "name": "group_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create dashboard details.",
        "tags": [
          "data-store"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update data-store details in database for the requested group name and key.",
        "operationId": "update_data_store",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "key of data_store",
            "in": "query",
            "name": "key",
            "required": true,
            "type": "string"
          },
          {
            "description": "value of data_store object",
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/datastore_schema"
            }
          },
          {
            "description": "Group name",
            "in": "path",
            "name": "group_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update data_store details.",
        "tags": [
          "data-store"
        ]
      }
    },
    "/config/instances-schedule-state/{group_type}/{group_name}/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve the scheduled state of instances with an active scheduler attached to it and present under the group with name passed in the path parameter.",
        "operationId": "retrieve_instances_schedule_state",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Group name",
            "in": "path",
            "name": "group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Group type",
            "in": "path",
            "name": "group_type",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/instances_schedule_state_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get scheduled state of playbook instances with schedule.",
        "tags": [
          "instance-schedule-state"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update the scheduled state of instances with active scheduler attached to it and present under the group with name passed in the path parameter.",
        "operationId": "update_instances_schedule_state",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Group name",
            "in": "path",
            "name": "group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Group type",
            "in": "path",
            "name": "group_type",
            "required": true,
            "type": "string"
          },
          {
            "description": "List of instances and their scheduled state",
            "in": "body",
            "name": "instances_schedule_state",
            "required": true,
            "schema": {
              "$ref": "#/definitions/instances_schedule_state_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update scheduled state of playbook instances with schedule.",
        "tags": [
          "instance-schedule-state"
        ]
      }
    },
    "/config/device-group/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get a list of all the device-group names.",
        "operationId": "retrieve_iceberg_device-group_device-group",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/iceberg/device-group/{device-group-name}/"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "device-group1",
                "device-group2"
              ]
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "List all device-group names.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/device-group/{device_group_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a device-group by `device-group-name`. Delete will fail if the device-group's services are running.",
        "operationId": "delete_iceberg_device-group_device-group_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of device-group-name",
            "in": "path",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete device-group.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get configuration details of a device group by the device group name.",
        "operationId": "retrieve_iceberg_device-group_device-group_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of device-group-name",
            "in": "path",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/device-group_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get device-group's configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a device-group by `device-group-name`. The `device-group-name` specified in URL and the request body must match. If the device-group already exists then, old content will be updated with the new content",
        "operationId": "create_iceberg_device-group_device-group_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of device-group-name",
            "in": "path",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "device_groupbody object",
            "in": "body",
            "name": "device_group",
            "required": true,
            "schema": {
              "$ref": "#/definitions/device-group_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create a device-group.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a device-group by its `device-group-name`. The `device-group-name` specified in the URL and the request body must match.",
        "operationId": "update_iceberg_device-group_device-group_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of device-group-name",
            "in": "path",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "device_groupbody object",
            "in": "body",
            "name": "device_group",
            "required": true,
            "schema": {
              "$ref": "#/definitions/device-group_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite a device-group.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/device-group/{device_group_name}/status/": {
      "get": {
        "description": "Get information about the status of a device-group's services.",
        "operationId": "retrieve_device_group_status",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of device-group",
            "in": "path",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Running status of device-group services",
            "schema": {
              "$ref": "#/definitions/serviceStatus"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get device-group's status.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/device-group/{device_group_name}/trigger_info/": {
      "get": {
        "description": "Get information about the triggers in a device-group.",
        "operationId": "retrieve_device_group_trigger_info",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of device-group",
            "in": "path",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger info for a device group.",
            "schema": {
              "$ref": "#/definitions/trigger_schema"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get device-group's trigger info.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/device-group/{device_group_name}/facts/": {
      "get": {
        "description": "Get the fact details of every device under given group",
        "operationId": "retrieve_iceberg_devices_facts_by_group",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of group",
            "in": "path",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          },
          {
            "description": "true will first update facts from device and then return facts",
            "in": "query",
            "name": "update",
            "type": "boolean",
            "required": false
          },
          {
            "description": "timeout in seconds to wait for facts from every device",
            "in": "query",
            "name": "timeout",
            "type": "integer",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/device_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get a devices facts for given group.",
        "tags": [
          "facts"
        ]
      }
    },
    "/config/device-groups/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all device-groups. Delete fails if services are still running for the device groups.",
        "operationId": "delete_iceberg_device-groups_device-groups_by_id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete all device-groups.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get configuration details of all the device-groups.",
        "operationId": "retrieve_iceberg_device-groups_device-groups",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/device-groups_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get all device-groups' configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "description": "Create/Update multiple device-groups. The new content for the existing device-groups updates the existing content and new device-groups are created.",
        "operationId": "create_iceberg_device-groups_device-groups_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "device-groupsbody object",
            "in": "body",
            "name": "device_groups",
            "required": true,
            "schema": {
              "$ref": "#/definitions/device-groups_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create multiple device-groups.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite the existing configuration of device-groups. New device-groups are created and the existing device-groups are overwritten with new content. If some existing device-groups are not present in the payload, such device-groups are deleted. This will fail if any of the device-groups that are not present in the payload have running services.",
        "operationId": "update_iceberg_device-groups_device-groups_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "device-groupsbody object",
            "in": "body",
            "name": "device_groups",
            "required": true,
            "schema": {
              "$ref": "#/definitions/device-groups_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite device-groups.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/deployed-device-details/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Get device-identifying details (device-id and TSDB databases if playbooks are deployed on it) for all the UUIDs present in the request body.",
        "operationId": "retrieve_healthbot_device_details_by_uuids",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "device_uuids object",
            "in": "body",
            "name": "uuid_object",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "uuids"
              ],
              "properties":{
                "uuids": {
                  "type": "array",
                  "description": "list of device uuids",
                  "items": {
                    "type": "string",
                    "x-path": "/iceberg/device/{uuid}/",
                    "format":  "uuid"
                  }
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/device-details_schema"
            },
            "examples": {
              "application/json": [
                {
                  "1000-1000-1000-1000": {
                    "device-id": "r1",
                    "groups": [
                        "Core1",
                        "Core2"
                    ],
                    "databases": {
                        "Core1": "Core1:r1",
                        "Core2": "Core2:r1"
                    }
                  }
                },
                {
                  "2000-2000-2000-2000": {
                      "device-id": "r2",
                      "groups": [
                          "Core1",
                          "Core3"
                      ],
                      "databases": {
                          "Core1": "Core1:r2",
                          "Core2": "Core3:r2"
                      }
                  }
                }
              ]
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "summary": "Get device-identifying details by for specified UUIDs."
      }
    },
    "/config/device/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get a list of all the device IDs.",
        "operationId": "retrieve_iceberg_device_device",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/iceberg/device/{device-id}/"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "dev1",
                "dev2"
              ]
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "List all device-ids.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/device/{device_id}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a device by `device-id`. Delete will fail if the device is being referenced by a device-group.",
        "operationId": "delete_iceberg_device_device_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of device-id",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete device.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of a device by its `device-id`.",
        "operationId": "retrieve_iceberg_device_device_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of device-id",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/device_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get a device's configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a device by `device-id`. The `device-id` specified in URL and the request body must match. If the device already exists then, old content will be updated with the new content.",
        "operationId": "create_iceberg_device_device_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of device-id",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "devicebody object",
            "in": "body",
            "name": "device",
            "required": true,
            "schema": {
              "$ref": "#/definitions/device_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create a device.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a device by device ID. The device ID specified in the URL and the request body must match.",
        "operationId": "update_iceberg_device_device_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of device-id",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "devicebody object",
            "in": "body",
            "name": "device",
            "required": true,
            "schema": {
              "$ref": "#/definitions/device_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite a device.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/device/{device_id}/facts/": {
      "get": {
        "description": "Get the fact details of a device by its `device-id`.",
        "operationId": "retrieve_iceberg_device_device_facts_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of device-id",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          },
          {
            "description": "true will first update facts from device and then return facts",
            "in": "query",
            "name": "update",
            "type": "boolean",
            "required": false
          },
          {
            "description": "timeout in seconds to wait for facts from given device id",
            "in": "query",
            "name": "timeout",
            "type": "integer",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/device_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get a device's facts.",
        "tags": [
          "facts"
        ]
      }
    },
    "/config/devices/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all devices. This will fail if any device is referenced in any device-group.",
        "operationId": "delete_iceberg_devices_devices_by_id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete all devices.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of all devices.",
        "operationId": "retrieve_iceberg_devices_devices",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/devices_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get all devices' configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "description": "Create/Update multiple devices. The new content for the existing devices updates the existing content and the new devices are created.",
        "operationId": "create_iceberg_devices_devices_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "devicesbody object",
            "in": "body",
            "name": "devices",
            "required": true,
            "schema": {
              "$ref": "#/definitions/devices_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create multiple devices.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite the existing configuration of devices. New devices are created and the existing devices are overwritten with new content. If some existing devices are not present in the payload, such devices are deleted. This will fail if any of the devices that are not present in the payload are referenced by a device-group.",
        "operationId": "update_iceberg_devices_devices_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "devicesbody object",
            "in": "body",
            "name": "devices",
            "required": true,
            "schema": {
              "$ref": "#/definitions/devices_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite devices.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/devices/facts/": {
      "get": {
        "description": "Get the fact details of every device",
        "operationId": "retrieve_iceberg_devices_devices_facts",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          },
          {
            "description": "true will first update facts from device and then return facts",
            "in": "query",
            "name": "update",
            "type": "boolean",
            "required": false
          },
          {
            "description": "timeout in seconds to wait for facts from every device",
            "in": "query",
            "name": "timeout",
            "type": "integer",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/device_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get devices facts.",
        "tags": [
          "facts"
        ]
      }
    },
    "/events/": {
      "get": {
        "description": "Get the list of all events. Filtering is possible with the use of various query parameters.",
        "operationId": "retrieve_events",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Starting timestamp",
            "format": "date-time",
            "in": "query",
            "name": "from_timestamp",
            "required": true,
            "type": "string"
          },
          {
            "description": "Ending timestamp",
            "format": "date-time",
            "in": "query",
            "name": "to_timestamp",
            "required": false,
            "type": "string"
          },
          {
            "description": "Color of events.",
            "in": "query",
            "name": "color",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "red",
              "yellow",
              "green",
              "gray"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "schema": {
              "items": {
                "$ref": "#/definitions/event"
              },
              "type": "array"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get all events."
      }
    },
    "/event/": {
      "get": {
        "description": "Get the list of events for a device. Filtering is possible with the use of various query parameters.",
        "operationId": "retrieve_event",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Starting timestamp",
            "format": "date-time",
            "in": "query",
            "name": "from_timestamp",
            "required": true,
            "type": "string"
          },
          {
            "description": "Ending timestamp",
            "format": "date-time",
            "in": "query",
            "name": "to_timestamp",
            "required": false,
            "type": "string"
          },
          {
            "description": "device-id of the device for which events are requested",
            "in": "query",
            "name": "device_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Device group's device-group-name of which the device is part",
            "in": "query",
            "name": "device_group_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Granularity of query",
            "in": "query",
            "name": "granularity",
            "pattern": "^[0-9]*['ns' | 'u' | '\u00b5' | 'ms' | 's' | 'm' | 'h' | 'd' | 'w']$",
            "required": false,
            "type": "string"
          },
          {
            "description": "Color of events.",
            "in": "query",
            "name": "color",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "red",
              "yellow",
              "green",
              "gray"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "schema": {
              "items": {
                "$ref": "#/definitions/event"
              },
              "type": "array"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get all events for a device."
      }
    },
    "/event/device-group/": {
      "get": {
        "description": "Get the list of events for a device-group. Filtering is possible with the use of various query parameters.",
        "operationId": "retrieve_event_device_group",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Starting timestamp",
            "format": "date-time",
            "in": "query",
            "name": "from_timestamp",
            "required": true,
            "type": "string"
          },
          {
            "description": "Ending timestamp",
            "format": "date-time",
            "in": "query",
            "name": "to_timestamp",
            "required": false,
            "type": "string"
          },
          {
            "description": "device_group_name of the device-group for which events are requested",
            "in": "query",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Granularity of query",
            "in": "query",
            "name": "granularity",
            "pattern": "^[0-9]*['ns' | 'u' | '\u00b5' | 'ms' | 's' | 'm' | 'h' | 'd' | 'w']$",
            "required": false,
            "type": "string"
          },
          {
            "description": "list of devices under a device-group to be fetched",
            "in": "query",
            "name": "device_id",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "description": "Color of events.",
            "in": "query",
            "name": "color",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "red",
              "yellow",
              "green",
              "gray"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "schema": {
              "items": {
                "$ref": "#/definitions/event"
              },
              "type": "array"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get all events for a device-group."
      }
    },
    "/event/device-group/{event_name}/": {
      "get": {
        "description": "Get instances of a specified device-group event. Filtering is possible with the use of various query parameters.",
        "operationId": "retrieve_event_by_event_name_device_group",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of event",
            "in": "path",
            "name": "event_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Starting timestamp",
            "format": "date-time",
            "in": "query",
            "name": "from_timestamp",
            "required": true,
            "type": "string"
          },
          {
            "description": "Ending timestamp",
            "format": "date-time",
            "in": "query",
            "name": "to_timestamp",
            "required": false,
            "type": "string"
          },
          {
            "description": "device_group_name of the device-group for which events are requested",
            "in": "query",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Granularity of query",
            "in": "query",
            "name": "granularity",
            "pattern": "^[0-9]*['ns' | 'u' | '\u00b5' | 'ms' | 's' | 'm' | 'h' | 'd' | 'w']$",
            "required": false,
            "type": "string"
          },
          {
            "description": "list of devices under a device-group to be fetched",
            "in": "query",
            "name": "device_id",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "description": "Color of events.",
            "in": "query",
            "name": "color",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "red",
              "yellow",
              "green",
              "gray"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Instance list of specified event",
            "schema": {
              "items": {
                "$ref": "#/definitions/event"
              },
              "type": "array"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get instances of a device-group event."
      }
    },
    "/event/network-group/": {
      "get": {
        "description": "Get the list of events for a network-group. Filtering is possible with the use of various query parameters.",
        "operationId": "retrieve_event_network_group",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Starting timestamp",
            "format": "date-time",
            "in": "query",
            "name": "from_timestamp",
            "required": true,
            "type": "string"
          },
          {
            "description": "Ending timestamp",
            "format": "date-time",
            "in": "query",
            "name": "to_timestamp",
            "required": false,
            "type": "string"
          },
          {
            "description": "network_group_name of the network-group for which events are requested",
            "in": "query",
            "name": "network_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Granularity of query",
            "in": "query",
            "name": "granularity",
            "pattern": "^[0-9]*['ns' | 'u' | '\u00b5' | 'ms' | 's' | 'm' | 'h' | 'd' | 'w']$",
            "required": false,
            "type": "string"
          },
          {
            "description": "Color of events.",
            "in": "query",
            "name": "color",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "red",
              "yellow",
              "green",
              "gray"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "schema": {
              "items": {
                "$ref": "#/definitions/event"
              },
              "type": "array"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get all events for a network-group."
      }
    },
    "/event/network-group/{event_name}/": {
      "get": {
        "description": "Get instances of a specified network-group event. Filtering is possible with the use of various query parameters.",
        "operationId": "retrieve_event_by_event_name_network_group",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of event",
            "in": "path",
            "name": "event_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Starting timestamp",
            "format": "date-time",
            "in": "query",
            "name": "from_timestamp",
            "required": true,
            "type": "string"
          },
          {
            "description": "Ending timestamp",
            "format": "date-time",
            "in": "query",
            "name": "to_timestamp",
            "required": false,
            "type": "string"
          },
          {
            "description": "network_group_name of the network-group for which events are requested",
            "in": "query",
            "name": "network_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Granularity of query",
            "in": "query",
            "name": "granularity",
            "pattern": "^[0-9]*['ns' | 'u' | '\u00b5' | 'ms' | 's' | 'm' | 'h' | 'd' | 'w']$",
            "required": false,
            "type": "string"
          },
          {
            "description": "Color of events.",
            "in": "query",
            "name": "color",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "red",
              "yellow",
              "green",
              "gray"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Instance list of specified event",
            "schema": {
              "items": {
                "$ref": "#/definitions/event"
              },
              "type": "array"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get instances of a network-group event."
      }
    },
    "/event/{event_name}/": {
      "get": {
        "description": "Get instances of a specified device event. Filtering is possible with the use of various query parameters.",
        "operationId": "retrieve_event_by_event_name",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of event",
            "in": "path",
            "name": "event_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Starting timestamp",
            "format": "date-time",
            "in": "query",
            "name": "from_timestamp",
            "required": true,
            "type": "string"
          },
          {
            "description": "Ending timestamp",
            "format": "date-time",
            "in": "query",
            "name": "to_timestamp",
            "required": false,
            "type": "string"
          },
          {
            "description": "device-id of the device for which events are requested",
            "in": "query",
            "name": "device_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "device-group-name of which the device is part",
            "in": "query",
            "name": "device_group_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Granularity of query",
            "in": "query",
            "name": "granularity",
            "pattern": "^[0-9]*['ns' | 'u' | '\u00b5' | 'ms' | 's' | 'm' | 'h' | 'd' | 'w']$",
            "required": false,
            "type": "string"
          },
          {
            "description": "Color of events.",
            "in": "query",
            "name": "color",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "red",
              "yellow",
              "green",
              "gray"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Instance list of specified event",
            "schema": {
              "items": {
                "$ref": "#/definitions/event"
              },
              "type": "array"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get instances of a device event."
      }
    },
    "/field-capture/": {
      "get": {
        "description": "Get the values of all fields",
        "operationId": "get_fields_from_xpath",
        "parameters": [
          {
            "description": "XPATH",
            "in": "query",
            "name": "xpath",
            "required": true,
            "type": "string"
          },
          {
            "description": "Timestamp",
            "in": "query",
            "name": "timestamp",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/field-capture_schema"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get last value of all fields before a given timestamp."
      }
    },
    "/config/files/helper-files/": {
      "get": {
        "description": "Get a list of all the helper-file file-names.",
        "operationId": "retrieve_files_helper_files",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Input path",
            "in": "query",
            "name": "input_path",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "file-1",
                "file-2"
              ]
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get all helper-file names."
      }
    },
    "/config/files/helper-files/{file_name}/": {
      "delete": {
        "description": "Delete the specified helper-file. Delete will not fail if the helper-file is being used by some service.",
        "operationId": "delete_files_helper_files_by_file_name",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "File name",
            "in": "path",
            "name": "file_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Input path",
            "in": "query",
            "name": "input_path",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete a helper-file."
      },
      "get": {
        "description": "Download the specified helper-file.",
        "operationId": "retrieve_files_helper_files_by_file_name",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "File name",
            "in": "path",
            "name": "file_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Input path",
            "in": "query",
            "name": "input_path",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "file"
            },
            "examples": {
              "application/json": "FILE CONTENT"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Download a helper-file."
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Upload the specified helper-file.",
        "operationId": "create_files_helper_files_by_file_name",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "File content",
            "in": "formData",
            "name": "up_file",
            "required": true,
            "type": "file"
          },
          {
            "description": "File name",
            "in": "path",
            "name": "file_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Upload a helper-file."
      }
    },
    "/grafana/restore/": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Restore Grafana configuration",
        "operationId": "restore_grafana",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "File content",
            "in": "formData",
            "name": "restore_file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Restore Grafana configuration"
      }
    },
    "/grafana/backup/": {
      "get": {
        "description": "Take backup of Grafana configuration",
        "operationId": "backup_grafana",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Take backup of Grafana configuration"
      }
    },
    "/config/files/helper-files/backup/": {
      "get": {
        "description": "Download helper files tar file, which will include the config and input directory.",
        "operationId": "backup_helper_files",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Download the tar file containing all helper files."
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Upload tar file of helper-files",
        "operationId": "restore_helper_files",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "File content",
            "in": "formData",
            "name": "restore_file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Upload a helper-file."
      }
    },
    "/config/files/certificates/{file_name}/": {
      "delete": {
        "description": "Delete the specified certificate-file. Delete will not fail if the certificate-file is being used by some service.",
        "operationId": "delete_files_certificates_by_file_name",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "File name",
            "in": "path",
            "name": "file_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Input path",
            "in": "query",
            "name": "input_path",
            "required": false,
            "type": "string"
          },
          {
            "description": "Certificate type",
            "in": "query",
            "name": "certificate_type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete a certificate-file."
      },
      "get": {
        "description": "Download the specified certificate-file.",
        "operationId": "retrieve_files_certificates_by_file_name",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "File name",
            "in": "path",
            "name": "file_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Input path",
            "in": "query",
            "name": "input_path",
            "required": false,
            "type": "string"
          },
          {
            "description": "Certificate type",
            "in": "query",
            "name": "certificate_type",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "file"
            },
            "examples": {
              "application/json": "FILE CONTENT"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Download a certificate-file."
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Upload the specified certificate-file.",
        "operationId": "create_files_certificates_by_file_name",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "File content",
            "in": "formData",
            "name": "up_file",
            "required": true,
            "type": "file"
          },
          {
            "description": "File name",
            "in": "path",
            "name": "file_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "password",
            "in": "query",
            "name": "password",
            "required": false,
            "type": "string"
          },
          {
            "description": "Certificate type",
            "in": "query",
            "name": "certificate_type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Upload a certificate file."
      }
    },
    "/config/sensor/device-group/{device_group_name}/": {
      "get": {
        "description": "GET sensors subscribed for a device-group",
        "operationId": "retrieve_sensor_device_group",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Device Group",
            "in": "path",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Subscribed sensors for device-group"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get all All API's.",
        "tags": [
          "system"
        ],
        "x-swagger-router-controller": "api_server.controllers.router"
      }
    },
    "/health-tree/device-group/{device_group_name}/": {
      "get": {
        "description": "Get health-tree of a specified device-group.",
        "operationId": "retrieve_health_tree_by_device_group",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "`device-group-name` of device-group",
            "in": "path",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Timestamp at which health tree is requested. If not specified, current server timestamp is used.",
            "format": "date-time",
            "in": "query",
            "name": "timestamp",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timestamp tolerance in seconds. With this option, health-tree will contain latest data between `timestamp-2*tolerance` and `timestamp`. Default value is `2*frequency` where `frequency` is extracted from `trigger`.",
            "format": "int64",
            "in": "query",
            "name": "tolerance",
            "required": false,
            "type": "integer"
          },
          {
            "description": "list of devices under a device-group to be fetched",
            "in": "query",
            "name": "device",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Health Tree of a device-group",
            "schema": {
              "$ref": "#/definitions/deviceGroupHealthTree"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get device-group health-tree."
      }
    },
    "/health-tree/network-group/{network_group_name}/": {
      "get": {
        "description": "Get health-tree of a specified network-group.",
        "operationId": "retrieve_health_tree_by_network_group",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "`network-group-name` of network-group",
            "in": "path",
            "name": "network_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Timestamp at which health tree is requested. If not specified, current server timestamp is used.",
            "format": "date-time",
            "in": "query",
            "name": "timestamp",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timestamp tolerance in seconds. With this option, health-tree will contain latest data between `timestamp-2*tolerance` and `timestamp`. Default value is `2*frequency` where `frequency` is extracted from `trigger`.",
            "format": "int64",
            "in": "query",
            "name": "tolerance",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Health Tree of network-group",
            "schema": {
              "$ref": "#/definitions/networkHealthTree"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get network-group health-tree."
      }
    },
    "/health-tree/{device_id}/": {
      "get": {
        "description": "Return health-tree of a specified device identified by `device-id`.",
        "operationId": "retrieve_health_tree_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "`device-id` of device",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Timestamp at which health tree is requested. If not specified, current server timestamp is used.",
            "format": "date-time",
            "in": "query",
            "name": "timestamp",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timestamp tolerance in seconds. With this option, health-tree will contain latest data between `timestamp-2*tolerance` and `timestamp`. Default value is `2*frequency` where `frequency` is extracted from `trigger`.",
            "format": "int64",
            "in": "query",
            "name": "tolerance",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Health Tree of device",
            "schema": {
              "$ref": "#/definitions/deviceHealthTree"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Return a device's health-tree."
      }
    },
    "/health/": {
      "get": {
        "description": "Returns health of network-groups and devices in device-groups",
        "operationId": "retrieve_health_all",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Dict of health of devices in device groups and network groups",
            "schema": {
              "$ref": "#/definitions/healthSchema"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Return a dict with health of devices in device groups and network groups"
      }
    },
    "/inspect/command-rpc/table/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Inspect the given iAgent table on a device and return the results.",
        "operationId": "inspect_command_rpc_table_on_device",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "command-rpc object",
            "in": "body",
            "name": "command_rpc_detail",
            "required": true,
            "schema": {
              "$ref": "#/definitions/command-rpc"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Inspect the given iAgent table."
      }
    },
    "/license/keys/": {
      "delete": {
        "description": "Delete all the previously added license keys.",
        "operationId": "delete_iceberg_delete_all_license",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete all licenses.",
        "tags": [
          "license"
        ]
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add license keys from file.",
        "operationId": "create_iceberg_add_license_from_file",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "License key file content",
            "in": "formData",
            "name": "license_file",
            "required": true,
            "type": "file"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "license-id": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "license-id": "license-id-string"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Add license from file.",
        "tags": [
          "license"
        ]
      },
      "get": {
        "description": "Get the list of all available license id's.",
        "operationId": "retrieve_iceberg_get_all_license_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "application/json": [
                "license-id-1",
                "license-id-2"
              ]
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of available license id's.",
        "tags": [
          "license"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update existing license keys with the new one provided in this request.",
        "operationId": "update_iceberg_replace_license",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "License raw keys contents",
            "in": "body",
            "name": "license_raw_keys",
            "required": true,
            "schema": {
              "$ref": "#/definitions/license-raw-keys_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "license-id": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "license-id": "license-id-string"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update the license.",
        "tags": [
          "license"
        ]
      }
    },
    "/license/key/{license_id}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a license matching the license id.",
        "operationId": "delete_iceberg_delete_license_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "License id",
            "in": "path",
            "name": "license_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete a license.",
        "tags": [
          "license"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Download the specified license file based on license id.",
        "operationId": "retrieve_iceberg_license_file_by_license_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "License id",
            "in": "path",
            "name": "license_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "file"
            },
            "examples": {
              "application/json": "LICENSE FILE CONTENT"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Download license file.",
        "tags": [
          "license"
        ]
      }
    },
    "/license/keys/contents/": {
      "get": {
        "description": "Get the license key contents for all the available licenses.",
        "operationId": "retrieve_iceberg_license_key_contents",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/license-keys_schema"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get the contents of all licenses.",
        "tags": [
          "license"
        ]
      }
    },
    "/license/key/{license_id}/contents/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the license key contents by the license id.",
        "operationId": "retrieve_iceberg_license_key_contents_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "License id",
            "in": "path",
            "name": "license_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/license-key_schema"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get the contents of a license.",
        "tags": [
          "license"
        ]
      }
    },
    "/license/status/": {
      "get": {
        "description": "Get the status of all the licensed features. Also provides the compliance info per feature",
        "operationId": "retrieve_iceberg_license_features_info",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/license-features_schema"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Status of all the licensed features.",
        "tags": [
          "license"
        ]
      }
    },
    "/logs/device-group/{device_group_name}/": {
      "get": {
        "description": "Get the logs for all the services for the given {device_group_name}",
        "operationId": "retrieve_logs_for_device_group",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Device group name",
            "in": "path",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Download the logs",
            "in": "query",
            "name": "download",
            "type": "boolean",
            "required": false,
            "default": true
          },
          {
            "description": "Name of the log file",
            "in": "query",
            "name": "filename",
            "type": "string",
            "required": false,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
            "maxLength": 64
          }
        ],
        "produces": [
          "application/gzip",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Logs for the given device-group.",
        "tags": [
          "logs"
        ]
      }
    },
    "/logs/device-group/{device_group_name}/service/{service_name}/": {
      "get": {
        "description": "Get the logs for the service {service_name} for the given {device_group_name}",
        "operationId": "retrieve_logs_for_device_group_service",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Device group name",
            "in": "path",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Device-group service name",
            "in": "path",
            "name": "service_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Download the logs",
            "in": "query",
            "name": "download",
            "type": "boolean",
            "required": false,
            "default": true
          },
          {
            "description": "Name of the log file",
            "in": "query",
            "name": "filename",
            "type": "string",
            "required": false,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
            "maxLength": 64
          },
          {
            "description": "Number of lines to show from the end of the logs",
            "in": "query",
            "name": "number_of_lines",
            "type": "integer",
            "minimum": 1,
            "maximum": 100000,
            "required": false,
            "default": 100000
          }
        ],
        "produces": [
          "application/gzip",
          "application/json",
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get the logs for the given service running for the given device-group.",
        "tags": [
          "logs"
        ]
      }
    },
    "/logs/network-group/{network_group_name}/": {
      "get": {
        "description": "Get the logs for the service {service_name} for the given {network_group_name}",
        "operationId": "retrieve_logs_for_network_group",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Network group name",
            "in": "path",
            "name": "network_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Download the logs",
            "in": "query",
            "name": "download",
            "type": "boolean",
            "required": false,
            "default": true
          },
          {
            "description": "Name of the log file",
            "in": "query",
            "name": "filename",
            "type": "string",
            "required": false,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
            "maxLength": 64
          }
        ],
        "produces": [
          "application/gzip",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Logs for the given network group.",
        "tags": [
          "logs"
        ]
      }
    },
    "/logs/network-group/{network_group_name}/service/{service_name}/": {
      "get": {
        "description": "Get the logs for all the services for the given {network_group_name}",
        "operationId": "retrieve_logs_for_network_group_service",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Network group name",
            "in": "path",
            "name": "network_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Network group service name",
            "in": "path",
            "name": "service_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Download the logs",
            "in": "query",
            "name": "download",
            "type": "boolean",
            "required": false,
            "default": true
          },
          {
            "description": "Name of the log file",
            "in": "query",
            "name": "filename",
            "type": "string",
            "required": false,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
            "maxLength": 64
          },
          {
            "description": "Number of lines to show from the end of the logs",
            "in": "query",
            "name": "number_of_lines",
            "type": "integer",
            "minimum": 1,
            "maximum": 100000,
            "required": false,
            "default": 100000
          }
        ],
        "produces": [
          "application/gzip",
          "application/json",
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get the logs for the given service running for the given network-group.",
        "tags": [
          "logs"
        ]
      }
    },
    "/config/dynamic-tagging/keys/":{
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: dynamic-tagging",
        "operationId": "retrieve_healthbot_dynamic_tagging",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve dynamic-tagging by ID"
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: dynamic-tagging",
        "operationId": "delete_healthbot_dynamic_tagging",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete dynamic-tagging by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: dynamic-tagging",
        "operationId": "create_healthbot_dynamic_tagging",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "dynamic_taggingbody object",
            "in": "body",
            "name": "dynamic_tagging",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dynamic_taggings_schema_object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create dynamic-tagging by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: dynamic-tagging",
        "operationId": "update_healthbot_dynamic_tagging",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "dynamic_taggingbody object",
            "in": "body",
            "name": "dynamic_tagging",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dynamic_taggings_schema_object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update dynamic-tagging by ID"
      }
    },
    "/config/dynamic-tagging/key/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get Value of corresponding key from dynamic-tagging",
        "operationId": "get_dynamic_tagging_by_key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Dynamic-tagging Key",
            "in": "query",
            "name": "key_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get value of corresponding Dynamic-tagging key"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a key in Dynamic-tagging",
        "operationId": "create_dynamic_tagging_by_key",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Dynamic-tagging Key",
            "in": "query",
            "name": "key_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Dynamic-tagging object containing key-value pair",
            "in": "body",
            "name": "dynamic_tagging_obj",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dynamic_tagging_schema_object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Creates Dynamic-tagging key-value"
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a key in Dynamic-tagging",
        "operationId": "delete_dynamic_tagging_by_key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Dynamic-tagging Key",
            "in": "query",
            "name": "key_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete Dynamic-tagging key-value"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of Dynamic-tagging key",
        "operationId": "update_dynamic_tagging_by_key",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Dynamic-tagging Key",
            "in": "query",
            "name": "key_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Dynamic-tagging object containing key-value pair",
            "in": "body",
            "name": "dynamic_tagging_obj",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dynamic_tagging_schema_object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Updates Dynamic-tagging key-value"
      }
    },
    "/debug/scenario/{scenario_name}/": {
      "post": {
        "description": "Run debugging for the given scenario name",
        "operationId": "retrieve_debug_for_scenario",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Scenario name",
            "in": "path",
            "name": "scenario_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Debug arguments object",
            "in": "body",
            "name": "debug_arguments",
            "schema": {
              "$ref": "#/definitions/debug-arguments_schema"
            },
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "properties": {
                  "detail": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "description": "URL to watch the debug job results"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Run debugging for the given scenario name",
        "tags": [
          "debug"
        ]
      }
    },
    "/debug/jobs/": {
      "get": {
        "description": "Return the status of the last \"/debug/\" job ",
        "operationId": "retrieve_debug_jobs",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Id of Job",
            "format": "uuid",
            "in": "query",
            "name": "job_id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful creation of job.",
            "schema": {
              "items": {
                "$ref": "#/definitions/debug-job-response_schema"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/configuration/": {
      "post": {
        "description": "Request Healthbot MGD service to generate the debug related configuration for healthbot debugger to consume.",
        "operationId": "healthbot_debug_generate_configuration",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "summary": "Request Healthbot MGD service to generate the debug related configuration for healthbot debugger to consume.",
        "tags": [
          "debug"
        ]
      }
    },
    "/config/network-group/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get a list of all the `network-group-name`s.",
        "operationId": "retrieve_iceberg_network-group_network-group",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/iceberg/network-group/{network-group-name}/"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "network-group1",
                "network-group2"
              ]
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "List all network-group names.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/network-group/{network_group_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a network-group by `network-group-name`. Delete will fail if the network-group's services are running.",
        "operationId": "delete_iceberg_network-group_network-group_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of network-group-name",
            "in": "path",
            "name": "network_group_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete network-group.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of a network group by its network group name.",
        "operationId": "retrieve_iceberg_network-group_network-group_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of network-group-name",
            "in": "path",
            "name": "network_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/network-group_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get network-group's configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a network-group by `network-group-name`. The `network-group-name` parameter specified in URL and the request body must match. If the network-group already exists then, the existing network-group's configuration will be updated with the new content.",
        "operationId": "create_iceberg_network-group_network-group_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of network-group-name",
            "in": "path",
            "name": "network_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "network_groupbody object",
            "in": "body",
            "name": "network_group",
            "required": true,
            "schema": {
              "$ref": "#/definitions/network-group_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create a network-group.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a network-group by the `network-group-name`. The `network-group-name` specified in the URL and the request body must match.",
        "operationId": "update_iceberg_network-group_network-group_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of network-group-name",
            "in": "path",
            "name": "network_group_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "network_groupbody object",
            "in": "body",
            "name": "network_group",
            "required": true,
            "schema": {
              "$ref": "#/definitions/network-group_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite a network-group.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/network-group/{network_group_name}/status/": {
      "get": {
        "description": "Get information about the status of a network-group's services.",
        "operationId": "retrieve_network_group_status",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of network-group",
            "in": "path",
            "name": "network_group_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/serviceStatus"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get network-group's status.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/network-group/{network_group_name}/trigger_info/": {
      "get": {
        "description": "Get information about the triggers in a device-group.",
        "operationId": "retrieve_network_group_trigger_info",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of network-group",
            "in": "path",
            "name": "network_group_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger info for a network group.",
            "schema": {
              "$ref": "#/definitions/trigger_schema"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Get network-group's trigger info.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/network-groups/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all network-groups. Delete will fail if services are still running for the network groups.",
        "operationId": "delete_iceberg_network-groups_network-groups_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete all network-groups.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get configuration of all network-groups.",
        "operationId": "retrieve_iceberg_network-groups_network-groups",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/network-groups_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get all network-groups' configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "description": "Create/Update multiple network-groups. The new content for the existing network-groups updates the existing content and the new network-groups are created.",
        "operationId": "create_iceberg_network-groups_network-groups_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "network-groupsbody object",
            "in": "body",
            "name": "network_groups",
            "required": true,
            "schema": {
              "$ref": "#/definitions/network-groups_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create multiple network-groups.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite the existing network-group configuration. New network-groups are created and the existing network-groups are overwritten with new content. If some of the existing network-groups are not present in the payload, such network-groups are deleted. This will fail if any of the network-groups that are not present in the payload have running services.",
        "operationId": "update_iceberg_network-groups_network-groups_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "network-groupsbody object",
            "in": "body",
            "name": "network_groups",
            "required": true,
            "schema": {
              "$ref": "#/definitions/network-groups_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite network-groups.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/notification/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get a list of all the `notification-name`s.",
        "operationId": "retrieve_iceberg_notification_notification",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/iceberg/notification/{notification-name}/"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "notification-1",
                "notification-2"
              ]
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "List all notification-names.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/notification/{notification_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a notification by `notification-name`. Delete will fail if the notification is referenced by a device-group.",
        "operationId": "delete_iceberg_notification_notification_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of notification-name",
            "in": "path",
            "name": "notification_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete a notification.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of a notification by `notification-name`.",
        "operationId": "retrieve_iceberg_notification_notification_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of notification-name",
            "in": "path",
            "name": "notification_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "application/x-gzip"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/notification_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get a notification's configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a notification by `notification-name`. The `notification-name` specified in URL and the request body must match. If the notification already exists then, the existing notification's configuration will be updated with the new content.",
        "operationId": "create_iceberg_notification_notification_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of notification-name",
            "in": "path",
            "name": "notification_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "notificationbody object",
            "in": "body",
            "name": "notification",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notification_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create a notification",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a notification by the `notification-name`. The `notification-name` specified in URL and the request body must match.",
        "operationId": "update_iceberg_notification_notification_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of notification-name",
            "in": "path",
            "name": "notification_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "notificationbody object",
            "in": "body",
            "name": "notification",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notification_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite a notification.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/notifications/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all notifications. This will fail if any notification is referenced in any device-group.",
        "operationId": "delete_iceberg_notifications_notifications_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete all notifications.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of all notifications.",
        "operationId": "retrieve_iceberg_notifications_notifications_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/notifications_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get all notifications' configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "description": "Create/Update multiple notifications. The new content for the existing notifications updates the existing content and the new notifications are created.",
        "operationId": "create_iceberg_notifications_notifications_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "notificationsbody object",
            "in": "body",
            "name": "notifications",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notifications_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create multiple notifications.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite the existing notifications configuration. New notifications are created and existing notifications are overwritten with new content. If some of the existing notifications are not present in the payload, such notifications are deleted. This will fail if any of the notifications that are not present in the payload are referenced by a device-group.",
        "operationId": "update_iceberg_notifications_notifications_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "notificationsbody object",
            "in": "body",
            "name": "notifications",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notifications_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite notifications.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/playbook/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get a list of all the `playbook-name`s.",
        "operationId": "retrieve_iceberg_playbook_playbook",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/iceberg/playbook/{playbook-name}/"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "playbook-1",
                "playbook-2"
              ]
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "List all playbook-names.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/playbook/{playbook_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a playbook by `playbook-name`. Delete will fail if the playbook is referenced by a device-group.",
        "operationId": "delete_iceberg_playbook_playbook_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of playbook-name",
            "in": "path",
            "name": "playbook_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete a playbook.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of a playbook by `playbook-name`.",
        "operationId": "retrieve_iceberg_playbook_playbook_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of playbook-name",
            "in": "path",
            "name": "playbook_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          },
          {
            "description": "Download as compressed .playbook file",
            "in": "query",
            "name": "download",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/playbook_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get a playbook's configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a playbook by `playbook-name`. The `playbook-name` specified in URL and the request body must match. If the playbook already exists then, the existing playbook's configuration will be updated with the new content.",
        "operationId": "create_iceberg_playbook_playbook_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of playbook-name",
            "in": "path",
            "name": "playbook_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "playbookbody object",
            "in": "body",
            "name": "playbook",
            "required": true,
            "schema": {
              "$ref": "#/definitions/playbook_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create a playbook.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a playbook by the `playbook-name`. The `playbook-name` specified in the URL and the request body must match.",
        "operationId": "update_iceberg_playbook_playbook_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of playbook-name",
            "in": "path",
            "name": "playbook_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "playbookbody object",
            "in": "body",
            "name": "playbook",
            "required": true,
            "schema": {
              "$ref": "#/definitions/playbook_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite a playbook.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/playbooks/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all playbooks. This will fail if any playbook is referenced in any device-group.",
        "operationId": "delete_iceberg_playbooks_playbooks_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete all playbooks.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration of all playbooks.",
        "operationId": "retrieve_iceberg_playbooks_playbooks_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/playbooks_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get all playbooks' configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "description": "Create/Update multiple playbooks. The new content for the existing playbooks updates the existing content and the new playbooks are created.",
        "operationId": "create_iceberg_playbooks_playbooks_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "playbooksbody object",
            "in": "body",
            "name": "playbooks",
            "required": true,
            "schema": {
              "$ref": "#/definitions/playbooks_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create multiple playbooks.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite the existing playbooks configuration. New playbooks are created and existing playbooks are overwritten with new content. If some of the existing playbooks are not present in the payload, such playbooks are deleted. This will fail if any of the playbooks that are not present in the payload are referenced by a device-group.",
        "operationId": "update_iceberg_playbooks_playbooks_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "playbooksbody object",
            "in": "body",
            "name": "playbooks",
            "required": true,
            "schema": {
              "$ref": "#/definitions/playbooks_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite all playbooks.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/profiles/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete entire profile configuration.",
        "operationId": "delete_iceberg_profiles",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete profile by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve entire profile configuration.",
        "operationId": "retrieve_iceberg_profiles",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/profiles_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve profile"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create entire profile configuration.",
        "operationId": "create_iceberg_profiles",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "profilebody object",
            "in": "body",
            "name": "profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profiles_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create profile by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update entire profile configuration.",
        "operationId": "update_iceberg_profiles",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "profilebody object",
            "in": "body",
            "name": "profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profiles_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update profile by ID"
      }
    },
    "/config/profile/security/ca-profiles/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve entire ca-profiles configuration.",
        "operationId": "retrieve_iceberg_profile_security_ca_profiles",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/profile/security/ca-profile/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve ca-profile"
      }
    },
    "/config/profile/security/ca-profile/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: ca-profile",
        "operationId": "delete_iceberg_profile_security_ca_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of ca-profile",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete ca-profile by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: ca-profile",
        "operationId": "retrieve_iceberg_profile_security_ca_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of ca-profile",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ca-profile_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve ca-profile by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: ca-profile",
        "operationId": "create_iceberg_profile_security_ca_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of ca-profile",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ca_profilebody object",
            "in": "body",
            "name": "ca_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ca-profile_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create ca-profile by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: ca-profile",
        "operationId": "update_iceberg_profile_security_ca_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of ca-profile",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ca_profilebody object",
            "in": "body",
            "name": "ca_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ca-profile_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update ca-profile by ID"
      }
    },
    "/config/profile/security/local-certificates/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve entire local-certificates configuration.",
        "operationId": "retrieve_iceberg_profile_security_local_certificates",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/profile/security/local-certificate/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve local-certificate"
      }
    },
    "/config/profile/security/local-certificate/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: local-certificate",
        "operationId": "delete_iceberg_profile_security_local_certificate_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of local-certificate",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete local-certificate by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: local-certificate",
        "operationId": "retrieve_iceberg_profile_security_local_certificate_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of local-certificate",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/local-certificate_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve local-certificate by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: local-certificate",
        "operationId": "create_iceberg_profile_security_local_certificate_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of local-certificate",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "local_certificatebody object",
            "in": "body",
            "name": "local_certificate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/local-certificate_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create local-certificate by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: local-certificate",
        "operationId": "update_iceberg_profile_security_local_certificate_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of local-certificate",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "local_certificatebody object",
            "in": "body",
            "name": "local_certificate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/local-certificate_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update local-certificate by ID"
      }
    },
    "/config/profile/security/ssh-key-profiles/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve entire ssh-key-profiles configuration.",
        "operationId": "retrieve_iceberg_profile_security_ssh_key_profiles",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/profile/security/ssh-key-profile/{name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve ssh-key-profile"
      }
    },
    "/config/profile/security/ssh-key-profile/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: ssh-key-profile",
        "operationId": "delete_iceberg_profile_security_ssh_key_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "description": "Name of ssh-key-profile",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete ssh-key-profile by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: ssh-key-profile",
        "operationId": "retrieve_iceberg_profile_security_ssh_key_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "description": "Name of ssh-key-profile",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ssh-key-profile_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve ssh-key-profile by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: ssh-key-profile",
        "operationId": "create_iceberg_profile_security_ssh_key_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "description": "Name of ssh-key-profile",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ssh_key_profilebody object",
            "in": "body",
            "name": "ssh_key_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ssh-key-profile_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create ssh-key-profile by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: ssh-key-profile",
        "operationId": "update_iceberg_profile_security_ssh_key_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "description": "Name of ssh-key-profile",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ssh_key_profilebody object",
            "in": "body",
            "name": "ssh_key_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ssh-key-profile_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update ssh-key-profile by ID"
      }
    },
    "/config/profile/data-summarizations/raw/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: raw-data-summarization",
        "operationId": "retrieve_iceberg_profile_data_summarizations_raw",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/raw_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve raw-data-summarization"
      }
    },
    "/config/profile/data-summarization/raw/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: raw data-summarization",
        "operationId": "delete_iceberg_profile_data_summarization_raw_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of raw-data-summarization",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete raw-data-summarization by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: raw-data-summarization",
        "operationId": "retrieve_iceberg_profile_data_summarization_raw_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of raw-data-summarization",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/raw_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve raw-data-summarization by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: raw-data-summarization",
        "operationId": "create_iceberg_profile_data_summarization_raw_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of raw-data-summarization",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "raw_data_summarizationbody object",
            "in": "body",
            "name": "raw_data_summarization",
            "required": true,
            "schema": {
              "$ref": "#/definitions/raw_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create raw-data-summarization by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: raw-data-summarization",
        "operationId": "update_iceberg_profile_data_summarization_raw_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of raw-data-summarization",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "raw_data_summarizationbody object",
            "in": "body",
            "name": "raw_data_summarization",
            "required": true,
            "schema": {
              "$ref": "#/definitions/raw_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update raw-data-summarization by ID"
      }
    },
    "/config/profile/rollup-summarization/field-profile/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: field-profile",
        "operationId": "retrieve_healthbot_profile_rollup_summarization_field_profile_profile",
        "parameters": [
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          },
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/rollup-summarizations_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve field-profile"
      }
    },
    "/config/profile/rollup-summarization/field-profile/{profile_id}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: field-profile",
        "operationId": "delete_healthbot_profile_rollup_summarization_field_profile_field_profile_by_id",
        "parameters": [
          {
            "description": "ID of profile-id",
            "in": "path",
            "name": "profile_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete field-profile by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: field-profile",
        "operationId": "retrieve_healthbot_profile_rollup_summarization_field_profile_field_profile_by_id",
        "parameters": [
          {
            "description": "ID of profile-id",
            "in": "path",
            "name": "profile_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          },
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/rollup-summarization_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve field-profile by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: field-profile",
        "operationId": "create_healthbot_profile_rollup_summarization_field_profile_field_profile_by_id",
        "parameters": [
          {
            "description": "ID of profile-id",
            "in": "path",
            "name": "profile_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "field_profilebody object",
            "in": "body",
            "name": "field_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rollup-summarization_schema"
            }
          },
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create field-profile by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: field-profile",
        "operationId": "update_healthbot_profile_rollup_summarization_field_profile_field_profile_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of profile-id",
            "in": "path",
            "name": "profile_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "field_profilebody object",
            "in": "body",
            "name": "field_profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rollup-summarization_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update field-profile by ID"
      }
    },
    "/config/retention-policies/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all the retention policies. This will fail if any retention-policy is referenced in any device-group.",
        "operationId": "delete_iceberg_retention_policies_retention_policies_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete all retention-policies.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration of all the retention-policies.",
        "operationId": "retrieve_iceberg_retention_policies_retention_policies_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/retention-policies_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get all retention-policies' configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "description": "Create/Update multiple retention-policies. The new content for the existing retention-policies update the existing content and the new retention-policies are created.",
        "operationId": "create_iceberg_retention_policies_retention_policies_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "retention-policiesbody object object",
            "in": "body",
            "name": "retention_policies",
            "required": true,
            "schema": {
              "$ref": "#/definitions/retention-policies_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create multiple retention-policies.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite the existing retention-policies configuration. New retention-policies are created and existing retention-policies are overwritten with new content. If some existing retention-policies are not present in the payload, such retention-policies are deleted. This will fail if any of the retention-policies that are not present in the payload are referenced by a device-group.",
        "operationId": "update_iceberg_retention_policies_retention_policies_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "retention-policies body object",
            "in": "body",
            "name": "retention_policies",
            "required": true,
            "schema": {
              "$ref": "#/definitions/retention-policies_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite all retention-policies.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/retention-policy/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get a list of all the `retention-policy-name`s.",
        "operationId": "retrieve_iceberg_retention-policy_retention-policy",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/iceberg/retention-policy/{retention-policy-name}/"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "retention-policy-1",
                "retention-policy-2"
              ]
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "List all retention-policy-names.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/retention-policy/{retention_policy_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a retention-policy by `retention-policy-name`. Delete will fail if the retention-policy is referenced by a device-group.",
        "operationId": "delete_iceberg_retention-policy_retention-policy_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of retention-policy-name",
            "in": "path",
            "name": "retention_policy_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete a retention-policy.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of a retention policy by `retention-policy-name`.",
        "operationId": "retrieve_iceberg_retention-policy_retention-policy_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of retention-policy-name",
            "in": "path",
            "name": "retention_policy_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/retention-policy_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get a retention-policy's configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a retention-policy by `retention-policy-name`. The `retention-policy-name` specified in URL and the request body must match. If the retention-policy exists then, the existing retention-policy's configuration will be updated by the new content.",
        "operationId": "create_iceberg_retention-policy_retention-policy_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of retention-policy-name",
            "in": "path",
            "name": "retention_policy_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "retention_policybody object",
            "in": "body",
            "name": "retention_policy",
            "required": true,
            "schema": {
              "$ref": "#/definitions/retention-policy_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create a retention-policy.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a retention-policy by the `retention-policy-name`. The `retention-policy-name` specified in URL and the request body must match.",
        "operationId": "update_iceberg_retention-policy_retention-policy_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of retention-policy-name",
            "in": "path",
            "name": "retention_policy_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "retention_policybody object",
            "in": "body",
            "name": "retention_policy",
            "required": true,
            "schema": {
              "$ref": "#/definitions/retention-policy_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite a retention-policy.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/sensors/": {
      "get": {
        "description": "Get a list of all the sensors for the filters provided. Filtering is possible with the use of query parameters.\nIf you have a sensor `/1/2/3/4/5/6/` and `sensor_name=/1`and `depth=3`, the result would be `/2/3/4`. If you use `append=true`, then the result would be `/1/2/3/4`.",
        "operationId": "retrieve_sensors",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Sensor name prefix.",
            "in": "query",
            "name": "sensor_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sensor type",
            "in": "query",
            "name": "sensor_type",
            "required": true,
            "type": "string",
            "enum": [
              "iagent",
              "snmp",
              "native-gpb",
              "server-monitoring",
              "open-config",
              "syslog",
              "byoi",
              "flow",
              "sflow"
            ]
          },
          {
            "description": "Relative depth to the `sensor_name`.",
            "in": "query",
            "name": "depth",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Returns full path of the sensor.",
            "in": "query",
            "name": "append",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Returns list of all the columns for the particular snmp_table",
            "in": "query",
            "name": "snmp_table",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of sensors available for the given depth for a sensor_name",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "sensor1",
                "sensor2"
              ]
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List all OpenConfig sensors."
      }
    },
    "/config/services/device-group/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the list of `device-group-name`s of device-groups whose services are running.",
        "operationId": "retrieve_services_device-groups_device-group_device-group",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "device-group-1",
                "device-group-2"
              ]
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get running `device-group-name`s.",
        "tags": [
          "services"
        ]
      }
    },
    "/config/services/device-group/{device_group_name}/": {
      "delete": {
        "description": "Stop and clean services of a device-group. This will remove all the services for a device-group, however, it  will not clean up the collected data.",
        "operationId": "delete_services_device-groups_device-group_by_device_group_name",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of device group",
            "in": "path",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Stop and remove a device-group's services.",
        "tags": [
          "services"
        ]
      },
      "post": {
        "description": "Start services of a device group. Use this to start stopped services.",
        "operationId": "create_services_device-groups_device-group_by_device_group_name",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of device group",
            "in": "path",
            "name": "device_group_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Start a device-group's services.",
        "tags": [
          "services"
        ]
      }
    },
    "/config/services/network-group/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the list of `network-group-name`s of network-groups whose services are running.",
        "operationId": "retrieve_services_network-group",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "network-group-1",
                "network-group-2"
              ]
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get running `network-group-name`s",
        "tags": [
          "services"
        ]
      }
    },
    "/config/services/network-group/{network_group_name}/": {
      "delete": {
        "description": "Stop and clean the services of a network group. This will remove all the services for a network-group, however, it will not clean up the collected data.",
        "operationId": "delete_services_network-group_by_network_group_name",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of network group",
            "in": "path",
            "name": "network_group_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Stop and remove a network-group's services.",
        "tags": [
          "services"
        ]
      },
      "post": {
        "description": "Start services of a network group. Use this to start stopped services.",
        "operationId": "create_services_network-group_by_network_group_name",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of network group",
            "in": "path",
            "name": "network_group_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Start a network-group's services.",
        "tags": [
          "services"
        ]
      }
    },
    "/config/app-settings/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "healthbot_alter_app_settings",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Maintenance endpoint to change app-settings. Not accessible externally.",
            "in": "body",
            "name": "app_settings",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "tags": [
          "administration"
        ],
        "summary": "Change runtime app-settings"
      }
    },
    "/config/system/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete system. This will delete all the reports, destinations and schedulers. The request will fail of any of the reports is being referenced by a device-group or network-group.",
        "operationId": "delete_iceberg_system_system_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete system",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve system details",
        "operationId": "retrieve_iceberg_system_system",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/system-settings_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve system data",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "description": "Create/Update system to populate persist-raw-data, schedulers, destinations and reports.",
        "operationId": "create_iceberg_system_system_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "system_settings body object",
            "in": "body",
            "name": "system_settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/system-settings_schema"
            }
          },
          {
            "description": "force update tsdb when force is set to True",
            "in": "query",
            "name": "force_tsdb",
            "required": false,
            "default": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create system",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "description": "New endpoint to over-write the existing configuration of system-settings. New system-settings are created and existing system-settings are overwritten with new content. If some existing system-settings are not present in the payload, such system settings are deleted. This will fail if any of the reports in system-settings that are not present in the payload are referenced by a device-group or network-group.",
        "operationId": "update_iceberg_system_system_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "system_settings body object",
            "in": "body",
            "name": "system_settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/system-settings_schema"
            }
          },
          {
            "description": "force update tsdb when force is set to True",
            "in": "query",
            "name": "force_tsdb",
            "required": false,
            "default": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update system by ID",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/system/schedulers/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all schedulers. This will fail if any scheduler is referenced in any report.",
        "operationId": "delete_iceberg_system_schedulers",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete schedulers by name",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of all schedulers.",
        "operationId": "retrieve_iceberg_system_schedulers",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/schedulers_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve schedulers by name",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update multiple schdeulers. The new content for the existing schedulers updates the existing content and the new schedulers are created.",
        "operationId": "create_iceberg_system_schedulers",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "schedulersbody object",
            "in": "body",
            "name": "schedulers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schedulers_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create schedulers by name",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: schedulers",
        "operationId": "update_iceberg_system_schedulers",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "schedulersbody object",
            "in": "body",
            "name": "schedulers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schedulers_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update schedulers by name",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/system/scheduler/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a scheduler by `name`. Delete will fail if the scheduler is being referenced by a report.",
        "operationId": "delete_iceberg_system_scheduler_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of Scheduler",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete scheduler by name",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of a scheduler by its `name`.",
        "operationId": "retrieve_iceberg_system_scheduler_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of Scheduler",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/scheduler_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve scheduler by name",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a scheduler by `name`. The `name` specified in URL and the request body must match. If the scheduler exists then, the existing scheduler's configuration will be updated by the new content.",
        "operationId": "create_iceberg_system_scheduler_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of Scheduler",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "schedulerbody object",
            "in": "body",
            "name": "scheduler",
            "required": true,
            "schema": {
              "$ref": "#/definitions/scheduler_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create scheduler by name",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a scheduler by scheduler name. The scheduler name specified in the URL and the request body must match.",
        "operationId": "update_iceberg_system_scheduler_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of Scheduler",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "schedulerbody object",
            "in": "body",
            "name": "scheduler",
            "required": true,
            "schema": {
              "$ref": "#/definitions/scheduler_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update scheduler by name",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/system/report-generation/destinations/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all destinations. This will fail if any destination is referenced in any report.",
        "operationId": "delete_iceberg_system_destinations",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete destinations by name",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of all destinations.",
        "operationId": "retrieve_iceberg_system_destinations",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/destinations_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve destinations by name",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update multiple destinations. The new content for the existing destinations updates the existing content and the new destinations are created.",
        "operationId": "create_iceberg_system_destinations",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "destinationsbody object",
            "in": "body",
            "name": "destinations",
            "required": true,
            "schema": {
              "$ref": "#/definitions/destinations_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create destinations by name",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite the existing configuration of destinations. New destinations are created and the existing destinations are overwritten with new content. If some existing destinations are not present in the payload, such destinations are deleted. This will fail if any of the destinations that are not present in the payload are referenced by a report.",
        "operationId": "update_iceberg_system_destinations",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "destinationsbody object",
            "in": "body",
            "name": "destinations",
            "required": true,
            "schema": {
              "$ref": "#/definitions/destinations_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update destinations by name",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/system/report-generation/destination/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a destination by `name`. Delete will fail if the destination is being referenced by a report.",
        "operationId": "delete_iceberg_system_destination_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of destination",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete destination by name",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of a destination by its `name`.",
        "operationId": "retrieve_iceberg_system_destination_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of destination",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/destination_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve destination by name",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a destination by `name`. The `name` specified in URL and the request body must match. If the destination exists then, the existing destination's configuration will be updated by the new content.",
        "operationId": "create_iceberg_system_destination_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of destination",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "destinationsbody object",
            "in": "body",
            "name": "destination",
            "required": true,
            "schema": {
              "$ref": "#/definitions/destination_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create destination by name",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a destination by destination name. The destination name specified in the URL and the request body must match.",
        "operationId": "update_iceberg_system_destination_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of destination",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "destinationsbody object",
            "in": "body",
            "name": "destination",
            "required": true,
            "schema": {
              "$ref": "#/definitions/destination_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update destination by name",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/system/report-generation/reports/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all reports. This will fail if any report is referenced in any device-group or network-group.",
        "operationId": "delete_iceberg_system_reports",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete reports by name",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of all reports.",
        "operationId": "retrieve_iceberg_system_reports",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/reports_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve reports by name",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update multiple reports. The new content for the existing reports updates the existing content and the new reports are created.",
        "operationId": "create_iceberg_system_reports",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "reportsbody object",
            "in": "body",
            "name": "reports",
            "required": true,
            "schema": {
              "$ref": "#/definitions/reports_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create reports by name",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite the existing configuration of reports. New reports are created and the existing reports are overwritten with new content. If some existing reports are not present in the payload, such reports are deleted. This will fail if any of the reports that are not present in the payload are referenced by a device-group or network-group.",
        "operationId": "update_iceberg_system_reports",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "reportsbody object",
            "in": "body",
            "name": "reports",
            "required": true,
            "schema": {
              "$ref": "#/definitions/reports_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update reports by name",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/system/report-generation/report/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a report by `name`. Delete will fail if the report is being referenced by a device-group or network-group.",
        "operationId": "delete_iceberg_system_report_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of report",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete report by name",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of a report by its `name`.",
        "operationId": "retrieve_iceberg_system_report_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of report",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/report_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve report by name",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a report by `name`. The `name` specified in URL and the request body must match. If the report exists then, the existing report's configuration will be updated by the new content.",
        "operationId": "create_iceberg_system_report_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of report",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "reportsbody object",
            "in": "body",
            "name": "report",
            "required": true,
            "schema": {
              "$ref": "#/definitions/report_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create report by name",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a report by report name. The report name specified in the URL and the request body must match.",
        "operationId": "update_iceberg_system_report_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of report",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "reportsbody object",
            "in": "body",
            "name": "report",
            "required": true,
            "schema": {
              "$ref": "#/definitions/report_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update report by name",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/system/tsdb/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: time-series-database",
        "operationId": "delete_healthbot_system_time-series-database_time-series-database_by_id",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete time-series-database"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: time-series-database",
        "operationId": "retrieve_healthbot_system_time-series-database_time-series-database",
        "parameters": [
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/tsdb_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve time-series-database"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: time-series-database",
        "operationId": "create_healthbot_system_time-series-database_time-series-database_by_id",
        "parameters": [
          {
            "description": "time_series_databasebody object",
            "in": "body",
            "name": "time_series_database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tsdb_schema"
            }
          },
          {
            "description": "force update tsdb when force is set to True",
            "in": "query",
            "name": "force_tsdb",
            "required": false,
            "default": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create time-series-database by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: time-series-database",
        "operationId": "update_healthbot_system_time-series-database_time-series-database_by_id",
        "parameters": [
          {
            "description": "time_series_databasebody object",
            "in": "body",
            "name": "time_series_database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tsdb_schema"
            }
          },
          {
            "description": "force update tsdb when force is set to True",
            "in": "query",
            "name": "force_tsdb",
            "required": false,
            "default": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update time-series-database by ID"
      }
    },
    "/config/system/trigger_action/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: trigger-action",
        "operationId": "delete_healthbot_system_trigger_action",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete trigger-action schedulers"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: trigger-action",
        "operationId": "retrieve_healthbot_system_trigger_action",
        "parameters": [
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/trigger_action_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve trigger-action"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: trigger-action",
        "operationId": "create_healthbot_system_trigger_action",
        "parameters": [
          {
            "description": "trigger_action object",
            "in": "body",
            "name": "trigger_action",
            "required": true,
            "schema": {
              "$ref": "#/definitions/trigger_action_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create trigger-action"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: trigger-action",
        "operationId": "update_healthbot_system_trigger_action",
        "parameters": [
          {
            "description": "trigger_action object",
            "in": "body",
            "name": "trigger_action",
            "required": true,
            "schema": {
              "$ref": "#/definitions/trigger_action_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update trigger-action"
      }
    },
    "/system-details/": {
      "get": {
        "description": "Retrieve system details for HealthBot system.",
        "operationId": "retrieve_system_details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "service name takes in the name of the service for which details are required.",
            "in": "query",
            "name": "service_name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Retrieve system details.",
        "tags": [
          "system"
        ]
      }
    },
    "/config/system-settings/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete system-settings. This will delete all the reports, destinations and schedulers. The request will fail of any of the reports is being referenced by a device-group or network-group.",
        "operationId": "delete_iceberg_system-settings_system-settings_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete system-settings",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve system-settings",
        "operationId": "retrieve_iceberg_system-settings_system-settings",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/system-settings_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve system-settings",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "description": "Create/Update system-settings to populate persis-raw-data, schedulers, destinations and reports.",
        "operationId": "create_iceberg_system-settings_system-settings_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "system_settings body object",
            "in": "body",
            "name": "system_settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/system-settings_schema"
            }
          },
          {
            "description": "force update tsdb when force is set to True",
            "in": "query",
            "name": "force_tsdb",
            "required": false,
            "default": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create system-settings",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "description": "Overwrite the existing configuration of system-settings. New system-settings are created and existing system-settings are overwritten with new content. If some existing system-settings are not present in the payload, such system-settings are deleted. This will fail if any of the reports in system-settings that are not present in the payload are referenced by a device-group or network-group.",
        "operationId": "update_iceberg_system-settings_system-settings_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "system_settingsbody object",
            "in": "body",
            "name": "system_settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/system-settings_schema"
            }
          },
          {
            "description": "force update tsdb when force is set to True",
            "in": "query",
            "name": "force_tsdb",
            "required": false,
            "default": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update system-settings by ID",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/system-settings/schedulers/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all schedulers. This will fail if any scheduler is referenced in any report.",
        "operationId": "delete_iceberg_system_settings_schedulers",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete schedulers by name",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of all schedulers.",
        "operationId": "retrieve_iceberg_system_settings_schedulers",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/schedulers_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve schedulers by name",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update multiple schdeulers. The new content for the existing schedulers updates the existing content and the new schedulers are created.",
        "operationId": "create_iceberg_system_settings_schedulers",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "schedulersbody object",
            "in": "body",
            "name": "schedulers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schedulers_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create schedulers by name",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: schedulers",
        "operationId": "update_iceberg_system_settings_schedulers",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "schedulersbody object",
            "in": "body",
            "name": "schedulers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schedulers_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update schedulers by name",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/system-settings/scheduler/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a scheduler by `name`. Delete will fail if the scheduler is being referenced by a report.",
        "operationId": "delete_iceberg_system_settings_scheduler_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of Scheduler",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete scheduler by name",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of a scheduler by its `name`.",
        "operationId": "retrieve_iceberg_system_settings_scheduler_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of Scheduler",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/scheduler_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve scheduler by name",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a scheduler by `name`. The `name` specified in URL and the request body must match. If the scheduler exists then, the existing scheduler's configuration will be updated by the new content.",
        "operationId": "create_iceberg_system_settings_scheduler_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of Scheduler",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "schedulerbody object",
            "in": "body",
            "name": "scheduler",
            "required": true,
            "schema": {
              "$ref": "#/definitions/scheduler_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create scheduler by name",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a scheduler by scheduler name. The scheduler name specified in the URL and the request body must match.",
        "operationId": "update_iceberg_system_settings_scheduler_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of Scheduler",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "schedulerbody object",
            "in": "body",
            "name": "scheduler",
            "required": true,
            "schema": {
              "$ref": "#/definitions/scheduler_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update scheduler by name",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/system-settings/report-generation/destinations/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all destinations. This will fail if any destination is referenced in any report.",
        "operationId": "delete_iceberg_system_settings_destinations",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete destinations by name",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of all destinations.",
        "operationId": "retrieve_iceberg_system_settings_destinations",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/destinations_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve destinations by name",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update multiple destinations. The new content for the existing destinations updates the existing content and the new destinations are created.",
        "operationId": "create_iceberg_system_settings_destinations",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "destinationsbody object",
            "in": "body",
            "name": "destinations",
            "required": true,
            "schema": {
              "$ref": "#/definitions/destinations_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create destinations by name",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite the existing configuration of destinations. New destinations are created and the existing destinations are overwritten with new content. If some existing destinations are not present in the payload, such destinations are deleted. This will fail if any of the destinations that are not present in the payload are referenced by a report.",
        "operationId": "update_iceberg_system_settings_destinations",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "destinationsbody object",
            "in": "body",
            "name": "destinations",
            "required": true,
            "schema": {
              "$ref": "#/definitions/destinations_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update destinations by name",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/system-settings/report-generation/destination/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a destination by `name`. Delete will fail if the destination is being referenced by a report.",
        "operationId": "delete_iceberg_system_settings_destination_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of destination",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete destination by name",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of a destination by its `name`.",
        "operationId": "retrieve_iceberg_system_settings_destination_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of destination",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/destination_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve destination by name",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a destination by `name`. The `name` specified in URL and the request body must match. If the destination exists then, the existing destination's configuration will be updated by the new content.",
        "operationId": "create_iceberg_system_settings_destination_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of destination",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "destinationsbody object",
            "in": "body",
            "name": "destination",
            "required": true,
            "schema": {
              "$ref": "#/definitions/destination_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create destination by name",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a destination by destination name. The destination name specified in the URL and the request body must match.",
        "operationId": "update_iceberg_system_settings_destination_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of destination",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "destinationsbody object",
            "in": "body",
            "name": "destination",
            "required": true,
            "schema": {
              "$ref": "#/definitions/destination_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update destination by name",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/system-settings/report-generation/reports/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all reports. This will fail if any report is referenced in any device-group or network-group.",
        "operationId": "delete_iceberg_system_settings_reports",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete reports by name",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of all reports.",
        "operationId": "retrieve_iceberg_system_settings_reports",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/reports_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve reports by name",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update multiple reports. The new content for the existing reports updates the existing content and the new reports are created.",
        "operationId": "create_iceberg_system_settings_reports",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "reportsbody object",
            "in": "body",
            "name": "reports",
            "required": true,
            "schema": {
              "$ref": "#/definitions/reports_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create reports by name",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite the existing configuration of reports. New reports are created and the existing reports are overwritten with new content. If some existing reports are not present in the payload, such reports are deleted. This will fail if any of the reports that are not present in the payload are referenced by a device-group or network-group.",
        "operationId": "update_iceberg_system_settings_reports",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "reportsbody object",
            "in": "body",
            "name": "reports",
            "required": true,
            "schema": {
              "$ref": "#/definitions/reports_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update reports by name",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/system-settings/report-generation/report/{name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a report by `name`. Delete will fail if the report is being referenced by a device-group or network-group.",
        "operationId": "delete_iceberg_system_settings_report_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of report",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete report by name",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of a report by its `name`.",
        "operationId": "retrieve_iceberg_system_settings_report_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of report",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/report_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve report by name",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a report by `name`. The `name` specified in URL and the request body must match. If the report exists then, the existing report's configuration will be updated by the new content.",
        "operationId": "create_iceberg_system_settings_report_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of report",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "reportsbody object",
            "in": "body",
            "name": "report",
            "required": true,
            "schema": {
              "$ref": "#/definitions/report_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create report by name",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a report by report name. The report name specified in the URL and the request body must match.",
        "operationId": "update_iceberg_system_settings_report_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of report",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "reportsbody object",
            "in": "body",
            "name": "report",
            "required": true,
            "schema": {
              "$ref": "#/definitions/report_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update report by name",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/topic/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get a list of all the `topic-name`s.",
        "operationId": "retrieve_iceberg_topic_topic",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/iceberg/topic/{topic-name}/"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "topic-1",
                "topic-2"
              ]
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "List all topic-names.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/topic/{topic_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a topic by `topic-name`. Delete will fail if the topic is referenced by any other playbook.",
        "operationId": "delete_iceberg_topic_topic_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of topic-name",
            "in": "path",
            "name": "topic_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete a topic.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of a topic by the `topic-name`.",
        "operationId": "retrieve_iceberg_topic_topic_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of topic-name",
            "in": "path",
            "name": "topic_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "application/x-gzip"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/topic_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get a topic's configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a topic by `topic-name`. The `topic-name` specified in URL and the request body must match. If the topic already exists then, the existing topic's configuration will be updated with the new content.",
        "operationId": "create_iceberg_topic_topic_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of topic-name",
            "in": "path",
            "name": "topic_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "topicbody object",
            "in": "body",
            "name": "topic",
            "required": true,
            "schema": {
              "$ref": "#/definitions/topic_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create a topic.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a topic by the `topic-name`. The `topic-name` specified in URL and the request body must match.",
        "operationId": "update_iceberg_topic_topic_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of topic-name",
            "in": "path",
            "name": "topic_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "topicbody object",
            "in": "body",
            "name": "topic",
            "required": true,
            "schema": {
              "$ref": "#/definitions/topic_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite a topic.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/topic/{topic_name}/rule/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get a list of all the `rule-name`s in a topic.",
        "operationId": "retrieve_iceberg_topic_rule_rule",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of topic-name",
            "in": "path",
            "name": "topic_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/iceberg/topic/{topic-name}/rule/{rule-name}/"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "rule-1",
                "rule-2"
              ]
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "List all rule-names in a topic.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/topic/{topic_name}/rule/{rule_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a rule by `rule-name`. Delete will fail if the rule is referenced by any other playbook.",
        "operationId": "delete_iceberg_topic_rule_rule_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of topic-name",
            "in": "path",
            "name": "topic_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of rule-name",
            "in": "path",
            "name": "rule_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete a rule.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of a rule by `rule-name`.",
        "operationId": "retrieve_iceberg_topic_rule_rule_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of topic-name",
            "in": "path",
            "name": "topic_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of rule-name",
            "in": "path",
            "name": "rule_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          },
          {
            "description": "Download a compressed .rule file",
            "in": "query",
            "name": "download",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/rule_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get a rule's configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a rule by `rule-name`. The `rule-name` specified in URL and the request body must match. If the rule already exists then, the existing rule's configuration will be updated with the new content",
        "operationId": "create_iceberg_topic_rule_rule_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of topic-name",
            "in": "path",
            "name": "topic_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of rule-name",
            "in": "path",
            "name": "rule_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "rulebody object",
            "in": "body",
            "name": "rule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rule_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create a rule.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a rule by the `rule-name`. The `rule-name` specified in URL and the request body must match.",
        "operationId": "update_iceberg_topic_rule_rule_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of topic-name",
            "in": "path",
            "name": "topic_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of rule-name",
            "in": "path",
            "name": "rule_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "rulebody object",
            "in": "body",
            "name": "rule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rule_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite a rule.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/topic/{topic_name}/resource/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get a list of all the resource-name`s in a topic",
        "operationId": "retrieve_healthbot_topic_resource_resource",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "description": "ID of topic-name",
            "in": "path",
            "name": "topic_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/topic/{topic-name}/resource/{resource-name}/"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                "resource-1",
                "resource-2"
              ]
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "List all resource-names in a topic"
      }
    },
    "/config/topic/{topic_name}/resource/{resource_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a resource by 'resource-name'",
        "operationId": "delete_healthbot_topic_resource_resource_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "description": "ID of topic-name",
            "in": "path",
            "name": "topic_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of resource-name",
            "in": "path",
            "name": "resource_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete resource",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of a resource by `resource-name`",
        "operationId": "retrieve_healthbot_topic_resource_resource_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "description": "ID of topic-name",
            "in": "path",
            "name": "topic_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of resource-name",
            "in": "path",
            "name": "resource_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          },
          {
            "description": "Download a compressed .resource file",
            "in": "query",
            "name": "download",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/resource_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get a resource's configuration"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update a resource by `resource-name`. The `resource-name` specified in URL and the request body must match. If the resource already exists then, the existing resource's configuration will be updated with the new content",
        "operationId": "create_healthbot_topic_resource_resource_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "description": "ID of topic-name",
            "in": "path",
            "name": "topic_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of resource-name",
            "in": "path",
            "name": "resource_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "resourcebody object",
            "in": "body",
            "name": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resource_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create a resource",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite a rule by the `resource-name`. The `resource-name` specified in URL and the request body must match.",
        "operationId": "update_healthbot_topic_resource_resource_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "description": "ID of topic-name",
            "in": "path",
            "name": "topic_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of resource-name",
            "in": "path",
            "name": "resource_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "resourcebody object",
            "in": "body",
            "name": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resource_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite a resource",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/topics/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all topics. This will fail if any topic is referenced in any playbook.",
        "operationId": "delete_iceberg_topics_topics_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete all topics.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of all topics.",
        "operationId": "retrieve_iceberg_topics_topics",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          },
          {
            "description": "asc/desc queries sorted configuration",
            "in": "query",
            "name": "sort",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/topics_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get all topics' configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "description": "Create/Update multiple topics. The new content for the existing topics updates the existing content and the new topics are created.",
        "operationId": "create_iceberg_topics_topics_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "topicsbody object",
            "in": "body",
            "name": "topics",
            "required": true,
            "schema": {
              "$ref": "#/definitions/topics_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create multiple topics.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite the existing topics configuration. New topics are created and existing topics are overwritten with new content. If some existing topics are not present in the payload, such topics are deleted. This will fail if any of the topics that are not present in the payload are referenced by a playbook.",
        "operationId": "update_iceberg_topics_topics_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "topicsbody object",
            "in": "body",
            "name": "topics",
            "required": true,
            "schema": {
              "$ref": "#/definitions/topics_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite topics.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/grafana/login/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Login to Grafana",
        "operationId": "grafana_login",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Login to grafana"
      }
    },
    "/login/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "User login and recive tokens",
        "operationId": "user_login",
        "parameters": [
          {
            "description": "topics body object",
            "in": "body",
            "name": "credential",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "userName",
                "password"
              ],
              "properties": {
                "userName": {
                  "type": "string",
                  "description": "username of the user"
                },
                "password": {
                  "type": "string",
                  "description": "Password of the user"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "description": "Access token generated by system"
                },
                "refreshToken": {
                  "type": "string",
                  "description": "Refresh token generated by system"
                },
                "refreshTokenExpires": {
                  "type": "string",
                  "description": "Refresh token validity duration"
                },
                "tokenExpires": {
                  "type": "string",
                  "description": "Access token validity duration"
                }
              }
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "User login",
        "tags": [
          "authentication"
        ]
      }
    },
    "/logout/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "User logout",
        "operationId": "user_logout",
        "parameters": [
          {
            "description": "request body object",
            "in": "body",
            "name": "refreshToken",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "Refresh token"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "User logout",
        "tags": [
          "authentication"
        ]
      }
    },
    "/token/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Re-issue tokens from existing token",
        "operationId": "refresh_token",
        "parameters": [
          {
            "description": "Token object",
            "in": "body",
            "name": "token",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "type": "string",
                  "description": "Refresh token"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "description": "Access token generated by system"
                },
                "refreshToken": {
                  "type": "string",
                  "description": "Refresh token generated by system"
                },
                "refreshTokenExpires": {
                  "type": "string",
                  "description": "Refresh token validity duration"
                },
                "tokenExpires": {
                  "type": "string",
                  "description": "Access token validity duration"
                }
              }
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Re-issue tokens from existing token",
        "tags": [
          "authentication"
        ]
      }
    },
    "/first-login/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Change password in first login",
        "operationId": "first_login",
        "parameters": [
          {
            "description": "set new password",
            "in": "body",
            "name": "credenetial",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "User email address"
                },
                "oldpassword": {
                  "type": "string",
                  "description": "Old password"
                },
                "newpassword": {
                  "type": "string",
                  "description": "New password"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Change password after first login",
        "tags": [
          "configuration"
        ]
      }
    },
    "/workflow-instance/{workflow_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: workflow instance",
        "operationId": "delete_healthbot_workflow_instance_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of the workflow",
            "in": "path",
            "name": "workflow_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of workflow instance",
            "name": "workflow_instance_name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete workflow instance by ID",
        "tags": [
          "workflow-instance"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: workflow instance",
        "operationId": "retrieve_healthbot_workflow_instance_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of the workflow",
            "in": "path",
            "name": "workflow_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the workflow instance",
            "name": "workflow_instance_name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "description": "Get extensive information including logs",
            "name": "extensive",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/workflow_instances_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve workflow by ID",
        "tags": [
          "workflow-instance"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: workflow instance",
        "operationId": "update_healthbot_workflow_instance_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of the workflow",
            "in": "path",
            "name": "workflow_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the update operation",
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the workflow instance",
            "name": "workflow_instance_name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/workflow_instances_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve workflow by ID",
        "tags": [
          "workflow-instance"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: workflow instance",
        "operationId": "create_healthbot_workflow_instance_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of workflow-name",
            "in": "path",
            "name": "workflow_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "workflowbody object",
            "in": "body",
            "name": "workflow",
            "required": false,
            "schema": {
              "$ref": "#/definitions/workflow_instance_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/workflow_instance_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create workflow by ID",
        "tags": [
          "workflow-instance"
        ]
      }
    },
    "/workflow-instances/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: workflow instances",
        "operationId": "delete_healthbot_workflow_instances",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete workflow by ID",
        "tags": [
          "workflow-instance"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of all workflow instances",
        "operationId": "retrieve_healthbot_workflow_instances",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/workflow_instances_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve workflow instances",
        "tags": [
          "workflow-instance"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of all workflow instances",
        "operationId": "update_healthbot_workflow_instances",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "Name of the update operation",
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/workflow_instances_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update workflow instances",
        "tags": [
          "workflow-instance"
        ]
      }
    },
    "/workflow-statistics/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of all workflow instances statistics",
        "operationId": "retrieve_healthbot_workflow_statistics",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/workflow_statistics_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve workflow statistics",
        "tags": [
          "workflow-statistics"
        ]
      }
    },
    "/config/workflow/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: workflow",
        "operationId": "retrieve_healthbot_workflow_workflow",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/workflow/{workflow-name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve workflow",
        "tags": [
          "workflow"
        ]
      }
    },
    "/config/workflow/{workflow_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: workflow",
        "operationId": "delete_healthbot_workflow_workflow_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of workflow-name",
            "in": "path",
            "name": "workflow_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete workflow by ID",
        "tags": [
          "workflow"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: workflow",
        "operationId": "retrieve_healthbot_workflow_workflow_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of workflow-name",
            "in": "path",
            "name": "workflow_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/workflow_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve workflow by ID",
        "tags": [
          "workflow"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: workflow",
        "operationId": "create_healthbot_workflow_workflow_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of workflow-name",
            "in": "path",
            "name": "workflow_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "workflowbody object",
            "in": "body",
            "name": "workflow",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflow_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create workflow by ID",
        "tags": [
          "workflow"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: workflow",
        "operationId": "update_healthbot_workflow_workflow_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of workflow-name",
            "in": "path",
            "name": "workflow_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "workflowbody object",
            "in": "body",
            "name": "workflow",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflow_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update workflow by ID",
        "tags": [
          "workflow"
        ]
      }
    },
    "/config/workflows/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: workflow",
        "operationId": "delete_healthbot_workflows_workflow_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete workflow by ID",
        "tags": [
          "workflow"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: workflow",
        "operationId": "retrieve_healthbot_workflows_workflow_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/workflows_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve workflow by ID",
        "tags": [
          "workflow"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create/Update multiple workflows. The new content for the existing workflows updates the existing content and the new workflows are created.",
        "operationId": "create_healthbot_workflows_workflow_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "workflowbody object",
            "in": "body",
            "name": "workflows",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflows_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create workflow by ID",
        "tags": [
          "workflow"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: workflow",
        "operationId": "update_healthbot_workflows_workflow_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "workflowbody object",
            "in": "body",
            "name": "workflows",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflows_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update workflow by ID",
        "tags": [
          "workflow"
        ]
      }
    },
    "/config/organization/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: organization",
        "operationId": "retrieve_healthbot_organization_organization",
        "parameters": [
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "type": "string",
                "x-path": "/healthbot/organization/{organization-name}/"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve organization"
      }
    },
    "/config/organizations/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete all organizations. This will fail if any organization edge is referenced in any device-group.",
        "operationId": "delete_healthbot_organizations_organizations",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete all organizations.",
        "tags": [
          "configuration"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the configuration details of all organizations.",
        "operationId": "retrieve_healthbot_organizations_organizations",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "true queries un-committed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/organizations_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Get all organizations' configuration.",
        "tags": [
          "configuration"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "description": "Create/Update multiple organizations. The new content for the existing organizations updates the existing content and the new organizations are created.",
        "operationId": "create_healthbot_organizations_organizations",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "organizations body object",
            "in": "body",
            "name": "organizations",
            "required": true,
            "schema": {
              "$ref": "#/definitions/organizations_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update or create multiple organizations.",
        "tags": [
          "configuration"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Overwrite the existing organizations configuration. New organizations are created and existing organizations are overwritten with new content. If some of the existing organizations are not present in the payload, such organizations are deleted. This will fail if any of the organization edges that are not present in the payload are referenced by a device-group.",
        "operationId": "update_healthbot_organizations_organizations",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "organizations body object",
            "in": "body",
            "name": "organizations",
            "required": true,
            "schema": {
              "$ref": "#/definitions/organizations_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Overwrite organizations.",
        "tags": [
          "configuration"
        ]
      }
    },
    "/config/organization/{organization_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: organization",
        "operationId": "delete_healthbot_organization_organization_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of organization-name",
            "in": "path",
            "name": "organization_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete organization by ID"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: organization",
        "operationId": "retrieve_healthbot_organization_organization_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of organization-name",
            "in": "path",
            "name": "organization_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/organization_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve organization by ID"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: organization",
        "operationId": "create_healthbot_organization_organization_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of organization-name",
            "in": "path",
            "name": "organization_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "organizationbody object",
            "in": "body",
            "name": "organization",
            "required": true,
            "schema": {
              "$ref": "#/definitions/organization_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create organization by ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: organization",
        "operationId": "update_healthbot_organization_organization_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of organization-name",
            "in": "path",
            "name": "organization_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "organizationbody object",
            "in": "body",
            "name": "organization",
            "required": true,
            "schema": {
              "$ref": "#/definitions/organization_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update organization by ID"
      }
    },
    "/config/organization/{organization_name}/site/{site_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: site",
        "operationId": "delete_healthbot_organization_site_site_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of organization-name",
            "in": "path",
            "name": "organization_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of site-name",
            "in": "path",
            "name": "site_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete site by ID",
        "tags": [
          "organization"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: site",
        "operationId": "retrieve_healthbot_organization_site_site_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of organization-name",
            "in": "path",
            "name": "organization_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of site-name",
            "in": "path",
            "name": "site_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/site_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve site by ID",
        "tags": [
          "organization"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: site",
        "operationId": "create_healthbot_organization_site_site_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of organization-name",
            "in": "path",
            "name": "organization_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of site-name",
            "in": "path",
            "name": "site_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "sitebody object",
            "in": "body",
            "name": "site",
            "required": true,
            "schema": {
              "$ref": "#/definitions/site_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create site by ID",
        "tags": [
          "organization"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: site",
        "operationId": "update_healthbot_organization_site_site_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of organization-name",
            "in": "path",
            "name": "organization_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of site-name",
            "in": "path",
            "name": "site_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "sitebody object",
            "in": "body",
            "name": "site",
            "required": true,
            "schema": {
              "$ref": "#/definitions/site_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update site by ID",
        "tags": [
          "organization"
        ]
      }
    },
    "/config/organization/{organization_name}/site/{site_name}/edge/{edge_name}/": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete operation of resource: edge",
        "operationId": "delete_healthbot_organization_site_edge_edge_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of organization-name",
            "in": "path",
            "name": "organization_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of site-name",
            "in": "path",
            "name": "site_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of edge-name",
            "in": "path",
            "name": "edge_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Delete edge by ID",
        "tags": [
          "organization"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve operation of resource: edge",
        "operationId": "retrieve_healthbot_organization_site_edge_edge_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of organization-name",
            "in": "path",
            "name": "organization_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of site-name",
            "in": "path",
            "name": "site_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of edge-name",
            "in": "path",
            "name": "edge_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "true queries undeployed configuration",
            "in": "query",
            "name": "working",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/edge_schema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Retrieve edge by ID",
        "tags": [
          "organization"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create operation of resource: edge",
        "operationId": "create_healthbot_organization_site_edge_edge_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of organization-name",
            "in": "path",
            "name": "organization_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of site-name",
            "in": "path",
            "name": "site_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of edge-name",
            "in": "path",
            "name": "edge_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "edgebody object",
            "in": "body",
            "name": "edge",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edge_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Create edge by ID",
        "tags": [
          "organization"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update operation of resource: edge",
        "operationId": "update_healthbot_organization_site_edge_edge_by_id",
        "parameters": [
          {
            "description": "authentication header object",
            "in": "header",
            "name": "x-iam-token",
            "type": "string"
          },
          {
            "description": "ID of organization-name",
            "in": "path",
            "name": "organization_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of site-name",
            "in": "path",
            "name": "site_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of edge-name",
            "in": "path",
            "name": "edge_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "edgebody object",
            "in": "body",
            "name": "edge",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edge_schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "summary": "Update edge by ID",
        "tags": [
          "organization"
        ]
      }
    }
  },
  "definitions": {
    "Error": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "detail": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "status",
        "detail"
      ],
      "type": "object"
    },
    "TsdbError": {
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "statement_id": {
                "type": "integer",
                "format": "int32"
              },
              "error": {
                "type": "string",
                "format": "string"
              }
            }
          }
        }
      }
    },
    "flow_schema": {
      "additionalProperties": false,
      "description": "Flow ingest configuration",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "flow": {
          "properties": {
            "template": {
              "items": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "description": {
                    "description": "Template description.",
                    "format": "string",
                    "type": "string"
                  },
                  "key-fields": {
                    "items": {
                      "description": "Fields over which points will be aggregated.",
                      "format": "string",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Name of the template.",
                    "format": "string",
                    "type": "string"
                  },
                  "priority": {
                    "description": "Priority given to template during matching.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "protocol-version": {
                    "description": "Flow protocol version.",
                    "enum": [
                      "v9",
                      "v10"
                    ],
                    "type": "string"
                  },
                  "recognition-pattern": {
                    "additionalProperties": false,
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "exclude-fields": {
                        "items": {
                          "description": "Fields that must not be present for template to be matched.",
                          "format": "string",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "include-fields": {
                        "items": {
                          "description": "Fields that must be present for template to be matched.",
                          "format": "string",
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "type": "array",
              "x-key": "name"
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "x-ref": [
        "flow-templates-group"
      ]
    },
    "sflow_schema": {
      "additionalProperties": false,
      "description": "sFlow ingest configuration",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "sflow": {
          "properties": {
            "counter-record": {
              "description": "Counter record formats",
              "items": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "enterprise": {
                    "description": "Enterprise to which record belongs",
                    "format": "int32",
                    "type": "integer"
                  },
                  "field": {
                    "description": "List of fields",
                    "items": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "description": {
                          "description": "Description of field",
                          "format": "string",
                          "type": "string"
                        },
                        "export-as": {
                          "description": "Export field as tag/field",
                          "enum": [
                            "tag",
                            "field"
                          ],
                          "type": "string"
                        },
                        "field-name": {
                          "description": "Field name that needs to be exported",
                          "format": "string",
                          "type": "string"
                        },
                        "next-header": {
                          "description": "Flag to indicate current field points to next header format",
                          "items": {
                            "type": "null"
                          },
                          "type": "array"
                        },
                        "size-based-on-field": {
                          "additionalProperties": false,
                          "description": "Current field size derived using previous field values",
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "then": {
                              "additionalProperties": false,
                              "description": "Field size to be considered when none of comparison passes",
                              "patternProperties": {
                                "^@": {
                                  "type": "object"
                                }
                              },
                              "properties": {
                                "size": {
                                  "description": "Default field size",
                                  "format": "string",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "when-equal": {
                              "description": "List of lhs, rhs, and field size for each comparison",
                              "items": {
                                "additionalProperties": false,
                                "patternProperties": {
                                  "^@": {
                                    "type": "object"
                                  }
                                },
                                "properties": {
                                  "left-operand": {
                                    "description": "Left operand can be integer constant or '$' prefixed previous field name",
                                    "format": "string",
                                    "type": "string"
                                  },
                                  "right-operand": {
                                    "description": "Right operand can be integer constant or '$' prefixed previous field name",
                                    "format": "string",
                                    "type": "string"
                                  },
                                  "then": {
                                    "additionalProperties": false,
                                    "description": "Field size to be considered if when-equal is true",
                                    "patternProperties": {
                                      "^@": {
                                        "type": "object"
                                      }
                                    },
                                    "properties": {
                                      "size": {
                                        "description": "Field size",
                                        "format": "string",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "then",
                                  "right-operand",
                                  "left-operand"
                                ]
                              },
                              "type": "array",
                              "x-key": "left-operand right-operand"
                            }
                          },
                          "type": "object"
                        },
                        "size-in-bits": {
                          "description": "Field size in bits",
                          "format": "int32",
                          "type": "integer"
                        },
                        "type": {
                          "description": "Data type of field",
                          "enum": [
                            "number",
                            "string",
                            "IpAddress",
                            "hardwareAddr",
                            "numbers",
                            "ASPath"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "field-name"
                      ],
                      "x-ref": [
                        "sflow-field-size-group"
                      ]
                    },
                    "minItems": 1,
                    "type": "array",
                    "x-key": "field-name"
                  },
                  "format": {
                    "description": "Format of record",
                    "format": "int32",
                    "type": "integer"
                  },
                  "record-name": {
                    "description": "Name of record",
                    "format": "string",
                    "type": "string"
                  }
                },
                "required": [
                  "format",
                  "record-name",
                  "enterprise",
                  "field"
                ],
                "x-ref": [
                  "sflow-record-group",
                  "sflow-fields-group"
                ]
              },
              "type": "array",
              "x-key": "record-name"
            },
            "flow-record": {
              "description": "Flow record formats",
              "items": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "enterprise": {
                    "description": "Enterprise to which record belongs",
                    "format": "int32",
                    "type": "integer"
                  },
                  "field": {
                    "description": "List of fields",
                    "items": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "description": {
                          "description": "Description of field",
                          "format": "string",
                          "type": "string"
                        },
                        "export-as": {
                          "description": "Export field as tag/field",
                          "enum": [
                            "tag",
                            "field"
                          ],
                          "type": "string"
                        },
                        "field-name": {
                          "description": "Field name that needs to be exported",
                          "format": "string",
                          "type": "string"
                        },
                        "next-header": {
                          "description": "Flag to indicate current field points to next header format",
                          "items": {
                            "type": "null"
                          },
                          "type": "array"
                        },
                        "size-based-on-field": {
                          "additionalProperties": false,
                          "description": "Current field size derived using previous field values",
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "then": {
                              "additionalProperties": false,
                              "description": "Field size to be considered when none of comparison passes",
                              "patternProperties": {
                                "^@": {
                                  "type": "object"
                                }
                              },
                              "properties": {
                                "size": {
                                  "description": "Default field size",
                                  "format": "string",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "when-equal": {
                              "description": "List of lhs, rhs, and field size for each comparison",
                              "items": {
                                "additionalProperties": false,
                                "patternProperties": {
                                  "^@": {
                                    "type": "object"
                                  }
                                },
                                "properties": {
                                  "left-operand": {
                                    "description": "Left operand can be integer constant or '$' prefixed previous field name",
                                    "format": "string",
                                    "type": "string"
                                  },
                                  "right-operand": {
                                    "description": "Right operand can be integer constant or '$' prefixed previous field name",
                                    "format": "string",
                                    "type": "string"
                                  },
                                  "then": {
                                    "additionalProperties": false,
                                    "description": "Field size to be considered if when-equal is true",
                                    "patternProperties": {
                                      "^@": {
                                        "type": "object"
                                      }
                                    },
                                    "properties": {
                                      "size": {
                                        "description": "Field size",
                                        "format": "string",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "then",
                                  "right-operand",
                                  "left-operand"
                                ]
                              },
                              "type": "array",
                              "x-key": "left-operand right-operand"
                            }
                          },
                          "type": "object"
                        },
                        "size-in-bits": {
                          "description": "Field size in bits",
                          "format": "int32",
                          "type": "integer"
                        },
                        "type": {
                          "description": "Data type of field",
                          "enum": [
                            "number",
                            "string",
                            "IpAddress",
                            "hardwareAddr",
                            "numbers",
                            "ASPath"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "field-name"
                      ],
                      "x-ref": [
                        "sflow-field-size-group"
                      ]
                    },
                    "minItems": 1,
                    "type": "array",
                    "x-key": "field-name"
                  },
                  "format": {
                    "description": "Format of record",
                    "format": "int32",
                    "type": "integer"
                  },
                  "record-name": {
                    "description": "Name of record",
                    "format": "string",
                    "type": "string"
                  }
                },
                "required": [
                  "format",
                  "record-name",
                  "enterprise",
                  "field"
                ],
                "x-ref": [
                  "sflow-record-group",
                  "sflow-fields-group"
                ]
              },
              "type": "array",
              "x-key": "record-name"
            },
            "protocol": {
              "description": "Decoding schema for protocols found in sflow",
              "items": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "field": {
                    "description": "List of fields",
                    "items": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "description": {
                          "description": "Description of field",
                          "format": "string",
                          "type": "string"
                        },
                        "export-as": {
                          "description": "Export field as tag/field",
                          "enum": [
                            "tag",
                            "field"
                          ],
                          "type": "string"
                        },
                        "field-name": {
                          "description": "Field name that needs to be exported",
                          "format": "string",
                          "type": "string"
                        },
                        "next-header": {
                          "description": "Flag to indicate current field points to next header format",
                          "items": {
                            "type": "null"
                          },
                          "type": "array"
                        },
                        "size-based-on-field": {
                          "additionalProperties": false,
                          "description": "Current field size derived using previous field values",
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "then": {
                              "additionalProperties": false,
                              "description": "Field size to be considered when none of comparison passes",
                              "patternProperties": {
                                "^@": {
                                  "type": "object"
                                }
                              },
                              "properties": {
                                "size": {
                                  "description": "Default field size",
                                  "format": "string",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "when-equal": {
                              "description": "List of lhs, rhs, and field size for each comparison",
                              "items": {
                                "additionalProperties": false,
                                "patternProperties": {
                                  "^@": {
                                    "type": "object"
                                  }
                                },
                                "properties": {
                                  "left-operand": {
                                    "description": "Left operand can be integer constant or '$' prefixed previous field name",
                                    "format": "string",
                                    "type": "string"
                                  },
                                  "right-operand": {
                                    "description": "Right operand can be integer constant or '$' prefixed previous field name",
                                    "format": "string",
                                    "type": "string"
                                  },
                                  "then": {
                                    "additionalProperties": false,
                                    "description": "Field size to be considered if when-equal is true",
                                    "patternProperties": {
                                      "^@": {
                                        "type": "object"
                                      }
                                    },
                                    "properties": {
                                      "size": {
                                        "description": "Field size",
                                        "format": "string",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "then",
                                  "right-operand",
                                  "left-operand"
                                ]
                              },
                              "type": "array",
                              "x-key": "left-operand right-operand"
                            }
                          },
                          "type": "object"
                        },
                        "size-in-bits": {
                          "description": "Field size in bits",
                          "format": "int32",
                          "type": "integer"
                        },
                        "type": {
                          "description": "Data type of field",
                          "enum": [
                            "number",
                            "string",
                            "IpAddress",
                            "hardwareAddr",
                            "numbers",
                            "ASPath"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "field-name"
                      ],
                      "x-ref": [
                        "sflow-field-size-group"
                      ]
                    },
                    "minItems": 1,
                    "type": "array",
                    "x-key": "field-name"
                  },
                  "number": {
                    "description": "Protocol number unique to each protocol",
                    "format": "int32",
                    "type": "integer"
                  },
                  "protocol-name": {
                    "description": "Name of protocol",
                    "format": "string",
                    "type": "string"
                  }
                },
                "required": [
                  "number",
                  "protocol-name",
                  "field"
                ],
                "x-ref": [
                  "sflow-fields-group"
                ]
              },
              "type": "array",
              "x-key": "protocol-name"
            },
            "sample": {
              "description": "Sample types and their header fields",
              "items": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "enterprise": {
                    "description": "Enterprise to which sample belongs",
                    "format": "int32",
                    "type": "integer"
                  },
                  "field": {
                    "description": "List of fields",
                    "items": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "description": {
                          "description": "Description of field",
                          "format": "string",
                          "type": "string"
                        },
                        "export-as": {
                          "description": "Export field as tag/field",
                          "enum": [
                            "tag",
                            "field"
                          ],
                          "type": "string"
                        },
                        "field-name": {
                          "description": "Field name that needs to be exported",
                          "format": "string",
                          "type": "string"
                        },
                        "next-header": {
                          "description": "Flag to indicate current field points to next header format",
                          "items": {
                            "type": "null"
                          },
                          "type": "array"
                        },
                        "size-based-on-field": {
                          "additionalProperties": false,
                          "description": "Current field size derived using previous field values",
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "then": {
                              "additionalProperties": false,
                              "description": "Field size to be considered when none of comparison passes",
                              "patternProperties": {
                                "^@": {
                                  "type": "object"
                                }
                              },
                              "properties": {
                                "size": {
                                  "description": "Default field size",
                                  "format": "string",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "when-equal": {
                              "description": "List of lhs, rhs, and field size for each comparison",
                              "items": {
                                "additionalProperties": false,
                                "patternProperties": {
                                  "^@": {
                                    "type": "object"
                                  }
                                },
                                "properties": {
                                  "left-operand": {
                                    "description": "Left operand can be integer constant or '$' prefixed previous field name",
                                    "format": "string",
                                    "type": "string"
                                  },
                                  "right-operand": {
                                    "description": "Right operand can be integer constant or '$' prefixed previous field name",
                                    "format": "string",
                                    "type": "string"
                                  },
                                  "then": {
                                    "additionalProperties": false,
                                    "description": "Field size to be considered if when-equal is true",
                                    "patternProperties": {
                                      "^@": {
                                        "type": "object"
                                      }
                                    },
                                    "properties": {
                                      "size": {
                                        "description": "Field size",
                                        "format": "string",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "then",
                                  "right-operand",
                                  "left-operand"
                                ]
                              },
                              "type": "array",
                              "x-key": "left-operand right-operand"
                            }
                          },
                          "type": "object"
                        },
                        "size-in-bits": {
                          "description": "Field size in bits",
                          "format": "int32",
                          "type": "integer"
                        },
                        "type": {
                          "description": "Data type of field",
                          "enum": [
                            "number",
                            "string",
                            "IpAddress",
                            "hardwareAddr",
                            "numbers",
                            "ASPath"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "field-name"
                      ],
                      "x-ref": [
                        "sflow-field-size-group"
                      ]
                    },
                    "minItems": 1,
                    "type": "array",
                    "x-key": "field-name"
                  },
                  "format": {
                    "description": "Format of sample",
                    "format": "int32",
                    "type": "integer"
                  },
                  "record-type": {
                    "description": "Type of records in this sample type",
                    "enum": [
                      "flow",
                      "counter"
                    ],
                    "type": "string"
                  },
                  "sample-name": {
                    "description": "Name of sample type",
                    "format": "string",
                    "type": "string"
                  }
                },
                "required": [
                  "format",
                  "sample-name",
                  "field",
                  "enterprise"
                ],
                "x-ref": [
                  "sflow-fields-group"
                ]
              },
              "type": "array",
              "x-key": "sample-name"
            }
          }
        }
      },
      "type": "object",
      "x-ref": [
        "sflow-ingest-group"
      ]
    },
    "frequency-profile_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "name": {
          "description": "Frequency profile name",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "non-sensor": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "frequency": {
                "description": "Sensor subscription duration. Specify integer >= 0 followed by s/m/h/d/w/y representing seconds/minutes/hours/days/weeks/years. Eg: 2s. A frequency of zero should be used only in case of events subscription",
                "pattern": "^[0-9]+(seconds|minutes|hours|days|weeks|years)$",
                "format": "string",
                "type": "string"
              },
              "rule-name": {
                "description": "Name of non-sensor or network rule i.e topic-name/rule-name",
                "format": "string",
                "type": "string"
              }
            },
            "required": [
              "frequency",
              "rule-name"
            ]
          },
          "type": "array",
          "x-key": "rule-name"
        },
        "sensor": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "frequency": {
                "description": "Sensor subscription duration. Specify integer >= 0 followed by seconds/minutes/hours/days/weeks/years. Eg: 2seconds. A frequency of zero should be used only in case of events subscription",
                "pattern": "^[0-9]+(seconds|minutes|hours|days|weeks|years)$",
                "format": "string",
                "type": "string"
              },
              "sensor-name": {
                "description": "Name of sensor. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "format": "string",
                "type": "string"
              }
            },
            "required": [
              "frequency",
              "sensor-name"
            ]
          },
          "type": "array",
          "x-key": "sensor-name"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "template_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Template description.",
          "format": "string",
          "type": "string"
        },
        "key-fields": {
          "items": {
            "description": "Fields over which points will be aggregated.",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the template.",
          "format": "string",
          "type": "string"
        },
        "priority": {
          "description": "Priority given to template during matching.",
          "format": "int32",
          "type": "integer"
        },
        "protocol-version": {
          "description": "Flow protocol version.",
          "enum": [
            "v9",
            "v10"
          ],
          "type": "string"
        },
        "recognition-pattern": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "exclude-fields": {
              "items": {
                "description": "Fields that must not be present for template to be matched.",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            },
            "include-fields": {
              "items": {
                "description": "Fields that must be present for template to be matched.",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "counter-record_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "enterprise": {
          "description": "Enterprise to which record belongs",
          "format": "int32",
          "type": "integer"
        },
        "field": {
          "description": "List of fields",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "description": {
                "description": "Description of field",
                "format": "string",
                "type": "string"
              },
              "export-as": {
                "description": "Export field as tag/field",
                "enum": [
                  "tag",
                  "field"
                ],
                "type": "string"
              },
              "field-name": {
                "description": "Field name that needs to be exported",
                "format": "string",
                "type": "string"
              },
              "next-header": {
                "description": "Flag to indicate current field points to next header format",
                "items": {
                  "type": "null"
                },
                "type": "array"
              },
              "size-based-on-field": {
                "additionalProperties": false,
                "description": "Current field size derived using previous field values",
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "then": {
                    "additionalProperties": false,
                    "description": "Field size to be considered when none of comparison passes",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "size": {
                        "description": "Default field size",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "when-equal": {
                    "description": "List of lhs, rhs, and field size for each comparison",
                    "items": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "left-operand": {
                          "description": "Left operand can be integer constant or '$' prefixed previous field name",
                          "format": "string",
                          "type": "string"
                        },
                        "right-operand": {
                          "description": "Right operand can be integer constant or '$' prefixed previous field name",
                          "format": "string",
                          "type": "string"
                        },
                        "then": {
                          "additionalProperties": false,
                          "description": "Field size to be considered if when-equal is true",
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "size": {
                              "description": "Field size",
                              "format": "string",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "required": [
                        "then",
                        "right-operand",
                        "left-operand"
                      ]
                    },
                    "type": "array",
                    "x-key": "left-operand right-operand"
                  }
                },
                "type": "object"
              },
              "size-in-bits": {
                "description": "Field size in bits",
                "format": "int32",
                "type": "integer"
              },
              "type": {
                "description": "Data type of field",
                "enum": [
                  "number",
                  "string",
                  "IpAddress",
                  "hardwareAddr",
                  "numbers",
                  "ASPath"
                ],
                "type": "string"
              }
            },
            "required": [
              "field-name"
            ],
            "x-ref": [
              "sflow-field-size-group"
            ]
          },
          "minItems": 1,
          "type": "array",
          "x-key": "field-name"
        },
        "format": {
          "description": "Format of record",
          "format": "int32",
          "type": "integer"
        },
        "record-name": {
          "description": "Name of record",
          "format": "string",
          "type": "string"
        }
      },
      "required": [
        "format",
        "record-name",
        "enterprise",
        "field"
      ],
      "type": "object",
      "x-ref": [
        "sflow-record-group",
        "sflow-fields-group"
      ]
    },
    "flow-record_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "enterprise": {
          "description": "Enterprise to which record belongs",
          "format": "int32",
          "type": "integer"
        },
        "field": {
          "description": "List of fields",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "description": {
                "description": "Description of field",
                "format": "string",
                "type": "string"
              },
              "export-as": {
                "description": "Export field as tag/field",
                "enum": [
                  "tag",
                  "field"
                ],
                "type": "string"
              },
              "field-name": {
                "description": "Field name that needs to be exported",
                "format": "string",
                "type": "string"
              },
              "next-header": {
                "description": "Flag to indicate current field points to next header format",
                "items": {
                  "type": "null"
                },
                "type": "array"
              },
              "size-based-on-field": {
                "additionalProperties": false,
                "description": "Current field size derived using previous field values",
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "then": {
                    "additionalProperties": false,
                    "description": "Field size to be considered when none of comparison passes",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "size": {
                        "description": "Default field size",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "when-equal": {
                    "description": "List of lhs, rhs, and field size for each comparison",
                    "items": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "left-operand": {
                          "description": "Left operand can be integer constant or '$' prefixed previous field name",
                          "format": "string",
                          "type": "string"
                        },
                        "right-operand": {
                          "description": "Right operand can be integer constant or '$' prefixed previous field name",
                          "format": "string",
                          "type": "string"
                        },
                        "then": {
                          "additionalProperties": false,
                          "description": "Field size to be considered if when-equal is true",
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "size": {
                              "description": "Field size",
                              "format": "string",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "required": [
                        "then",
                        "right-operand",
                        "left-operand"
                      ]
                    },
                    "type": "array",
                    "x-key": "left-operand right-operand"
                  }
                },
                "type": "object"
              },
              "size-in-bits": {
                "description": "Field size in bits",
                "format": "int32",
                "type": "integer"
              },
              "type": {
                "description": "Data type of field",
                "enum": [
                  "number",
                  "string",
                  "IpAddress",
                  "hardwareAddr",
                  "numbers",
                  "ASPath"
                ],
                "type": "string"
              }
            },
            "required": [
              "field-name"
            ],
            "x-ref": [
              "sflow-field-size-group"
            ]
          },
          "minItems": 1,
          "type": "array",
          "x-key": "field-name"
        },
        "format": {
          "description": "Format of record",
          "format": "int32",
          "type": "integer"
        },
        "record-name": {
          "description": "Name of record",
          "format": "string",
          "type": "string"
        }
      },
      "required": [
        "format",
        "record-name",
        "enterprise",
        "field"
      ],
      "type": "object",
      "x-ref": [
        "sflow-record-group",
        "sflow-fields-group"
      ]
    },
    "sample_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "enterprise": {
          "description": "Enterprise to which sample belongs",
          "format": "int32",
          "type": "integer"
        },
        "field": {
          "description": "List of fields",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "description": {
                "description": "Description of field",
                "format": "string",
                "type": "string"
              },
              "export-as": {
                "description": "Export field as tag/field",
                "enum": [
                  "tag",
                  "field"
                ],
                "type": "string"
              },
              "field-name": {
                "description": "Field name that needs to be exported",
                "format": "string",
                "type": "string"
              },
              "next-header": {
                "description": "Flag to indicate current field points to next header format",
                "items": {
                  "type": "null"
                },
                "type": "array"
              },
              "size-based-on-field": {
                "additionalProperties": false,
                "description": "Current field size derived using previous field values",
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "then": {
                    "additionalProperties": false,
                    "description": "Field size to be considered when none of comparison passes",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "size": {
                        "description": "Default field size",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "when-equal": {
                    "description": "List of lhs, rhs, and field size for each comparison",
                    "items": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "left-operand": {
                          "description": "Left operand can be integer constant or '$' prefixed previous field name",
                          "format": "string",
                          "type": "string"
                        },
                        "right-operand": {
                          "description": "Right operand can be integer constant or '$' prefixed previous field name",
                          "format": "string",
                          "type": "string"
                        },
                        "then": {
                          "additionalProperties": false,
                          "description": "Field size to be considered if when-equal is true",
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "size": {
                              "description": "Field size",
                              "format": "string",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "required": [
                        "then",
                        "right-operand",
                        "left-operand"
                      ]
                    },
                    "type": "array",
                    "x-key": "left-operand right-operand"
                  }
                },
                "type": "object"
              },
              "size-in-bits": {
                "description": "Field size in bits",
                "format": "int32",
                "type": "integer"
              },
              "type": {
                "description": "Data type of field",
                "enum": [
                  "number",
                  "string",
                  "IpAddress",
                  "hardwareAddr",
                  "numbers",
                  "ASPath"
                ],
                "type": "string"
              }
            },
            "required": [
              "field-name"
            ],
            "x-ref": [
              "sflow-field-size-group"
            ]
          },
          "minItems": 1,
          "type": "array",
          "x-key": "field-name"
        },
        "format": {
          "description": "Format of sample",
          "format": "int32",
          "type": "integer"
        },
        "record-type": {
          "description": "Type of records in this sample type",
          "enum": [
            "flow",
            "counter"
          ],
          "type": "string"
        },
        "sample-name": {
          "description": "Name of sample type",
          "format": "string",
          "type": "string"
        }
      },
      "required": [
        "format",
        "sample-name",
        "field",
        "enterprise"
      ],
      "type": "object",
      "x-ref": [
        "sflow-fields-group"
      ]
    },
    "protocol_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "field": {
          "description": "List of fields",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "description": {
                "description": "Description of field",
                "format": "string",
                "type": "string"
              },
              "export-as": {
                "description": "Export field as tag/field",
                "enum": [
                  "tag",
                  "field"
                ],
                "type": "string"
              },
              "field-name": {
                "description": "Field name that needs to be exported",
                "format": "string",
                "type": "string"
              },
              "next-header": {
                "description": "Flag to indicate current field points to next header format",
                "items": {
                  "type": "null"
                },
                "type": "array"
              },
              "size-based-on-field": {
                "additionalProperties": false,
                "description": "Current field size derived using previous field values",
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "then": {
                    "additionalProperties": false,
                    "description": "Field size to be considered when none of comparison passes",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "size": {
                        "description": "Default field size",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "when-equal": {
                    "description": "List of lhs, rhs, and field size for each comparison",
                    "items": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "left-operand": {
                          "description": "Left operand can be integer constant or '$' prefixed previous field name",
                          "format": "string",
                          "type": "string"
                        },
                        "right-operand": {
                          "description": "Right operand can be integer constant or '$' prefixed previous field name",
                          "format": "string",
                          "type": "string"
                        },
                        "then": {
                          "additionalProperties": false,
                          "description": "Field size to be considered if when-equal is true",
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "size": {
                              "description": "Field size",
                              "format": "string",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "required": [
                        "then",
                        "right-operand",
                        "left-operand"
                      ]
                    },
                    "type": "array",
                    "x-key": "left-operand right-operand"
                  }
                },
                "type": "object"
              },
              "size-in-bits": {
                "description": "Field size in bits",
                "format": "int32",
                "type": "integer"
              },
              "type": {
                "description": "Data type of field",
                "enum": [
                  "number",
                  "string",
                  "IpAddress",
                  "hardwareAddr",
                  "numbers",
                  "ASPath"
                ],
                "type": "string"
              }
            },
            "required": [
              "field-name"
            ],
            "x-ref": [
              "sflow-field-size-group"
            ]
          },
          "minItems": 1,
          "type": "array",
          "x-key": "field-name"
        },
        "number": {
          "description": "Protocol number unique to each protocol",
          "format": "int32",
          "type": "integer"
        },
        "protocol-name": {
          "description": "Name of protocol",
          "format": "string",
          "type": "string"
        }
      },
      "required": [
        "number",
        "protocol-name",
        "field"
      ],
      "type": "object",
      "x-ref": [
        "sflow-fields-group"
      ]
    },
    "native-gpb_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "native-gpb": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "port": {
              "description": "Port to listen for native-gpb messages",
              "format": "int32",
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "outbound-ssh_schema": {
      "additionalProperties": false,
      "description": "Outbound SSH ingest configuration",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "outbound-ssh": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "port": {
              "description": "Port to listen for Outbound SSH connection",
              "format": "int32",
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "syslog_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "syslog": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "port": {
              "description": "Port to listen for syslog messages, default is 514",
              "format": "int32",
              "type": "integer"
            },
            "header-pattern": {
              "items": {
                "$ref": "#/definitions/header-pattern_schema"
              },
              "type": "array",
              "x-key": "name"
            },
            "pattern": {
              "items": {
                "$ref": "#/definitions/pattern_schema"
              },
              "type": "array",
              "x-key": "name"
            },
            "pattern-set": {
              "items": {
                "$ref": "#/definitions/pattern-set_schema"
              },
              "type": "array",
              "x-key": "name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "pattern-set_schema": {
      "description": "Pattern-set details",
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Pattern-set description",
          "format": "string",
          "type": "string"
        },
        "name": {
          "description": "Name of a pattern-set. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "pattern-names": {
          "items": {
            "description": "Patterns associated with the pattern-set",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "pattern_schema": {
      "description": "Pattern details",
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "constant": {
          "description": "Constant details",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "description": {
                "description": "Constant description",
                "format": "string",
                "type": "string"
              },
              "name": {
                "description": "Constant field name",
                "format": "string",
                "type": "string"
              },
              "type": {
                "description": "Data type of constant field",
                "type": "string",
                "enum": [
                  "integer",
                  "unsigned-integer",
                  "float",
                  "string"
                ]
              },
              "value": {
                "description": "Value of the constant",
                "format": "string",
                "type": "string"
              }
            },
            "required": [
              "name",
              "value"
            ]
          },
          "type": "array",
          "x-key": "name"
        },
        "description": {
          "description": "Pattern description",
          "format": "string",
          "type": "string"
        },
        "event-id": {
          "description": "Event id that identifies a log uniquely. Field names also can be part of event-id. Example my-event+$field1",
          "format": "string",
          "type": "string"
        },
        "field": {
          "description": "Field details",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "description": {
                "description": "Field description",
                "format": "string",
                "type": "string"
              },
              "from": {
                "description": "Field that supplies the value. For a structured syslog, this will be the attribute name from the message. For a grok pattern, this will be name of the field given in the pattern. For a regex pattern, this will be the capture group number prefixed by $, eg: $1, $2",
                "format": "string",
                "type": "string"
              },
              "name": {
                "description": "Field name",
                "format": "string",
                "type": "string"
              },
              "type": {
                "description": "Data type of field",
                "type": "string",
                "enum": [
                  "integer",
                  "unsigned-integer",
                  "float",
                  "string"
                ]
              }
            },
            "required": [
              "name"
            ]
          },
          "type": "array",
          "x-key": "name"
        },
        "filter": {
          "description": "Filter to match a log line",
          "format": "string",
          "type": "string"
        },
        "filter-type": {
          "description": "Filter type, default is grok",
          "enum": [
            "grok"
          ],
          "type": "string"
        },
        "key-fields": {
          "items": {
            "description": "Key fields, can be a combination of fields and constants",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of a pattern. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        }
      },
      "required": [
        "name",
        "event-id"
      ],
      "type": "object",
      "x-ref": [
        "syslog-fields-group",
        "syslog-constants-group",
        "syslog-key-fields-group"
      ]
    },
    "header-pattern_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Pattern description",
          "format": "string",
          "type": "string"
        },
        "field": {
          "description": "Field details",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "description": {
                "description": "Field description",
                "format": "string",
                "type": "string"
              },
              "from": {
                "description": "Field that supplies the value. For a structured syslog, this will be the attribute name from the message. For a grok pattern, this will be name of the field given in the pattern. For a regex pattern, this will be the capture group number prefixed by $, eg: $1, $2",
                "format": "string",
                "type": "string"
              },
              "name": {
                "description": "Field name",
                "format": "string",
                "type": "string"
              },
              "type": {
                "enum": [
                  "integer",
                  "unsigned-integer",
                  "float",
                  "string"
                ],
                "type": "string"
              }
            },
            "required": [
              "name",
              "from"
            ]
          },
          "type": "array",
          "x-key": "name"
        },
        "filter": {
          "description": "Regex filter to parse syslog header",
          "format": "string",
          "type": "string"
        },
        "filter-type": {
          "description": "Filter type, default is regex",
          "enum": [
            "regex"
          ],
          "type": "string"
        },
        "key-fields": {
          "items": {
            "description": "Key fields, can be a combination of fields and constants",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of a pattern. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "minLength": 1,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        }
      },
      "required": [
        "name",
        "filter"
      ],
      "type": "object",
      "x-ref": [
        "syslog-fields-group",
        "syslog-key-fields-group"
      ]
    },
    "snmpv3-usm-user_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "authentication": {
          "additionalProperties": false,
          "description": "Configure authentication for the SNMPv3 user",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "passphrase": {
              "description": "Passphrase for SNMPv3 authentication",
              "format": "string",
              "maxLength": 1024,
              "minLength": 8,
              "type": "string"
            },
            "protocol": {
              "description": "SNMPv3 authentication protocol",
              "enum": [
                "MD5",
                "SHA",
                "SHA224",
                "SHA256",
                "SHA384",
                "SHA512"
              ],
              "type": "string"
            }
          },
          "required": [
            "protocol",
            "passphrase"
          ],
          "type": "object"
        },
        "authentication-none": {
          "description": "Configure no authentication for the SNMPv3 user",
          "items": {
            "type": "null"
          },
          "type": "array"
        },
        "privacy": {
          "additionalProperties": false,
          "description": "Configure privacy for the SNMPv3 user",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "passphrase": {
              "description": "Passphrase for SNMPv3 privacy",
              "format": "string",
              "maxLength": 1024,
              "minLength": 8,
              "type": "string"
            },
            "protocol": {
              "description": "SNMPv3 privacy protocol",
              "enum": [
                "DES",
                "AES",
                "AES192",
                "AES256",
                "AES192C",
                "AES256C",
                "3DES"
              ],
              "type": "string"
            }
          },
          "required": [
            "protocol",
            "passphrase"
          ],
          "type": "object"
        },
        "privacy-none": {
          "description": "Configure no privacy for the SNMPv3 user",
          "items": {
            "type": "null"
          },
          "type": "array"
        },
        "username": {
          "description": "SNMPv3 username",
          "format": "string",
          "maxLength": 255,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "username"
      ],
      "x-ref": [
        "snmpv3-usm-config"
      ],
      "type": "object"
    },
    "snmpv3-usm-users_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "users": {
          "items": {
            "$ref": "#/definitions/snmpv3-usm-user_schema"
          },
          "type": "array"
        }
      },
      "required": [
        "users"
      ],
      "type": "object"
    },
    "snmp-notification_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "snmp-notification": {
          "additionalProperties": false,
          "description": "SNMP Notification messages(Traps/Informs) ingest configuration",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "engine-id": {
              "description": "Autogenerated Engine-id for Healthbot in Hex Format Eg: '80001f8880bd5b8d052eb40d6000000000'",
              "format": "string",
              "maxLength": 64,
              "minLength": 5,
              "type": "string",
              "readOnly": true
            },
            "port": {
              "description": "Port to listen for SNMP Notification(Traps/Informs) messages",
              "format": "int32",
              "type": "integer"
            },
            "v3": {
              "additionalProperties": false,
              "description": "SNMP version 3 configuration for HealthBot",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "usm": {
                  "additionalProperties": false,
                  "description": "SNMP User Security Model configuration",
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "users": {
                      "items": {
                        "$ref": "#/definitions/snmpv3-usm-user_schema"
                      },
                      "type": "array",
                      "x-key": "username"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ingest-mapping_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "iAgent": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "for-device-groups": {
              "items": {
                "description": "Only map these device-groups",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            },
            "use-plugin": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "instance": {
                  "description": "Plugin instance name",
                  "format": "string",
                  "type": "string"
                },
                "name": {
                  "description": "BYOI plugin name",
                  "format": "string",
                  "type": "string"
                },
                "type": {
                  "description": "Plugin type",
                  "enum": [
                    "default-plugin"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type",
                "name"
              ],
              "type": "object"
            }
          },
          "type": "object",
          "x-choice": "ingest-type",
          "x-choice-case": "iagent",
          "x-ref": [
            "ingest-mapping-group"
          ]
        },
        "name": {
          "description": "Name of the mapping",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "native-gpb": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "for-device-groups": {
              "items": {
                "description": "Only map these device-groups",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            },
            "use-plugin": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "instance": {
                  "description": "Plugin instance name",
                  "format": "string",
                  "type": "string"
                },
                "name": {
                  "description": "BYOI plugin name",
                  "format": "string",
                  "type": "string"
                },
                "type": {
                  "description": "Plugin type",
                  "enum": [
                    "default-plugin"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type",
                "name"
              ],
              "type": "object"
            }
          },
          "type": "object",
          "x-choice": "ingest-type",
          "x-choice-case": "native-gpb",
          "x-ref": [
            "ingest-mapping-group"
          ]
        },
        "netflow": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "for-device-groups": {
              "items": {
                "description": "Only map these device-groups",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            },
            "use-plugin": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "instance": {
                  "description": "Plugin instance name",
                  "format": "string",
                  "type": "string"
                },
                "name": {
                  "description": "BYOI plugin name",
                  "format": "string",
                  "type": "string"
                },
                "type": {
                  "description": "Plugin type",
                  "enum": [
                    "default-plugin"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type",
                "name"
              ],
              "type": "object"
            }
          },
          "type": "object",
          "x-choice": "ingest-type",
          "x-choice-case": "netflow",
          "x-ref": [
            "ingest-mapping-group"
          ]
        },
        "open-config": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "for-device-groups": {
              "items": {
                "description": "Only map these device-groups",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            },
            "use-plugin": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "instance": {
                  "description": "Plugin instance name",
                  "format": "string",
                  "type": "string"
                },
                "name": {
                  "description": "BYOI plugin name",
                  "format": "string",
                  "type": "string"
                },
                "type": {
                  "description": "Plugin type",
                  "enum": [
                    "default-plugin"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type",
                "name"
              ],
              "type": "object"
            }
          },
          "type": "object",
          "x-choice": "ingest-type",
          "x-choice-case": "server-monitoring",
          "x-ref": [
            "ingest-mapping-group"
          ]
        },
        "server-monitoring": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "for-device-groups": {
              "items": {
                "description": "Only map these device-groups",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            },
            "use-plugin": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "instance": {
                  "description": "Plugin instance name",
                  "format": "string",
                  "type": "string"
                },
                "name": {
                  "description": "BYOI plugin name",
                  "format": "string",
                  "type": "string"
                },
                "type": {
                  "description": "Plugin type",
                  "enum": [
                    "default-plugin"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type",
                "name"
              ],
              "type": "object"
            }
          },
          "type": "object",
          "x-choice": "ingest-type",
          "x-choice-case": "open-config",
          "x-ref": [
            "ingest-mapping-group"
          ]
        },
        "server-monitoring": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "for-device-groups": {
              "items": {
                "description": "Only map these device-groups",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            },
            "use-plugin": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "instance": {
                  "description": "Plugin instance name",
                  "format": "string",
                  "type": "string"
                },
                "name": {
                  "description": "BYOI plugin name",
                  "format": "string",
                  "type": "string"
                },
                "type": {
                  "description": "Plugin type",
                  "enum": [
                    "default-plugin"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type",
                "name"
              ],
              "type": "object"
            }
          },
          "type": "object",
          "x-choice": "ingest-type",
          "x-choice-case": "server-monitoring",
          "x-ref": [
            "ingest-mapping-group"
          ]
        },
        "snmp": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "for-device-groups": {
              "items": {
                "description": "Only map these device-groups",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            },
            "use-plugin": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "instance": {
                  "description": "Plugin instance name",
                  "format": "string",
                  "type": "string"
                },
                "name": {
                  "description": "BYOI plugin name",
                  "format": "string",
                  "type": "string"
                },
                "type": {
                  "description": "Plugin type",
                  "enum": [
                    "default-plugin"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type",
                "name"
              ],
              "type": "object"
            }
          },
          "type": "object",
          "x-choice": "ingest-type",
          "x-choice-case": "snmp",
          "x-ref": [
            "ingest-mapping-group"
          ]
        },
        "syslog": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "for-device-groups": {
              "items": {
                "description": "Only map these device-groups",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            },
            "use-plugin": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "instance": {
                  "description": "Plugin instance name",
                  "format": "string",
                  "type": "string"
                },
                "name": {
                  "description": "BYOI plugin name",
                  "format": "string",
                  "type": "string"
                },
                "type": {
                  "description": "Plugin type",
                  "enum": [
                    "default-plugin"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type",
                "name"
              ],
              "type": "object"
            }
          },
          "type": "object",
          "x-choice": "ingest-type",
          "x-choice-case": "syslog",
          "x-ref": [
            "ingest-mapping-group"
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "ingest-mappings_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "ingest-mapping": {
          "items": {
            "$ref": "#/definitions/ingest-mapping_schema"
          },
          "type": "array"
        }
      },
      "required": [
        "ingest-mapping"
      ],
      "type": "object"
    },
    "custom-plugin_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "name": {
          "description": "Name is the identifier of this config, referred in sensor config under topic/rule",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "parameters": {
          "description": "Plugin specific parameters (config)",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "key": {
                "description": "Key of the parameter",
                "format": "string",
                "type": "string"
              },
              "value": {
                "description": "Value of the parameter",
                "format": "string",
                "type": "string"
              }
            },
            "required": [
              "key"
            ]
          },
          "type": "array",
          "x-key": "key"
        },
        "plugin-name": {
          "description": "Name of the loaded input plugin of BYOI",
          "format": "string",
          "type": "string"
        },
        "security-parameters": {
          "additionalProperties": false,
          "description": "Plugin specific security parameters",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "tls": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "ca-profile": {
                  "description": "CA profile name",
                  "format": "string",
                  "type": "string"
                },
                "insecure-skip-verify": {
                  "description": "Use TLS but skip verification of certificate chain and host",
                  "type": "boolean"
                },
                "local-certificate-profile": {
                  "description": "Local certificate profile name",
                  "format": "string",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "user-authentication": {
              "additionalProperties": false,
              "description": "User authentication",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "password": {
                  "description": "Password",
                  "format": "string",
                  "type": "string"
                },
                "username": {
                  "description": "Username",
                  "format": "string",
                  "type": "string"
                }
              },
              "required": [
                "username",
                "password"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group"
              ]
            }
          },
          "type": "object"
        },
        "service-name": {
          "description": "Name of the service (docker container) which implements this plugin",
          "format": "string",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "custom-plugins_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "custom-plugin": {
          "items": {
            "$ref": "#/definitions/custom-plugin_schema"
          },
          "type": "array"
        }
      },
      "required": [
        "custom-plugin"
      ],
      "type": "object"
    },
    "tlive-kafka-oc_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "brokers": {
          "items": {
            "description": "Kafka brokers in host/ip:port format",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "collector-settings": {
          "type": "object"
        },
        "name": {
          "description": "Name of this instance",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "security": {
          "additionalProperties": false,
          "description": "Security settings",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "sasl": {
              "additionalProperties": false,
              "description": "SASL user authentication",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "password": {
                  "description": "SASL password",
                  "format": "string",
                  "type": "string"
                },
                "username": {
                  "description": "SASL username",
                  "format": "string",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "tls": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "ca-profile": {
                  "description": "CA profile name",
                  "format": "string",
                  "type": "string"
                },
                "insecure-skip-verify": {
                  "description": "Use TLS but skip verification of certificate chain and host",
                  "type": "boolean"
                },
                "local-certificate-profile": {
                  "description": "Local certificate profile name",
                  "format": "string",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "topics": {
          "items": {
            "description": "List of Kafka topics",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "name",
        "brokers"
      ],
      "type": "object"
    },
    "tlive-kafka-ocs_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "tlive-kafka-oc": {
          "items": {
            "$ref": "#/definitions/tlive-kafka-oc_schema"
          },
          "type": "array"
        }
      },
      "required": [
        "tlive-kafka-oc"
      ],
      "type": "object"
    },
    "commit-job": {
      "properties": {
        "detail": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "status",
        "detail",
        "url"
      ],
      "type": "object"
    },
    "affected-groups": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "device-groups": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "network-groups": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "raw-data-summarizations_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "raw-data-summarization": {
          "items": {
            "$ref": "#/definitions/raw_schema"
          },
          "type": "array"
        }
      },
      "required": [
        "raw-data-summarization"
      ],
      "type": "object"
    },
    "raw_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "data-type": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "aggregation-functions": {
                "items": {
                  "description": "List of supported summarization aggregation functions",
                  "enum": [
                    "latest",
                    "sum",
                    "count",
                    "mean",
                    "min",
                    "max",
                    "on-change",
                    "stddev"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "name": {
                "description": "Name of the data-type for which summarization should be changed",
                "enum": [
                  "string",
                  "integer",
                  "unsigned-integer",
                  "boolean",
                  "float"
                ],
                "type": "string"
              }
            },
            "required": [
              "name",
              "aggregation-functions"
            ]
          },
          "type": "array",
          "x-key": "name"
        },
        "name": {
          "description": "Name of raw-data summarization profile",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "path": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "aggregation-functions": {
                "items": {
                  "description": "List of supported summarization aggregation functions",
                  "enum": [
                    "latest",
                    "sum",
                    "count",
                    "mean",
                    "min",
                    "max",
                    "on-change",
                    "stddev"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "name": {
                "description": "Sensor field path for which summarization should be changed. Apart from JTI OC sensor path, '<sensor-name>:' should be prepended to the sensor path",
                "format": "string",
                "type": "string",
                "minLength": 1,
                "maxLength": 255
              }
            },
            "required": [
              "name",
              "aggregation-functions"
            ]
          },
          "type": "array",
          "x-key": "name"
        }
      },
      "required": [
        "name"
      ],
      "type": "object",
      "x-ref": [
        "type-aggregate",
        "path-aggregate"
      ]
    },
    "rollup-summarization_schema": {
      "additionalProperties": false,
      "description": "Data rollup summarization",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
              "profile-id": {
                "description": "Profile-id of data rollup summarization instance. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "format": "string",
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_-]*\\.*)*$",
                "type": "string"
              },
              "rule": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "apply-on-existing-data": {
                      "description": "If configured, existing data will also be considered for roll up summarization, else only the newly incoming data will be considered",
                      "items": {
                        "type": "null"
                      },
                      "type": "array"
                    },
                    "field": {
                      "items": {
                        "additionalProperties": false,
                        "patternProperties": {
                          "^@": {
                            "type": "object"
                          }
                        },
                        "properties": {
                          "aggregate-function": {
                            "items": {
                              "description": "Aggregation function(s) for the field",
                              "enum": [
                                "mean",
                                "count",
                                "sum",
                                "std-dev",
                                "last",
                                "first",
                                "max",
                                "min",
                                "90pct",
                                "95pct",
                                "99pct"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "Name of the field. Should be of pattern [a-z][a-zA-Z0-9_-]*",
                            "format": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "pattern": "^[a-z][a-zA-Z0-9_-]*$",
                            "type": "string"
                          }
                        },
                        "required": [
                          "aggregate-function",
                          "name"
                        ]
                      },
                      "type": "array",
                      "x-key": "name"
                    },
                    "rule-name": {
                      "description": " Rule for which the roll-up summarization profile will be applied.",
                      "format": "string",
                      "maxLength": 129,
                      "minLength": 1,
                      "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9_-]*$",
                      "type": "string"
                    }
                  },
                  "required": [
                    "rule-name"
                  ],
                  "x-ref": [
                    "rollup-field-configs"
                  ]
                },
                "type": "array",
                "x-choice": "config-type",
                "x-choice-case": "rule",
                "x-key": "rule-name"
              },
              "database": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "database-name": {
                      "description": "Database for which the roll-up summarization profile will be applied.",
                      "format": "string",
                      "type": "string"
                    },
                    "measurement": {
                      "items": {
                        "additionalProperties": false,
                        "patternProperties": {
                          "^@": {
                            "type": "object"
                          }
                        },
                        "properties": {
                          "apply-on-existing-data": {
                            "description": "If configured, existing data will also be considered for roll up summarization, else only the newly incoming data will be considered",
                            "items": {
                              "type": "null"
                            },
                            "type": "array"
                          },
                          "field": {
                            "items": {
                              "additionalProperties": false,
                              "patternProperties": {
                                "^@": {
                                  "type": "object"
                                }
                              },
                              "properties": {
                                "aggregate-function": {
                                  "items": {
                                    "description": "Aggregation function(s) for the field",
                                    "enum": [
                                      "mean",
                                      "count",
                                      "sum",
                                      "std-dev",
                                      "last",
                                      "first",
                                      "max",
                                      "min",
                                      "90pct",
                                      "95pct",
                                      "99pct"
                                    ],
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "name": {
                                  "description": "Name of the field. Should be of pattern [a-z][a-zA-Z0-9_-]*",
                                  "format": "string",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "aggregate-function",
                                "name"
                              ]
                            },
                            "type": "array",
                            "x-key": "name"
                          },
                          "measurement-name": {
                            "description": "Measurement of the database for which the roll-up summarization profile will be applied.",
                            "format": "string",
                            "type": "string"
                          }
                        },
                        "required": [
                          "measurement-name"
                        ],
                        "x-ref": [
                          "rollup-field-configs"
                        ]
                      },
                      "type": "array",
                      "x-key": "measurement-name"
                    }
                  },
                  "required": [
                    "database-name"
                  ]
                },
                "type": "array",
                "x-choice": "config-type",
                "x-choice-case": "database",
                "x-key": "database-name"
              },
              "data-rollup-order": {
                "description": "List of data-roll up orders",
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "instance-id": {
                      "description": "Instance-id/aggregation-id of data rollup summarization instance. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                      "format": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_-]*\\.*)*$",
                      "type": "string"
                    },
                    "interval": {
                      "description": "Time interval for the data roll up to occur( m/h/d/w representing minutes/hours/days/weeks. Min value: 30m, Max value: 52w ) ",
                      "format": "string",
                      "pattern": "^[1-9][0-9]*[mhdw]$",
                      "type": "string"
                    },
                    "retention-policy": {
                      "description": "Retention policy for the data-rollup instance. If not configured, default retention policy will be considered",
                      "maxLength": 64,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                      "type": "string",
                      "x-path": "../../../../../retention-policy/retention-policy-name"
                    }
                  },
                  "required": [
                    "interval",
                    "instance-id"
                  ],
                  "x-ref": [
                    "rollup-orders"
                  ]
                },
                "type": "array",
                "x-key": "instance-id"
              }
            },
      "type": "object"
    },
    "rollup-summarizations_schema": {
      "additionalProperties": false,
      "description": "Data rollup summarization",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "field-profile": {
          "items": {
            "$ref": "#/definitions/rollup-summarization_schema"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ca-profile_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "certificate-authority-crt": {
          "description": "Certificate Authority certificate file name. Should be of pattern .+\\.crt",
          "format": "string",
          "pattern": "^.+\\.crt$",
          "type": "string"
        },
        "name": {
          "description": "Certificate Authority profile name. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        }
      },
      "required": [
        "certificate-authority-crt",
        "name"
      ],
      "type": "object"
    },
    "command-rpc": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "args": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional key/value pair arguments to table",
          "type": "object"
        },
        "filename": {
          "description": "Command-rpc table filename in which the table is defined",
          "type": "string"
        },
        "host": {
          "description": "Host name or ip-address of the device in which command will be inspected",
          "type": "string"
        },
        "password": {
          "description": "Password to connect to device",
          "type": "string"
        },
        "tablename": {
          "description": "Command-rpc table name",
          "type": "string"
        },
        "target": {
          "description": "To run command on FPC, specifiy FPC target",
          "type": "string"
        },
        "username": {
          "description": "Username to connect to device",
          "type": "string"
        }
      },
      "required": [
        "host",
        "username",
        "password",
        "tablename",
        "filename"
      ],
      "type": "object"
    },
    "device-group_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "authentication": {
          "additionalProperties": false,
          "description": "Common authentication parameters",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "password": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "password": {
                  "description": "Password for authentication",
                  "format": "string",
                  "type": "string"
                },
                "username": {
                  "description": "Username for authentication",
                  "format": "string",
                  "type": "string"
                }
              },
              "required": [
                "username",
                "password"
              ],
              "type": "object",
              "x-choice": "authentication-type",
              "x-choice-case": "password"
            },
            "ssh": {
              "additionalProperties": false,
              "description": "SSH Authentication parameters",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "ssh-key-profile": {
                  "description": "Name of the ssh-key-profile to be used",
                  "format": "string",
                  "type": "string"
                },
                "username": {
                  "description": "Username for authentication",
                  "format": "string",
                  "type": "string"
                }
              },
              "required": [
                "username",
                "ssh-key-profile"
              ],
              "type": "object"
            },
            "ssl": {
              "additionalProperties": false,
              "description": "SSL Authentication parameters",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "ca-profile": {
                  "description": "Name of the ca-profile to be used",
                  "format": "string",
                  "type": "string"
                },
                "local-certificate": {
                  "description": "Name of the local-certificate-profile to be used",
                  "format": "string",
                  "type": "string"
                },
                "server-common-name": {
                  "description": "Common name used while creating server certificate",
                  "format": "string",
                  "type": "string"
                }
              },
              "required": [
                "server-common-name",
                "ca-profile"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "edge": {
          "description": "JFM: edge this device group belongs to. This should be of the format <organization-name>.<site-name>.<edge-name>",
          "maxLength": 194,
          "minLength": 5,
          "pattern": "^([a-zA-Z][a-zA-Z0-9_-]*\\.){2}[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "action-scheduler": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "disable-trigger-action-schedulers": {
              "description": "If true, disable trigger-action-schedulers service",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "description": {
          "description": "Description about the device group",
          "format": "string",
          "type": "string"
        },
        "device-group-name": {
          "description": "Name of the group. Should be of pattern [a-zA-Z][a-zA-Z0-9-]*",
          "format": "string",
          "maxLength": 40,
          "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
          "type": "string"
        },
        "devices": {
          "items": {
            "description": "List of devices added in devices/device hierarchy",
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_-]*\\.*)*$",
            "type": "string",
            "x-path": "../../device/device-id"
          },
          "type": "array"
        },
        "logging": {
          "additionalProperties": false,
          "description": "Logging configuration",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "iAgent": {
              "additionalProperties": false,
              "description": "Service responsible for iAgent sensor data collection",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "daemons": {
                  "items": {
                    "description": "List of daemons for which log-level needs to be applied",
                    "enum": [
                      "ingest",
                      "tand",
                      "publishd"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group",
                "ingest-daemon-group"
              ]
            },
            "log-level": {
              "description": "Global log level",
              "enum": [
                "error",
                "debug",
                "warn",
                "info"
              ],
              "type": "string"
            },
            "native-gpb": {
              "additionalProperties": false,
              "description": "Service responsible for native-gpb-sensor data collection",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "daemons": {
                  "items": {
                    "description": "List of daemons for which log-level needs to be applied",
                    "enum": [
                      "ingest",
                      "tand",
                      "publishd"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group",
                "ingest-daemon-group"
              ]
            },
            "non-sensor-rules": {
              "additionalProperties": false,
              "description": "Service responsible for non-sensor and network-rules",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "daemons": {
                  "items": {
                    "description": "List of daemons for which log-level needs to be applied",
                    "enum": [
                      "ingest",
                      "tand",
                      "publishd"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group"
              ]
            },
            "open-config": {
              "additionalProperties": false,
              "description": "Service responsible for openconfig sensor data collection",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "daemons": {
                  "items": {
                    "description": "List of daemons for which log-level needs to be applied",
                    "enum": [
                      "ingest",
                      "tand",
                      "publishd"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group",
                "ingest-daemon-group"
              ]
            },
            "server-monitoring": {
                            "additionalProperties": false,
                            "description": "Service responsible for server-monitoring sensor data collection",
                            "patternProperties": {
                                "^@": {
                                    "type": "object"
                                }
                            },
                            "properties": {
                                "daemons": {
                                    "items": {
                                        "description": "List of daemons for which log-level needs to be applied",
                                        "enum": [
                                            "ingest",
                                            "tand",
                                            "publishd"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "log-level": {
                                    "description": "Set the logging level",
                                    "enum": [
                                        "error",
                                        "debug",
                                        "warn",
                                        "info"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "log-level"
                            ],
                            "type": "object",
                            "x-ref": [
                                "log-level-group",
                                "ingest-daemon-group"
                            ]
                        },
            "reports-generation": {
              "additionalProperties": false,
              "description": "Service responsible for generating reports",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group"
              ]
            },
            "snmp": {
              "additionalProperties": false,
              "description": "Service responsible for SNMP data collection",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "daemons": {
                  "items": {
                    "description": "List of daemons for which log-level needs to be applied",
                    "enum": [
                      "ingest",
                      "tand",
                      "publishd"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group",
                "ingest-daemon-group"
              ]
            },
            "trigger-evaluation": {
              "additionalProperties": false,
              "description": "Service responsible for trigger-evaluation",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group"
              ]
            },
            "ML-model-builder": {
              "additionalProperties": false,
              "description": "Service responsible for building the model for Machine Learning",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group"
              ]
            },
            "resource-discovery": {
              "additionalProperties": false,
              "description": "Service responsible for discovering resources",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group"
              ]
            },
            "flow": {
              "additionalProperties": false,
              "description": "Service responsible for flow data collection",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "daemons": {
                  "items": {
                    "description": "List of daemons for which log-level needs to be applied",
                    "enum": [
                      "ingest",
                      "tand",
                      "publishd"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group",
                "ingest-daemon-group"
              ]
            },
            "sflow": {
              "additionalProperties": false,
              "description": "Service responsible for sflow data collection",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "daemons": {
                  "items": {
                    "description": "List of daemons for which log-level needs to be applied",
                    "enum": [
                      "ingest",
                      "tand",
                      "publishd"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group",
                "ingest-daemon-group"
              ]
            },
            "byoi": {
              "additionalProperties": false,
              "description": "Service responsible for the custom BYOI plugins",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "service": {
                  "items": {
                    "additionalProperties": false,
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "daemons": {
                        "items": {
                          "description": "List of daemons for which log-level needs to be applied",
                          "enum": [
                            "ingest",
                            "tand",
                            "publishd"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "log-level": {
                        "description": "Set the logging level",
                        "enum": [
                          "error",
                          "debug",
                          "warn",
                          "info"
                        ],
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the service",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "log-level"
                    ],
                    "x-ref": [
                      "log-level-group",
                      "ingest-daemon-group"
                    ]
                  },
                  "type": "array",
                  "x-key": "name"
                }
              },
              "type": "object"
            },
            "snmp-notification": {
              "additionalProperties": false,
              "description": "Service responsible for SNMP Notification data collection",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "daemons": {
                  "items": {
                    "description": "List of daemons for which log-level needs to be applied",
                    "enum": [
                      "ingest",
                      "tand",
                      "publishd"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group",
                "ingest-daemon-group"
              ]
            },
            "syslog": {
              "additionalProperties": false,
              "description": "Service responsible for Syslog data collection",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "daemons": {
                  "items": {
                    "description": "List of daemons for which log-level needs to be applied",
                    "enum": [
                      "ingest",
                      "tand",
                      "publishd"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group",
                "ingest-daemon-group"
              ]
            }
          },
          "type": "object",
          "x-ref": [
            "log-level-group"
          ]
        },
        "native-gpb": {
          "properties": {
            "ports": {
              "items": {
                "description": "Port on which the native sensors will be received",
                "format": "int32",
                "type": "integer"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "flow": {
          "additionalProperties": false,
          "description": "Flow ingest related parameters",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "deploy-nodes": {
              "items": {
                "description": "List of nodes where flow ingest needs to be deployed in case of multi-node",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            },
            "netflow": {
              "additionalProperties": false,
              "description": "NetFlow specific parameters in Flow ingest",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "ports": {
                  "items": {
                    "description": "Udp ports on which NetFlow messages will be received",
                    "format": "int32",
                    "type": "integer"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "sflow": {
              "additionalProperties": false,
              "description": "sFlow specific parameters in Flow ingest",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "ports": {
                  "items": {
                    "description": "Udp ports on which sFlow messages will be received",
                    "format": "int32",
                    "type": "integer"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "ingest-frequency": {
          "items": {
            "description": "Name of the frequency-profile to be used",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "raw-data": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "persist": {
              "description": "Enables persist-raw-data",
              "type": "object",
              "x-choice": "raw-type",
              "x-choice-case": "persist"
            },
            "summarize": {
              "additionalProperties": false,
              "description": "Enables persist-summarize-data",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "summarization-profile": {
                  "items": {
                    "description": "Name of the summarization profile to be used",
                    "format": "string",
                    "type": "string"
                  },
                  "type": "array"
                },
                "time-span": {
                  "description": "Timespan for aggregate functions",
                  "format": "string",
                  "pattern": "^[1-9][0-9]*[smhdwy]$",
                  "type": "string"
                }
              },
              "required": [
                "time-span"
              ],
              "type": "object",
              "x-choice": "raw-type",
              "x-choice-case": "summarize"
            }
          },
          "type": "object"
        },
        "field-data": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "rollup": {
              "additionalProperties": false,
              "description": "Enables data rollup summarization of tsdb",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "profile": {
                  "items": {
                    "description": "Name of the data rollup summarization profile(s) to be used",
                    "format": "string",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "notification": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "enable": {
              "description": "Turn on notifications",
              "items": {
                "type": "object",
                "x-nullable": true
              },
              "type": "array"
            },
            "major": {
              "items": {
                "description": "List of notification groups on which major notification needs to be sent",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../notification/notification-name"
              },
              "type": "array"
            },
            "minor": {
              "items": {
                "description": "List of notification groups on which minor notification needs to be sent",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../notification/notification-name"
              },
              "type": "array"
            },
            "no-initial-normal-notify-suppression": {
              "description": "If true, Don't suppress the initial normal notifications",
              "type": "boolean"
            },
            "normal": {
              "items": {
                "description": "List of notification groups on which normal notification needs to be sent",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../notification/notification-name"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "open-config": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "initial-sync": {
              "description": "If true, enable initial sync packets processing",
              "type": "boolean"
            },
            "gnmi": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "enable": {
                  "description": "If true, enable gnmi",
                  "type": "boolean"
                },
                "encoding": {
                  "description": "Encoding to be used, default is protobuf",
                  "enum": [
                    "protobuf",
                    "json",
                    "json_ietf"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "outbound-ssh": {
          "additionalProperties": false,
          "description": "Configure the ports to enable Outbound-SSH service initiated by the devices to connect to the healthbot",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "ports": {
              "items": {
                "description": "Tcp ports on which Outbound-SSH service will be received",
                "format": "int32",
                "type": "integer"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "playbooks": {
          "items": {
            "description": "List of playbooks that needs to be applied to the group",
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
            "type": "string",
            "x-path": "../../playbook/playbook-name"
          },
          "type": "array"
        },
        "publish": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "destination": {
              "items": {
                "description": "List of notification groups on which data needs to be published",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../notification/notification-name"
              },
              "type": "array"
            },
            "field": {
              "items": {
                "description": "List of topic/rules whose field data needs to be published",
                "format": "string",
                "maxLength": 129,
                "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9_-]*$",
                "type": "string"
              },
              "type": "array"
            },
            "sensor": {
              "items": {
                "description": "List of sensors whose data needs to be published",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "destination"
          ],
          "type": "object"
        },
        "reports": {
          "items": {
            "description": "Device group reports",
            "type": "string",
            "x-path": "../../system-settings/report-generation/reports/name"
          },
          "type": "array"
        },
        "retention-policy": {
          "description": "Name of the retention policy to be applied",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string",
          "x-path": "../../retention-policy/retention-policy-name"
        },
        "root-cause-analysis": {
          "additionalProperties": false,
          "description": "Setting for root cause analysis",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "no-rca": {
              "description": "Disable Root Cause analysis",
              "items": {
                "type": "object",
                "x-nullable": true
              },
              "type": "array"
            },
            "dynamic-resources": {
              "items": {
                "description": "Resources whose dependency should be picked from internal bus. Format is <topic-name>/<resource-name>. Should be of pattern [a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*",
                "format": "string",
                "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*$",
                "type": "string"
              },
              "type": "array"
            },
            "exclude-resources": {
              "items": {
                "description": "Resources that needs to be excluded from Root Cause Analysis. Format is <topic-name>/<resource-name>. Should be of pattern [a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*",
                "format": "string",
                "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*$",
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "scheduler": {
          "description": "List of schedulers associated with the playbook instances",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "instance-id": {
                "description": "Unique ID of the variable instance. This should be unique per playbook and rule combination. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../variable/instance-id"
              },
              "playbook": {
                "description": "Name of the playbook in which the variable instance needs to be used",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../playbook/playbook-name"
              },
              "rule": {
                "description": "Name of the rule. This should be of the format <topic-name>/<rule-name>",
                "maxLength": 129,
                "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9_-]*$",
                "type": "string",
                "x-path": "../../variable/rule"
              },
              "schedule": {
                "description": "Name of the schedule that play/pauses the playbook instance automatically",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../system-settings/scheduler/name"
              }
            },
            "required": [
              "rule",
              "playbook",
              "instance-id",
              "schedule"
            ]
          },
          "type": "array",
          "x-key": "instance-id playbook rule"
        },
        "variable": {
          "description": "Playbook variable configuration",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "instance-id": {
                "description": "Unique ID of the variable instance. This should be unique per playbook and rule combination. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "format": "string",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string"
              },
              "playbook": {
                "description": "Name of the playbook in which the variable instance needs to be used",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../playbook/playbook-name"
              },
              "rule": {
                "description": "Name of the rule. This must be of the format <topic-name>/<rule-name>",
                "format": "string",
                "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z]+[a-z0-9_-]*$",
                "type": "string"
              },
              "running-state": {
                "description": "Current running state of the playbook instance",
                "enum": [
                  "running",
                  "paused"
                ],
                "type": "string",
                "readOnly": true
              },
              "variable-value": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "name": {
                      "description": "Variable name used in the playbook/rule. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                      "format": "string",
                      "maxLength": 64,
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value for the variable",
                      "format": "string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                },
                "type": "array",
                "x-key": "name"
              }
            },
            "required": [
              "rule",
              "playbook",
              "instance-id"
            ]
          },
          "type": "array",
          "x-key": "instance-id playbook rule"
        },
        "snmp": {
          "additionalProperties": false,
          "description": "SNMP ingest related configuration for a device-group",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "notification-ports": {
              "items": {
                "description": "Port on which the SNMP Traps/Informs are received, Port 162 is used by default if not configured",
                "format": "int32",
                "type": "integer"
              },
              "type": "array"
            },
            "port": {
              "description": "Port on which SNMP requests need to be sent. Port 161 is used if not configured.",
              "format": "int32",
              "type": "integer"
            },
            "v2": {
              "additionalProperties": false,
              "description": "SNMP version 2 configuration",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "community": {
                  "description": "Community name. 'public' will be used if not configured",
                  "format": "string",
                  "type": "string"
                }
              },
              "type": "object",
              "x-choice": "version",
              "x-choice-case": "v2",
              "x-ref": [
                "snmpv2c-config"
              ]
            },
            "v3": {
              "additionalProperties": false,
              "description": "SNMP version 3 configuration",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "usm": {
                  "additionalProperties": false,
                  "description": "SNMP User Security Model configuration",
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "authentication": {
                      "additionalProperties": false,
                      "description": "Configure authentication for the SNMPv3 user",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "passphrase": {
                          "description": "Passphrase for SNMPv3 authentication",
                          "format": "string",
                          "maxLength": 1024,
                          "minLength": 8,
                          "type": "string"
                        },
                        "protocol": {
                          "description": "SNMPv3 authentication protocol",
                          "enum": [
                            "MD5",
                            "SHA",
                            "SHA224",
                            "SHA256",
                            "SHA384",
                            "SHA512"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "protocol",
                        "passphrase"
                      ],
                      "type": "object"
                    },
                    "authentication-none": {
                      "description": "Configure no authentication for the SNMPv3 user",
                      "items": {
                        "type": "null"
                      },
                      "type": "array"
                    },
                    "privacy": {
                      "additionalProperties": false,
                      "description": "Configure privacy for the SNMPv3 user",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "passphrase": {
                          "description": "Passphrase for SNMPv3 privacy",
                          "format": "string",
                          "maxLength": 1024,
                          "minLength": 8,
                          "type": "string"
                        },
                        "protocol": {
                          "description": "SNMPv3 privacy protocol",
                          "enum": [
                            "DES",
                            "AES",
                            "AES192",
                            "AES256",
                            "AES192C",
                            "AES256C",
                            "3DES"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "protocol",
                        "passphrase"
                      ],
                      "type": "object"
                    },
                    "privacy-none": {
                      "description": "Configure no privacy for the SNMPv3 user",
                      "items": {
                        "type": "null"
                      },
                      "type": "array"
                    },
                    "snmp-proxy-forwarder": {
                      "additionalProperties": false,
                      "description": "SNMP Proxy forwarder configuration",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "security-engine-id": {
                          "description": "Security engine id of the proxy forwarder agent",
                          "format": "string",
                          "maxLength": 64,
                          "minLength": 5,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "username": {
                      "description": "SNMPv3 username",
                      "format": "string",
                      "maxLength": 255,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "username"
                  ],
                  "type": "object",
                  "x-ref": [
                    "snmpv3-usm-config"
                  ]
                }
              },
              "type": "object",
              "x-choice": "version",
              "x-choice-case": "v3"
            }
          },
          "type": "object",
          "x-ref": [
            "snmp-port",
            "snmp-notification-ports"
          ]
        },
        "syslog": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "ports": {
              "items": {
                "description": "Udp ports on which syslog messages will be received",
                "format": "int32",
                "type": "integer",
                "minimum": 1,
                "maximum": 65535
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "tagging-profile": {
          "items": {
            "description": "Name of the tagging-profile to be used",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "timezone": {
          "description": "Timezone in the format +/-hh:mm, Example: -08:00",
          "format": "string",
          "type": "string",
          "pattern": "^((\\+|-)((([0-1][0-9])|(2[0-3])):([0-5][0-9])))$"
        },
        "use-ingest-receive-time": {
          "description": "Enable using ingest receive time in formulas like elapsed-time and rate-of-change",
          "items": {
            "type": "object",
            "x-nullable": true
          },
          "type": "array"
        }
      },
      "required": [
        "device-group-name"
      ],
      "type": "object"
    },
    "device-groups_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "device-group": {
          "items": {
            "$ref": "#/definitions/device-group_schema"
          },
          "type": "array",
          "x-key": "device-group-name"
        }
      },
      "required": [
        "device-group"
      ],
      "type": "object"
    },
    "deviceHealthTree": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "children": {
          "items": {
            "$ref": "#/definitions/deviceHealthTree"
          },
          "type": "array"
        },
        "color": {
          "enum": [
            "green",
            "yellow",
            "red"
          ],
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "children",
        "name"
      ],
      "type": "object",
      "example": {
        "children": [
          {
            "children": [
              {
                "children": [
                  {
                    "children": [
                      {
                        "color": "red",
                        "data": "information for the field",
                        "name": "trigger-1",
                        "timestamp": "2018-06-19T05:29:08.30870784Z"
                      },
                      {
                        "color": "yellow",
                        "data": "information for the field",
                        "name": "trigger-2",
                        "timestamp": "2018-06-19T05:43:31.993232128Z"
                      }
                    ],
                    "color": "red",
                    "name": "tag-keys"
                  }
                ],
                "color": "red",
                "name": "topic-1"
              },
              {
                "children": [
                  {
                    "color": "green",
                    "data": "information for the field",
                    "name": "trigger-3",
                    "timestamp": "2018-06-19T05:44:40.4764928Z"
                  }
                ],
                "color": "green",
                "name": "topic-2"
              }
            ],
            "color": "red",
            "name": "device-group-name"
          }
        ],
        "color": "red",
        "name": "device-id"
      }
    },
    "deviceGroupHealthTree": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "children": {
          "items": {
            "$ref": "#/definitions/deviceGroupHealthTree"
          },
          "type": "array"
        },
        "color": {
          "enum": [
            "green",
            "yellow",
            "red"
          ],
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "children",
        "name"
      ],
      "type": "object",
      "example": {
        "children": [
          {
            "children": [
              {
                "children": [
                  {
                    "children": [
                      {
                        "color": "red",
                        "data": "information for the field",
                        "name": "trigger-1",
                        "timestamp": "2018-06-19T05:29:08.30870784Z"
                      },
                      {
                        "color": "yellow",
                        "data": "information for the field",
                        "name": "trigger-2",
                        "timestamp": "2018-06-19T05:43:31.993232128Z"
                      }
                    ],
                    "color": "red",
                    "name": "tag-keys"
                  }
                ],
                "color": "red",
                "name": "topic-1"
              },
              {
                "children": [
                  {
                    "color": "green",
                    "data": "information for the field",
                    "name": "trigger-3",
                    "timestamp": "2018-06-19T05:44:40.4764928Z"
                  }
                ],
                "color": "green",
                "name": "topic-2"
              }
            ],
            "color": "red",
            "name": "device-id"
          }
        ],
        "color": "red",
        "name": "device-group-name"
      }
    },
    "networkHealthTree": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "children": {
          "items": {
            "$ref": "#/definitions/networkHealthTree"
          },
          "type": "array"
        },
        "color": {
          "enum": [
            "green",
            "yellow",
            "red"
          ],
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "children",
        "name"
      ],
      "type": "object",
      "example": {
        "children": [
          {
            "children": [
              {
                "children": [
                  {
                    "color": "red",
                    "data": "information for the field",
                    "name": "trigger-1",
                    "timestamp": "2018-06-19T05:29:08.30870784Z"
                  },
                  {
                    "color": "yellow",
                    "data": "information for the field",
                    "name": "trigger-2",
                    "timestamp": "2018-06-19T05:43:31.993232128Z"
                  }
                ],
                "color": "red",
                "name": "tag-keys"
              }
            ],
            "color": "red",
            "name": "topic-1"
          },
          {
            "children": [
              {
                "color": "green",
                "data": "information for the field",
                "name": "trigger-3",
                "timestamp": "2018-06-19T05:44:40.4764928Z"
              }
            ],
            "color": "green",
            "name": "topic-2"
          }
        ],
        "color": "red",
        "name": "network-group-name"
      }
    },
    "groupHealthSchema": {
      "type": "object",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "additionalProperties": {
        "enum": [
          "green",
          "yellow",
          "red",
          "gray"
        ],
        "type": "string"
      }
    },
    "deviceHealthSchema": {
      "type": "object",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/groupHealthSchema"
      }
    },
    "healthSchema": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "device-health": {
          "$ref": "#/definitions/deviceHealthSchema"
        },
        "network-health": {
          "$ref": "#/definitions/groupHealthSchema"
        }
      },
      "example": {
        "device-health": {
          "device-1": {
            "device-group-1": "green",
            "device-group-2": "yellow"
          },
          "device-2": {
            "device-group-1": "red"
          }
        },
        "network-health": {
          "network-group-1": "green",
          "network-group-2": "red",
          "network-group-3": "gray"
        }
      }
    },
    "device_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "authentication": {
          "additionalProperties": false,
          "description": "Common authentication parameters",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "password": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "password": {
                  "description": "Password for authentication",
                  "format": "string",
                  "type": "string"
                },
                "username": {
                  "description": "Username for authentication",
                  "format": "string",
                  "type": "string"
                }
              },
              "required": [
                "username",
                "password"
              ],
              "type": "object",
              "x-choice": "authentication-type",
              "x-choice-case": "password"
            },
            "ssh": {
              "additionalProperties": false,
              "description": "SSH Authentication parameters",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "ssh-key-profile": {
                  "description": "Name of the ssh-key-profile to be used",
                  "format": "string",
                  "type": "string"
                },
                "username": {
                  "description": "Username for authentication",
                  "format": "string",
                  "type": "string"
                }
              },
              "required": [
                "username",
                "ssh-key-profile"
              ],
              "type": "object"
            },
            "ssl": {
              "additionalProperties": false,
              "description": "SSL Authentication parameters",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "ca-profile": {
                  "description": "Name of the ca-profile to be used",
                  "format": "string",
                  "type": "string"
                },
                "local-certificate": {
                  "description": "Name of the local-certificate-profile to be used",
                  "format": "string",
                  "type": "string"
                },
                "server-common-name": {
                  "description": "Common name used while creating server certificate",
                  "format": "string",
                  "type": "string"
                }
              },
              "required": [
                "server-common-name",
                "ca-profile"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "description": {
          "description": "Description about the device",
          "format": "string",
          "type": "string"
        },
        "device-id": {
          "description": "Identifier for the device. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_-]*\\.*)*$",
          "type": "string"
        },
        "uuid": {
          "description": "EMS: uuid of the EMS-advertised device",
          "format": "uuid",
          "type": "string"
        },
        "flow": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "source-ip-addresses": {
              "items": {
                "pattern": "((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "host": {
          "description": "Name or IP of the device",
          "format": "string",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "iAgent": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "port": {
              "description": "Netconf port",
              "format": "int32",
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            }
          },
          "type": "object"
        },
        "open-config": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "initial-sync": {
              "description": "If true, enable initial sync packets processing",
              "type": "boolean"
            },
            "gnmi": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "enable": {
                  "description": "If true, enable gnmi",
                  "type": "boolean"
                },
                "encoding": {
                  "description": "Encoding to be used, default is protobuf",
                  "enum": [
                    "protobuf",
                    "json",
                    "json_ietf"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "port": {
              "description": "Port on which gRPC connection needs to be established",
              "format": "int32",
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            }
          },
          "required": [
            "port"
          ],
          "type": "object"
        },
        "server-monitoring": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "initial-sync": {
              "description": "If true, enable initial sync packets processing",
              "type": "boolean"
            },
            "gnmi": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "enable": {
                  "description": "If true, enable gnmi",
                  "type": "boolean"
                },
                "encoding": {
                  "description": "Encoding to be used, default is protobuf",
                  "enum": [
                    "protobuf",
                    "json",
                    "json_ietf"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "port": {
              "description": "Port on which gRPC connection needs to be established",
              "format": "int32",
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            }
          },
          "required": [
            "port"
          ],
          "type": "object"
        },
        "outbound-ssh": {
          "additionalProperties": false,
          "description": "Disable Outbound-SSH  service for a device",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "disable": {
              "description": "If true, disable Outbound-SSH service for the device",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "owner": {
          "description": "Owner of the device: this is a read-only attribute and should not be added to the request payload, value if added will be discarded.",
          "format": "string",
          "type": "string",
          "readOnly": true
        },
        "snmp": {
          "additionalProperties": false,
          "description": "SNMP ingest related configuration for a device",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "port": {
              "description": "Port on which SNMP requests need to be sent. Port 161 is used if not configured.",
              "format": "int32",
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            },
            "v2": {
              "additionalProperties": false,
              "description": "SNMP version 2 configuration",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "community": {
                  "description": "Community name. 'public' will be used if not configured",
                  "format": "string",
                  "type": "string"
                },
                "source-id": {
                  "additionalProperties": false,
                  "description": "Configuration which is required to identify the sender of the SNMP trap/inform message",
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "source-ip-addresses": {
                      "items": {
                        "description": "Source IP addresses associated with the device",
                        "pattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$",
                        "format": "string",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "source-ip-addresses"
                  ],
                  "type": "object"
                }
              },
              "type": "object",
              "x-choice": "version",
              "x-choice-case": "v2",
              "x-ref": [
                "snmpv2c-config",
                "snmpv2c-trapsource"
              ]
            },
            "v3": {
              "additionalProperties": false,
              "description": "SNMP version 3 configuration",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "source-id": {
                  "additionalProperties": false,
                  "description": "Configuration which is required to identify the sender/receiver of the SNMP message",
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "context-engine-id": {
                      "description": "Context engine-id for the SNMP agent running in the device in Hex Format Eg: '80001f8880bd5b8d052eb40d6000000000'",
                      "format": "string",
                      "maxLength": 64,
                      "minLength": 5,
                      "type": "string"
                    },
                    "source-ip-addresses": {
                      "items": {
                        "description": "Source IP addresses associated with the device for SNMP traps/informs",
                        "pattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$",
                        "format": "string",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "context-engine-id"
                  ],
                  "type": "object"
                },
                "usm": {
                  "additionalProperties": false,
                  "description": "SNMP User Security Model configuration",
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "authentication": {
                      "additionalProperties": false,
                      "description": "Configure authentication for the SNMPv3 user",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "passphrase": {
                          "description": "Passphrase for SNMPv3 authentication",
                          "format": "string",
                          "maxLength": 1024,
                          "minLength": 8,
                          "type": "string"
                        },
                        "protocol": {
                          "description": "SNMPv3 authentication protocol",
                          "enum": [
                            "MD5",
                            "SHA",
                            "SHA224",
                            "SHA256",
                            "SHA384",
                            "SHA512"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "protocol",
                        "passphrase"
                      ],
                      "type": "object"
                    },
                    "authentication-none": {
                      "description": "Configure no authentication for the SNMPv3 user",
                      "items": {
                        "type": "null"
                      },
                      "type": "array"
                    },
                    "privacy-none": {
                      "description": "Configure no privacy for the SNMPv3 user",
                      "items": {
                        "type": "null"
                      },
                      "type": "array"
                    },
                    "privacy": {
                      "additionalProperties": false,
                      "description": "Configure privacy for the SNMPv3 user",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "passphrase": {
                          "description": "Passphrase for SNMPv3 privacy",
                          "format": "string",
                          "maxLength": 1024,
                          "minLength": 8,
                          "type": "string"
                        },
                        "protocol": {
                          "description": "SNMPv3 privacy protocol",
                          "enum": [
                            "DES",
                            "AES",
                            "AES192",
                            "AES256",
                            "AES192C",
                            "AES256C",
                            "3DES"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "protocol",
                        "passphrase"
                      ],
                      "type": "object"
                    },
                    "snmp-proxy-forwarder": {
                      "additionalProperties": false,
                      "description": "SNMP Proxy forwarder configuration",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "security-engine-id": {
                          "description": "Security engine id of the proxy forwarder agent",
                          "format": "string",
                          "maxLength": 64,
                          "minLength": 5,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "username": {
                      "description": "SNMPv3 username",
                      "format": "string",
                      "maxLength": 255,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "username"
                  ],
                  "type": "object",
                  "x-ref": [
                    "snmpv3-usm-config"
                  ]
                }
              },
              "type": "object",
              "x-choice": "version",
              "x-choice-case": "v3",
              "x-ref": [
                "snmpv3-trapsource"
              ]
            }
          },
          "type": "object",
          "x-ref": [
            "snmp-port"
          ]
        },
        "syslog": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "source-ip-addresses": {
              "items": {
                "description": "IP addresses associated with the device, if there are multiple source addresses used by the device",
                "format": "string",
                "type": "string",
                "pattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"
              },
              "type": "array"
            },
            "hostnames": {
              "items": {
                "description": "Host names applicable for the device, will be useful if host name that appears in a syslog message is different from the actual configured device host",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "tagging-profile": {
          "items": {
            "description": "Name of the tagging-profile to be used",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "timezone": {
          "description": "Timezone in the format +/-hh:mm, Example: -08:00",
          "format": "string",
          "type": "string",
          "pattern": "^((\\+|-)((([0-1][0-9])|(2[0-3])):([0-5][0-9])))$"
        },
        "system-id": {
          "description": "ID which is sent in the JTI UDP messages",
          "format": "string",
          "type": "string"
        },
        "use-ingest-receive-time": {
          "description": "Enable using ingest receive time in formulas like elapsed-time and rate-of-change",
          "items": {
            "type": "object",
            "x-nullable": true
          },
          "type": "array"
        },
        "variable": {
          "description": "Playbook variable configuration",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "instance-id": {
                "description": "Name of the variable instance. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "format": "string",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string"
              },
              "playbook": {
                "description": "Name of the playbook in which the variable instance needs to be used",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../playbook/playbook-name"
              },
              "rule": {
                "description": "Name of the rule. This must be of the format <topic-name>/<rule-name>",
                "format": "string",
                "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z]+[a-z0-9_-]*$",
                "type": "string"
              },
              "variable-value": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "name": {
                      "description": "Variable name used in the playbook/rule. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                      "format": "string",
                      "maxLength": 64,
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value for the variable",
                      "format": "string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                },
                "type": "array",
                "x-key": "name"
              }
            },
            "required": [
              "rule",
              "playbook",
              "instance-id"
            ]
          },
          "type": "array",
          "x-key": "instance-id playbook rule"
        },
        "vendor": {
          "additionalProperties": false,
          "description": "Vendor specific configuration",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "arista": {
              "additionalProperties": false,
              "description": "Arista device",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "operating-system": {
                  "description": "Operating system of the device",
                  "enum": [
                    "eos"
                  ],
                  "type": "string"
                },
                "platform": {
                  "description": "Platform name of the device, Example: MX240",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                },
                "product": {
                  "description": "Product category of the device, Example: MX",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                },
                "release": {
                  "description": "Release string of the device, Example: 19.2R1",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "operating-system"
              ],
              "type": "object",
              "x-choice": "vendor-name",
              "x-choice-case": "arista",
              "x-ref": [
                "device-properties-group"
              ]
            },
            "cisco": {
              "additionalProperties": false,
              "description": "Cisco device",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "operating-system": {
                  "description": "Operating system of the device",
                  "enum": [
                    "iosxr",
                    "nxos"
                  ],
                  "type": "string"
                },
                "platform": {
                  "description": "Platform name of the device, Example: MX240",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                },
                "product": {
                  "description": "Product category of the device, Example: MX",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                },
                "release": {
                  "description": "Release string of the device, Example: 19.2R1",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "operating-system"
              ],
              "type": "object",
              "x-choice": "vendor-name",
              "x-choice-case": "cisco",
              "x-ref": [
                "device-properties-group"
              ]
            },
            "juniper": {
              "additionalProperties": false,
              "description": "Juniper device",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "operating-system": {
                  "description": "Operating system of the device",
                  "enum": [
                    "junos",
                    "junosEvolved"
                  ],
                  "type": "string"
                },
                "platform": {
                  "description": "Platform name of the device, Example: MX240",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                },
                "product": {
                  "description": "Product category of the device, Example: MX",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                },
                "release": {
                  "description": "Release string of the device, Example: 19.2R1",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "operating-system"
              ],
              "type": "object",
              "x-choice": "vendor-name",
              "x-choice-case": "juniper",
              "x-ref": [
                "device-properties-group"
              ]
            },
            "linux": {
              "additionalProperties": false,
              "description": "Linux device",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "operating-system": {
                  "description": "Distribution/Flavour of linux, Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                  "format": "string",
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                  "type": "string"
                },
                "platform": {
                  "description": "Platform name of the device, Example: MX240",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                },
                "product": {
                  "description": "Product category of the device, Example: MX",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                },
                "release": {
                  "description": "Release string of the device, Example: 19.2R1",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "operating-system"
              ],
              "type": "object",
              "x-choice": "vendor-name",
              "x-choice-case": "linux",
              "x-ref": [
                "device-properties-group"
              ]
            },
            "other-vendor": {
              "additionalProperties": false,
              "description": "Other vendor device",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "operating-system": {
                  "description": "Vendor operating system, Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                  "format": "string",
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                  "type": "string"
                },
                "platform": {
                  "description": "Platform name of the device, Example: MX240",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                },
                "product": {
                  "description": "Product category of the device, Example: MX",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                },
                "release": {
                  "description": "Release string of the device, Example: 19.2R1",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                },
                "vendor-name": {
                  "description": "Vendor-name, Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                  "format": "string",
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                  "type": "string"
                }
              },
              "required": [
                "vendor-name"
              ],
              "type": "object",
              "x-choice": "vendor-name",
              "x-choice-case": "other-vendor",
              "x-ref": [
                "device-properties-group"
              ]
            },
            "paloalto": {
              "additionalProperties": false,
              "description": "Palo Alto device",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "operating-system": {
                  "description": "Operating system of the device",
                  "enum": [
                    "panos"
                  ],
                  "type": "string"
                },
                "platform": {
                  "description": "Platform name of the device, Example: MX240",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                },
                "product": {
                  "description": "Product category of the device, Example: MX",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                },
                "release": {
                  "description": "Release string of the device, Example: 19.2R1",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "operating-system"
              ],
              "type": "object",
              "x-choice": "vendor-name",
              "x-choice-case": "paloalto",
              "x-ref": [
                "device-properties-group"
              ]
            }
          },
          "type": "object"
        }
      },
      "required": [
        "device-id",
        "host"
      ],
      "type": "object"
    },
    "devices_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "device": {
          "items": {
            "$ref": "#/definitions/device_schema"
          },
          "type": "array",
          "x-key": "device-id"
        }
      },
      "required": [
        "device"
      ],
      "type": "object"
    },
    "device-details_schema": {
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "device-id": {
          "description": "Event name",
          "type": "string"
        },
            "databases": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "type": "object"
    },
    "event": {
      "properties": {
        "color": {
          "description": "Event severity",
          "enum": [
            "yellow",
            "red"
          ],
          "type": "string"
        },
        "event_name": {
          "description": "Event name",
          "type": "string"
        },
        "frequency": {
          "description": "Frequency of the event.",
          "type": "integer"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "field-capture_schema": {
      "type": "object",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/device-group-field-capture_schema"
      }
    },
    "device-group-field-capture_schema": {
      "type": "object",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/device-field-capture_schema"
      }
    },
    "device-field-capture_schema": {
      "type": "object",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/topic-field-capture_schema"
      }
    },
    "topic-field-capture_schema": {
      "type": "object",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/rule-field-capture_schema"
      }
    },
    "rule-field-capture_schema": {
      "type": "object",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/field-field-capture_schema"
      }
    },
    "field-field-capture_schema": {
      "type": "object",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "additionalProperties": true
    },
    "license-feature_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "feature-id": {
          "description": "Unique ID of the licensed feature",
          "type": "integer",
          "minimum": 0
        },
        "feature-name": {
          "description": "Name of the licensed feature",
          "format": "string",
          "type": "string"
        },
        "feature-description": {
          "description": "Brief description of the licensed feature",
          "format": "string",
          "type": "string"
        },
        "license-total": {
          "description": "Total license count for feature",
          "type": "integer",
          "minimum": 0
        },
        "license-remaining": {
          "description": "Remaining license count for feature",
          "type": "integer",
          "minimum": 0
        },
        "license-requested": {
          "description": "Local requested license count for feature",
          "type": "integer",
          "minimum": 0
        },
        "license-usage": {
          "description": "License feature usage count",
          "type": "integer",
          "minimum": 0
        },
        "max-remaining-days": {
          "description": "Maximum remaining time of the feature's license in days",
          "type": "integer",
          "minimum": 0
        },
        "validity-type": {
          "description": "License validity type",
          "enum": [
            "invalid",
            "countdown",
            "date-based",
            "permanent"
          ],
          "type": "string"
        },
        "mode": {
          "description": "License mode of operation",
          "enum": [
            "invalid",
            "standalone",
            "network"
          ],
          "type": "string"
        },
        "compliance": {
          "description": "Compliance status indicating if the feature usage is in compliance or not",
          "type": "boolean"
        },
        "end-date": {
          "description": "Feature end date timestamp",
          "type": "integer",
          "minimum": 0
        },
        "valid-until": {
          "description": "Validity information of license feature",
          "format": "string",
          "type": "string"
        }
      },
      "required": [
        "feature-name",
        "feature-description",
        "license-total",
        "license-usage",
        "max-remaining-days",
        "validity-type",
        "mode",
        "compliance",
        "end-date",
        "valid-until"
      ],
      "type": "object"
    },
    "license-features_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "license-feature": {
          "items": {
            "$ref": "#/definitions/license-feature_schema"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "license-key_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "license-id": {
          "description": "Unique ID of the license",
          "format": "string",
          "type": "string"
        },
        "start-date": {
          "description": "License start date and time",
          "format": "date-time",
          "type": "string"
        },
        "end-date": {
          "description": "License end date and time",
          "format": "date-time",
          "type": "string"
        },
        "validity-type": {
          "description": "License validity type",
          "enum": [
            "invalid",
            "countdown",
            "date-based",
            "permanent"
          ],
          "type": "string"
        },
        "version": {
          "description": "License key version, an integer value indicating version of license vendor info",
          "type": "integer",
          "minimum": 1
        },
        "sku-name": {
          "description": "License stock keeping unit name, indicates category of purchased license",
          "format": "string",
          "type": "string"
        },
        "customer-id": {
          "description": "Identification of customer who has purchased this license",
          "format": "string",
          "type": "string"
        },
        "order-type": {
          "description": "License purchase order type",
          "enum": [
            "unknown",
            "commercial",
            "trial",
            "demo",
            "emergency",
            "lab",
            "education"
          ],
          "type": "string"
        },
        "sw-serial-id": {
          "description": "Software serial number used for license activation",
          "format": "string",
          "type": "string"
        },
        "mode": {
          "description": "License mode of operation",
          "enum": [
            "invalid",
            "standalone",
            "network"
          ],
          "type": "string"
        },
        "features": {
          "description": "Features which are part of the license",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "feature-id": {
                "description": "Unique ID of the licensed feature",
                "type": "integer",
                "minimum": 0
              },
              "feature-name": {
                "description": "Name of the licensed feature",
                "format": "string",
                "type": "string"
              },
              "feature-description": {
                "description": "Brief description of the licensed feature",
                "format": "string",
                "type": "string"
              },
              "capacity-value": {
                "description": "Total capacity of the licensed feature",
                "type": "integer",
                "minimum": 0
              },
              "capacity-flag": {
                "description": "Flag indicating if the feature is capacity or non-capacity type",
                "type": "boolean"
              }
            },
            "required": [
              "feature-id",
              "feature-name",
              "feature-description",
              "capacity-value",
              "capacity-flag"
            ]
          },
          "type": "array"
        }
      },
      "required": [
        "license-id",
        "start-date",
        "end-date",
        "validity-type",
        "version",
        "sku-name",
        "customer-id",
        "order-type",
        "features"
      ],
      "type": "object"
    },
    "license-keys_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "license-key": {
          "items": {
            "$ref": "#/definitions/license-key_schema"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "license-raw-key_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "raw-key": {
          "description": "License key string",
          "format": "string",
          "type": "string"
        }
      },
      "required": [
        "raw-key"
      ],
      "type": "object"
    },
    "license-raw-keys_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "license-raw-key": {
          "items": {
            "$ref": "#/definitions/license-raw-key_schema"
          },
          "type": "array"
        }
      },
      "required": [
        "license-raw-key"
      ],
      "type": "object"
    },
    "local-certificate_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "client-crt": {
          "description": "Client certificate file name. Should be of pattern .+\\.crt",
          "format": "string",
          "pattern": "^.+\\.crt$",
          "type": "string"
        },
        "client-key": {
          "description": "Client Key file name. Should be of pattern .+\\.key",
          "format": "string",
          "pattern": "^.+\\.key$",
          "type": "string"
        },
        "name": {
          "description": "Local Certificate profile name. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        }
      },
      "required": [
        "client-crt",
        "name",
        "client-key"
      ],
      "type": "object"
    },
    "network-group_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Description about the network group",
          "format": "string",
          "type": "string"
        },
        "ingest-frequency": {
          "items": {
            "description": "Name of the frequency-profile to be used",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "network-group-name": {
          "description": "Name of the network group. Should be of pattern [a-zA-Z][a-zA-Z0-9-]*",
          "format": "string",
          "maxLength": 40,
          "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
          "type": "string"
        },
        "publish": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "destination": {
              "items": {
                "description": "List of notification groups on which data needs to be published",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../notification/notification-name"
              },
              "type": "array"
            },
            "field": {
              "items": {
                "description": "List of topic/rules whose field data needs to be published",
                "format": "string",
                "maxLength": 129,
                "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9_-]*$",
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "destination"
          ],
          "type": "object"
        },
        "logging": {
          "additionalProperties": false,
          "description": "Logging configuration",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "log-level": {
              "description": "Global log level",
              "enum": [
                "error",
                "debug",
                "warn",
                "info"
              ],
              "type": "string"
            },
            "non-sensor-rules": {
              "additionalProperties": false,
              "description": "Service responsible for non-sensor and network-rules",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "daemons": {
                  "items": {
                    "description": "List of daemons for which log-level needs to be applied",
                    "enum": [
                      "ingest",
                      "tand",
                      "publishd"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group"
              ]
            },
            "reports-generation": {
              "additionalProperties": false,
              "description": "Service responsible for generating reports",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group"
              ]
            },
            "trigger-evaluation": {
              "additionalProperties": false,
              "description": "Service responsible for trigger-evaluation",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group"
              ]
            },
            "ML-model-builder": {
              "additionalProperties": false,
              "description": "Service responsible for building the model for Machine Learning",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group"
              ]
            },
            "resource-discovery": {
              "additionalProperties": false,
              "description": "Service responsible for discovering resources",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "log-level": {
                  "description": "Set the logging level",
                  "enum": [
                    "error",
                    "debug",
                    "warn",
                    "info"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "log-level"
              ],
              "type": "object",
              "x-ref": [
                "log-level-group"
              ]
            }
          },
          "type": "object",
          "x-ref": [
            "log-level-group"
          ]
        },
        "reports": {
          "items": {
            "description": "Network group reports",
            "type": "string",
            "x-path": "../../system-settings/report-generation/reports/name"
          },
          "type": "array"
        },
        "root-cause-analysis": {
          "additionalProperties": false,
          "description": "Setting for root cause analysis",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "no-rca": {
              "description": "Disable Root Cause analysis",
              "items": {
                "type": "object",
                "x-nullable": true
              },
              "type": "array"
            },
            "dynamic-resources": {
              "items": {
                "description": "Resources whose dependency should be picked from internal bus. Format is <topic-name>/<resource-name>. Should be of pattern [a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*",
                "format": "string",
                "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*$",
                "type": "string"
              },
              "type": "array"
            },
            "exclude-resources": {
              "items": {
                "description": "Resources that needs to be excluded from Root Cause Analysis. Format is <topic-name>/<resource-name>. Should be of pattern [a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*",
                "format": "string",
                "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*$",
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "notification": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "enable": {
              "description": "Turn on notifications",
              "items": {
                "type": "object",
                "x-nullable": true
              },
              "type": "array"
            },
            "major": {
              "items": {
                "description": "List of notification groups on which major notification needs to be sent",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../notification/notification-name"
              },
              "type": "array"
            },
            "minor": {
              "items": {
                "description": "List of notification groups on which minor notification needs to be sent",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../notification/notification-name"
              },
              "type": "array"
            },
            "normal": {
              "items": {
                "description": "List of notification groups on which normal notification needs to be sent",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../notification/notification-name"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "playbooks": {
          "items": {
            "description": "List of playbooks that needs to be applied to the network group",
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
            "type": "string",
            "x-path": "../../playbook/playbook-name"
          },
          "type": "array"
        },
        "tagging-profile": {
          "items": {
            "description": "Name of the tagging-profile to be used",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "scheduler": {
          "description": "List of schedulers associated with the playbook instances",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "instance-id": {
                "description": "Unique ID of the variable instance. This should be unique per playbook and rule combination. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../variable/instance-id"
              },
              "playbook": {
                "description": "Name of the playbook in which the variable instance needs to be used",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../playbook/playbook-name"
              },
              "rule": {
                "description": "Name of the rule. This should be of the format <topic-name>/<rule-name>",
                "maxLength": 129,
                "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9_-]*$",
                "type": "string",
                "x-path": "../../variable/rule"
              },
              "schedule": {
                "description": "Name of the schedule that play/pauses the playbook instance automatically",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../system-settings/scheduler/name"
              }
            },
            "required": [
              "rule",
              "playbook",
              "instance-id",
              "schedule"
            ]
          },
          "type": "array",
          "x-key": "instance-id playbook rule"
        },
        "variable": {
          "description": "Playbook variable configuration",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "instance-id": {
                "description": "Unique ID of the variable instance. This should be unique per playbook and rule combination. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "format": "string",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string"
              },
              "playbook": {
                "description": "Name of the playbook in which the variable instance needs to be used",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string",
                "x-path": "../../../playbook/playbook-name"
              },
              "rule": {
                "description": "Name of the rule. This must be of the format <topic-name>/<rule-name>",
                "format": "string",
                "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z]+[a-z0-9_-]*$",
                "type": "string"
              },
              "running-state": {
                "description": "Current running state of the playbook instance",
                "enum": [
                  "running",
                  "paused"
                ],
                "type": "string",
                "readOnly": true
              },
              "variable-value": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "name": {
                      "description": "Variable name used in the playbook/rule. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                      "format": "string",
                      "maxLength": 64,
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value for the variable",
                      "format": "string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                },
                "type": "array",
                "x-key": "name"
              }
            },
            "required": [
              "rule",
              "playbook",
              "instance-id"
            ]
          },
          "type": "array",
          "x-key": "instance-id playbook rule"
        },
        "action-scheduler": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "disable-trigger-action-schedulers": {
              "description": "If true, disable trigger-action-schedulers service",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "network-group-name"
      ],
      "type": "object"
    },
    "network-groups_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "network-group": {
          "items": {
            "$ref": "#/definitions/network-group_schema"
          },
          "type": "array",
          "x-key": "network-group-name"
        }
      },
      "required": [
        "network-group"
      ],
      "type": "object"
    },
    "notification_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Description about the notification",
          "format": "string",
          "type": "string"
        },
        "http-post": {
          "additionalProperties": false,
          "description": "Define HTTP endpoint to post the notification",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "basic": {
              "additionalProperties": false,
              "description": "Basic http authetication using username and password",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "password": {
                  "description": "Password for http basic authentication",
                  "format": "string",
                  "type": "string"
                },
                "username": {
                  "description": "Username for http basic authentication",
                  "format": "string",
                  "type": "string"
                }
              },
              "required": [
                "username",
                "password"
              ],
              "type": "object",
              "x-choice": "authentication",
              "x-choice-case": "basic"
            },
            "url": {
              "description": "URL on which http notification needs to be posted",
              "format": "string",
              "type": "string"
            }
          },
          "required": [
            "url"
          ],
          "type": "object",
          "x-choice": "notification-type",
          "x-choice-case": "http-post"
        },
        "notification-name": {
          "description": "Name of the notification. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "slack": {
          "additionalProperties": false,
          "description": "Define slack notification",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "channel": {
              "description": "Channel on which notification should be posted",
              "format": "string",
              "type": "string"
            },
            "url": {
              "description": "URL on which slack notification needs to be posted",
              "format": "string",
              "pattern": "^(https)://[^\\s/$.?#].[^\\s]*$",
              "type": "string"
            }
          },
          "required": [
            "url",
            "channel"
          ],
          "type": "object",
          "x-choice": "notification-type",
          "x-choice-case": "slack"
        },
        "microsoft-teams": {
          "additionalProperties": false,
          "description": "Define Microsoft Teams Connector channel endpoint to post notification",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "channel": {
              "description": "Connector channel on which notification is to be posted",
              "format": "string",
              "pattern": "^(https)://[^\\s/$.?#].[^\\s]*$",
              "type": "string"
            }
          },
          "required": [
            "channel"
          ],
          "type": "object"
        },
        "emails": {
          "additionalProperties": false,
          "description": "Define email notification",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "ids": {
              "items": {
                "description": "EMail IDs",
                "format": "string",
                "pattern": "^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.)\\w+([-]?\\w+)$",
                "type": "string"
              },
              "type": "array"
            },
            "filter": {
              "additionalProperties": false,
              "description": "Filter notification",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "rules": {
                  "items": {
                    "description": "Rule filters",
                    "format": "string",
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            }
          },
          "required": [
            "ids"
          ]
        },
        "kafka-publish": {
          "additionalProperties": false,
          "description": "Define kafka notification",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "bootstrap-servers": {
              "items": {
                "description": "Bootstrap Servers are a list of host:port pairs to use for establishing the initial connection to the Kafka cluster",
                "format": "string",
                "type": "string"
              },
              "type": "array"
            },
            "sasl": {
              "additionalProperties": false,
              "description": "Authetication using username and password over SSL connection",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "certificate": {
                  "description": "File path to kafka CA-Certificate. Should be of pattern .+\\.pem",
                  "format": "string",
                  "pattern": "^.+\\.pem$",
                  "type": "string"
                },
                "password": {
                  "description": "Password for sasl_ssl authentication",
                  "format": "string",
                  "type": "string"
                },
                "username": {
                  "description": "Username for sasl_ssl authentication",
                  "format": "string",
                  "type": "string"
                }
              },
              "type": "object",
              "x-choice": "authentication",
              "x-choice-case": "sasl"
            },
            "topic": {
              "description": "Kafka topic to which Healthbot should publish. Should be of pattern \\.*[a-zA-Z0-9_-]+[a-zA-Z0-9\\._-]* , Default value is derived from <device/network-group>.<device-id>.<topic>.<rule>.<trigger>",
              "format": "string",
              "maxLength": 249,
              "pattern": "^\\.*[a-zA-Z0-9_-]+[a-zA-Z0-9\\._-]*$",
              "type": "string"
            },
            "use-hash-partitioner": {
              "description": "If true, key will be generated which will be hashed to provide a consistent partition number for the given kafka topic",
              "type": "boolean"
            }
          },
          "required": [
            "bootstrap-servers"
          ],
          "type": "object"
        },
        "amqp-publish": {
          "additionalProperties": false,
          "description": "Define amqp notification",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "exchange": {
              "description": "Name of exchange/routing agent of amqp on which connection has to be instantiated",
              "format": "string",
              "type": "string"
            },
            "host": {
              "description": "Host is amqp server/broker valid hostname or IP address",
              "format": "string",
              "type": "string"
            },
            "port": {
              "description": "Port is amqp server/broker listner port",
              "format": "int32",
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            },
            "routing-key": {
              "description": "Routing key is a message attribute the exchange looks at when deciding how to route the message to queues. Should be of pattern \\.*[a-zA-Z0-9_-]+[a-zA-Z0-9\\._-]* , Default value is derived from <device/network-group>.<device-id>.<topic>.<rule>.<trigger>",
              "format": "string",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^\\.*[a-zA-Z0-9_-]+[a-zA-Z0-9\\._-]*$",
              "type": "string"
            },
            "sasl": {
              "additionalProperties": false,
              "description": "Authetication using username and password over TLS connection",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "ca-profile": {
                  "description": "Name of the ca-profile to be used",
                  "format": "string",
                  "type": "string"
                },
                "local-certificate": {
                  "description": "Name of the local-certificate-profile to be used",
                  "format": "string",
                  "type": "string"
                },
                "password": {
                  "description": "Password for sasl authentication",
                  "format": "string",
                  "type": "string"
                },
                "server-common-name": {
                  "description": "Common name used while creating server certificate",
                  "format": "string",
                  "type": "string"
                },
                "username": {
                  "description": "Username for sasl authentication",
                  "format": "string",
                  "type": "string"
                }
              },
              "type": "object",
              "x-choice": "authentication",
              "x-choice-case": "sasl"
            },
            "vhost": {
              "description": "Virtual host of amqp on which connection has to be instantiated",
              "format": "string",
              "type": "string"
            }
          },
          "required": [
            "port",
            "host",
            "exchange"
          ],
          "type": "object",
          "x-choice": "notification-type",
          "x-choice-case": "amqp-publish"
        }
      },
      "required": [
        "notification-name"
      ],
      "type": "object"
    },
    "notifications_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "notification": {
          "items": {
            "$ref": "#/definitions/notification_schema"
          },
          "type": "array",
          "x-key": "notification-name"
        }
      },
      "required": [
        "notification"
      ],
      "type": "object"
    },
    "playbook_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Description about this playbook",
          "format": "string",
          "type": "string"
        },
        "playbook-name": {
          "description": "Name of the playbook. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "rules": {
          "items": {
            "description": "Rules that form a playbook. Rules must be specified as <topic-name>/<rule-name>",
            "format": "string",
            "maxLength": 129,
            "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9_-]*$",
            "type": "string"
          },
          "type": "array"
        },
        "synopsis": {
          "description": "Short description about this playbook",
          "format": "string",
          "type": "string"
        },
        "classification": {
          "description": "Classification info for this playbook",
          "format": "string",
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "playbook-name"
      ],
      "type": "object"
    },
    "playbooks_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "playbook": {
          "items": {
            "$ref": "#/definitions/playbook_schema"
          },
          "type": "array",
          "x-key": "playbook-name"
        }
      },
      "required": [
        "playbook"
      ],
      "type": "object"
    },
    "profile_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "security": {
          "additionalProperties": false,
          "description": "Security config",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "ca-profile": {
              "items": {
                "$ref": "#/definitions/ca-profile_schema"
              },
              "type": "array"
            },
            "local-certificate": {
              "items": {
                "$ref": "#/definitions/local-certificate_schema"
              },
              "type": "array"
            },
            "ssh-key-profile": {
              "items": {
                "$ref": "#/definitions/ssh-key-profile_schema"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "data-summarization": {
          "additionalProperties": false,
          "description": "summarization config",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "raw": {
              "items": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "data-type": {
                    "items": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "aggregation-functions": {
                          "items": {
                            "description": "List of supported summarization aggregation functions",
                            "enum": [
                              "latest",
                              "sum",
                              "count",
                              "mean",
                              "min",
                              "max",
                              "on-change",
                              "stddev"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "name": {
                          "description": "Name of the data-type for which summarization should be changed",
                          "enum": [
                            "string",
                            "integer",
                            "unsigned-integer",
                            "boolean",
                            "float"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "aggregation-functions"
                      ]
                    },
                    "type": "array",
                    "x-key": "name"
                  },
                  "name": {
                    "description": "Name of raw-data summarization profile",
                    "format": "string",
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                    "type": "string"
                  },
                  "path": {
                    "items": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "aggregation-functions": {
                          "items": {
                            "description": "List of supported summarization aggregation functions",
                            "enum": [
                              "latest",
                              "sum",
                              "count",
                              "mean",
                              "min",
                              "max",
                              "on-change",
                              "stddev"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "name": {
                          "description": "Sensor field path for which summarization should be changed. Apart from JTI OC sensor path, '<sensor-name>:' should be prepended to the sensor path",
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "aggregation-functions"
                      ]
                    },
                    "type": "array",
                    "x-key": "name"
                  }
                },
                "required": [
                  "name"
                ],
                "x-ref": [
                  "type-aggregate",
                  "path-aggregate"
                ]
              },
              "type": "array",
              "x-key": "name"
            }
          },
          "type": "object"
        },
        "rollup-summarization": {
              "additionalProperties": false,
              "description": "Data rollup summarization",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "field-profile": {
                  "items": {
                    "$ref": "#/definitions/rollup-summarization_schema"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
      },
      "type": "object"
    },
    "profiles_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "profile": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "security": {
              "additionalProperties": false,
              "description": "Security config",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "ca-profile": {
                  "items": {
                    "$ref": "#/definitions/ca-profile_schema"
                  },
                  "type": "array"
                },
                "local-certificate": {
                  "items": {
                    "$ref": "#/definitions/local-certificate_schema"
                  },
                  "type": "array"
                },
                "ssh-key-profile": {
                  "items": {
                    "$ref": "#/definitions/ssh-key-profile_schema"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "data-summarization": {
              "additionalProperties": false,
              "description": "summarization config",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "raw": {
                  "items": {
                    "additionalProperties": false,
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "data-type": {
                        "items": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "aggregation-functions": {
                              "items": {
                                "description": "List of supported summarization aggregation functions",
                                "enum": [
                                  "latest",
                                  "sum",
                                  "count",
                                  "mean",
                                  "min",
                                  "max",
                                  "on-change",
                                  "stddev"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "Name of the data-type for which summarization should be changed",
                              "enum": [
                                "string",
                                "integer",
                                "unsigned-integer",
                                "boolean",
                                "float"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "aggregation-functions"
                          ]
                        },
                        "type": "array",
                        "x-key": "name"
                      },
                      "name": {
                        "description": "Name of raw-data summarization profile",
                        "format": "string",
                        "maxLength": 64,
                        "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      },
                      "path": {
                        "items": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "aggregation-functions": {
                              "items": {
                                "description": "List of supported summarization aggregation functions",
                                "enum": [
                                  "latest",
                                  "sum",
                                  "count",
                                  "mean",
                                  "min",
                                  "max",
                                  "on-change",
                                  "stddev"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "Sensor field path for which summarization should be changed. Apart from JTI OC sensor path, '<sensor-name>:' should be prepended to the sensor path",
                              "format": "string",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "aggregation-functions"
                          ]
                        },
                        "type": "array",
                        "x-key": "name"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "x-ref": [
                      "type-aggregate",
                      "path-aggregate"
                    ]
                  },
                  "type": "array",
                  "x-key": "name"
                }
              },
              "type": "object"
            },
            "rollup-summarization": {
              "additionalProperties": false,
              "description": "Data rollup summarization",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "field-profile": {
                  "items": {
                    "$ref": "#/definitions/rollup-summarization_schema"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "required": [
        "profile"
      ],
      "type": "object"
    },
    "retention-policies_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "retention-policy": {
          "items": {
            "$ref": "#/definitions/retention-policy_schema"
          },
          "type": "array",
          "x-key": "retention-policy-name"
        }
      },
      "required": [
        "retention-policy"
      ],
      "type": "object"
    },
    "retention-policy_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "duration": {
          "description": "Schedule duration in days or hours, Should be of pattern [1-9][0-9]*[dh]",
          "format": "string",
          "pattern": "^[1-9][0-9]*[dh]$",
          "type": "string"
        },
        "replication": {
          "description": "Number of independent copies if stored in the cluster",
          "format": "int32",
          "type": "integer"
        },
        "retention-policy-name": {
          "description": "Name of the retention-policy. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        }
      },
      "required": [
        "retention-policy-name"
      ],
      "type": "object"
    },
    "rule_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Description about the rule",
          "format": "string",
          "type": "string"
        },
        "field": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "constant": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "value": {
                    "description": "Value for the constant",
                    "format": "string",
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ],
                "type": "object",
                "x-choice": "ingest-type",
                "x-choice-case": "constant"
              },
              "description": {
                "description": "Description about this field",
                "format": "string",
                "type": "string"
              },
              "field-name": {
                "description": "Name of the field. Should be of pattern [a-z][a-zA-Z0-9_-]*",
                "format": "string",
                "maxLength": 64,
                "pattern": "^[a-z][a-zA-Z0-9_-]*$",
                "type": "string"
              },
              "formula": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "anomaly-detection": {
                    "additionalProperties": false,
                    "description": "Apply anomaly detection. Learn dynamic threshold value over period\nof time and apply it on value",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "algorithm": {
                        "description": "Algorithm used to learn the dynamic threshold value",
                        "enum": [
                          "3sigma",
                          "k-means",
                          "holt-winters"
                        ],
                        "type": "string"
                      },
                      "field-name": {
                        "description": "Field name on which anomaly detection needs to be applied",
                        "format": "string",
                        "type": "string"
                      },
                      "learning-period": {
                        "description": "Learning period to learn the dynamic threshold. Should be of pattern [1-9][0-9]*(seconds|minutes|hours|days|weeks|years)",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(seconds|minutes|hours|days|weeks|years|s|m|h|d|w|y)$",
                        "type": "string"
                      },
                      "pattern-periodicity": {
                        "description": "Pattern periodicity. Should be of pattern [1-9][0-9]*(minutes|hours|days|weeks|months)(,[1-9][0-9]*(minutes|hours|days|weeks|months))*",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(minutes|hours|days|weeks|months|t|h|d|w|m|T|H|D|W|M)(,[1-9][0-9]*(minutes|hours|days|weeks|months|t|h|d|w|m|T|H|D|W|M))*$",
                        "type": "string"
                      },
                      "seasonality": {
                        "description": "Seasonality. Should be of pattern [1-9][0-9]*(minutes|hours|days|weeks|months)(,[1-9][0-9]*(minutes|hours|days|weeks|months))*",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(minutes|hours|days|weeks|months|t|h|d|w|m|T|H|D|W|M)(,[1-9][0-9]*(minutes|hours|days|weeks|months|t|h|d|w|m|T|H|D|W|M))*$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "field-name",
                      "learning-period",
                      "algorithm"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "anomaly-detection"
                  },
                  "count": {
                    "additionalProperties": false,
                    "description": "Find number of occurances",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "field-name": {
                        "description": "Field name on which count operation needs to be performed",
                        "format": "string",
                        "pattern": "^[$@][a-z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      },
                      "time-range": {
                        "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "field-name"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "count",
                    "x-ref": [
                      "time-range-mandatory"
                    ]
                  },
                  "dynamic-threshold": {
                    "additionalProperties": false,
                    "description": "Apply dynamic threshold. Learn dynamic threshold value over period\nof time and apply it on value",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "algorithm": {
                        "description": "Algorithm used to learn the dynamic threshold value",
                        "enum": [
                          "3sigma",
                          "k-means"
                        ],
                        "type": "string"
                      },
                      "field-name": {
                        "description": "Field name on which dynamic threshold needs to be applied",
                        "format": "string",
                        "type": "string"
                      },
                      "learning-period": {
                        "description": "Learning period to learn the dynamic threshold. Should be of pattern [1-9][0-9]*(\\.[0-9]+)?(offset|seconds|minutes|hours|days|weeks|years|o|s|m|h|d|w|y)",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(offset|seconds|minutes|hours|days|weeks|years|o|s|m|h|d|w|y)$",
                        "type": "string"
                      },
                      "pattern-periodicity": {
                        "description": "Pattern periodicity. Should be of pattern [1-9][0-9]*(minutes|hours|days|weeks|months)(,[1-9][0-9]*(minutes|hours|days|weeks|months))*",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(minutes|hours|days|weeks|months|t|h|d|w|m|T|H|D|W|M)(,[1-9][0-9]*(minutes|hours|days|weeks|months|t|h|d|w|m|T|H|D|W|M))*$",
                        "type": "string"
                      },
                      "seasonality": {
                        "description": "Seasonality. Should be of pattern [1-9][0-9]*(minutes|hours|days|weeks|months)(,[1-9][0-9]*(minutes|hours|days|weeks|months))*",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(minutes|hours|days|weeks|months|t|h|d|w|m|T|H|D|W|M)(,[1-9][0-9]*(minutes|hours|days|weeks|months|t|h|d|w|m|T|H|D|W|M))*$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "field-name",
                      "learning-period",
                      "algorithm"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "dynamic-threshold"
                  },
                  "eval": {
                    "additionalProperties": false,
                    "description": "Evaluates the expression",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "expression": {
                        "description": "Expression for evaluation must be a valid golang expression. Field-name if used in expression must be prefixed with $. operators should be prefix and suffix with spaces. For Example: $a + $b - $c",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "expression"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "eval"
                  },
                  "max": {
                    "additionalProperties": false,
                    "description": "Find the max value",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "field-name": {
                        "description": "Field name on which max operation needs to be performed",
                        "format": "string",
                        "type": "string"
                      },
                      "time-range": {
                        "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "time-range",
                      "field-name"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "max",
                    "x-ref": [
                      "time-range-mandatory"
                    ]
                  },
                  "mean": {
                    "additionalProperties": false,
                    "description": "Find the mean value",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "field-name": {
                        "description": "Field name on which mean operation needs to be performed",
                        "format": "string",
                        "type": "string"
                      },
                      "time-range": {
                        "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "time-range",
                      "field-name"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "mean",
                    "x-ref": [
                      "time-range-mandatory"
                    ]
                  },
                  "concatenate": {
                    "additionalProperties": false,
                    "description": "String concatenation",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "strings": {
                        "items": {
                          "description": "List of string on which string concatenation operation needs to be performed",
                          "format": "string",
                          "type": "string"
                        },
                        "minItems": 2,
                        "type": "array"
                      }
                    },
                    "required": [
                      "strings"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "concatenate"
                  },
                  "microburst": {
                    "additionalProperties": false,
                    "description": "Detect microbursts in the egress queues. This has to be used only with qmon sensors",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "if-name": {
                        "description": "Interface name. This should be field name where interface names are being stored",
                        "format": "string",
                        "type": "string"
                      },
                      "packets": {
                        "description": "Queue egress packets. This should be field name where queue egress packets are being stored",
                        "format": "string",
                        "type": "string"
                      },
                      "percentage": {
                        "description": "Queue buffer occupancy percentage. This should be field name where queue buffer occupancy percentage are being stored",
                        "format": "string",
                        "type": "string"
                      },
                      "queue-no": {
                        "description": "Queue numbers. This should be field name where queue numbers are being stored",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "if-name",
                      "percentage",
                      "packets",
                      "queue-no"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "microburst"
                  },
                  "min": {
                    "additionalProperties": false,
                    "description": "Find the min value",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "field-name": {
                        "description": "Field name on which min operation needs to be performed",
                        "format": "string",
                        "type": "string"
                      },
                      "time-range": {
                        "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "time-range",
                      "field-name"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "min",
                    "x-ref": [
                      "time-range-mandatory"
                    ]
                  },
                  "outlier-detection": {
                    "additionalProperties": false,
                    "description": "Apply outlier detection.",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "algorithm": {
                        "additionalProperties": false,
                        "patternProperties": {
                          "^@": {
                            "type": "object"
                          }
                        },
                        "properties": {
                          "dbscan": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "learning-period": {
                                "description": "Time period on which to detect outliers",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              },
                              "sensitivity": {
                                "additionalProperties": false,
                                "description": "Sensitivity to outliers: high sensitivity detects more outliers",
                                "patternProperties": {
                                  "^@": {
                                    "type": "object"
                                  }
                                },
                                "properties": {
                                  "absolute-percentage": {
                                    "description": "Absolute percentage of members that are to be marked as outliers",
                                    "format": "double",
                                    "type": "number",
                                    "x-choice": "sensitivity-level",
                                    "x-choice-case": "absolute-percentage"
                                  },
                                  "level": {
                                    "description": "Fuzzy level of outliers to be detected",
                                    "enum": [
                                      "low",
                                      "medium",
                                      "high"
                                    ],
                                    "type": "string",
                                    "x-choice": "sensitivity-level",
                                    "x-choice-case": "level"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": [
                              "learning-period"
                            ],
                            "type": "object",
                            "x-choice": "algorithm-type",
                            "x-choice-case": "dbscan"
                          },
                          "k-fold-3sigma": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "learning-period": {
                                "description": "Time period on which to detect outliers",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              },
                              "sensitivity": {
                                "additionalProperties": false,
                                "description": "Sensitivity to outliers: high sensitivity detects more outliers",
                                "patternProperties": {
                                  "^@": {
                                    "type": "object"
                                  }
                                },
                                "properties": {
                                  "absolute-percentage": {
                                    "description": "Absolute percentage of members that are to be marked as outliers",
                                    "format": "double",
                                    "type": "number",
                                    "x-choice": "sensitivity-level",
                                    "x-choice-case": "absolute-percentage"
                                  },
                                  "level": {
                                    "description": "Fuzzy level of outliers to be detected",
                                    "enum": [
                                      "low",
                                      "medium",
                                      "high"
                                    ],
                                    "type": "string",
                                    "x-choice": "sensitivity-level",
                                    "x-choice-case": "level"
                                  }
                                },
                                "type": "object"
                              },
                              "sigma-coefficient": {
                                "description": "Number of standard deviations past which outliers are marked",
                                "format": "double",
                                "type": "number"
                              }
                            },
                            "required": [
                              "learning-period"
                            ],
                            "type": "object",
                            "x-choice": "algorithm-type",
                            "x-choice-case": "k-fold-3sigma"
                          }
                        },
                        "type": "object"
                      },
                      "dataset": {
                        "description": "Variable containing the list of XPATHs to the data",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "dataset"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "outlier-detection"
                  },
                  "predict": {
                    "additionalProperties": false,
                    "description": "Learn baseline threshold based on the ML alogrithms and predict value in future",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "algorithm": {
                        "description": "Algorithm used to create baseline thresholds",
                        "enum": [
                          "median-prediction",
                          "holt-winters",
                          "hidden-markov"
                        ],
                        "type": "string"
                      },
                      "field-name": {
                        "description": "Field name on which ML algorithm needs to be applied",
                        "format": "string",
                        "type": "string"
                      },
                      "learning-period": {
                        "description": "Learning period to learn the baseline threshold. Should be of pattern [1-9][0-9]*(\\.[0-9]+)?(offset|seconds|minutes|hours|days|weeks|years|o|s|m|h|d|w|y)",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(offset|seconds|minutes|hours|days|weeks|years|o|s|m|h|d|w|y)$",
                        "type": "string"
                      },
                      "pattern-periodicity": {
                        "description": "Pattern periodicity. Should be of pattern [1-9][0-9]*(minutes|hours|days|weeks|months)(,[1-9][0-9]*(minutes|hours|days|weeks|months))*",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(minutes|hours|days|weeks|months|t|h|d|w|m|T|H|D|W|M)(,[1-9][0-9]*(minutes|hours|days|weeks|months|t|h|d|w|m|T|H|D|W|M))*$",
                        "type": "string"
                      },
                      "seasonality": {
                        "description": "Seasonality. Should be of pattern [1-9][0-9]*(minutes|hours|days|weeks|months)(,[1-9][0-9]*(minutes|hours|days|weeks|months))*",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(minutes|hours|days|weeks|months|t|h|d|w|m|T|H|D|W|M)(,[1-9][0-9]*(minutes|hours|days|weeks|months|t|h|d|w|m|T|H|D|W|M))*$",
                        "type": "string"
                      },
                      "prediction-offset": {
                        "description": "Time offset in future to predict. Should be of pattern [1-9][0-9]*(\\.[0-9]+)?(offset|seconds|minutes|hours|days|weeks|years|o|s|m|h|d|w|y)",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(offset|seconds|minutes|hours|days|weeks|years|o|s|m|h|d|w|y)$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "prediction-offset",
                      "field-name",
                      "learning-period",
                      "algorithm"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "predict"
                  },
                  "rate-of-change": {
                    "additionalProperties": false,
                    "description": "Rate of change between present and previous value",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "field-name": {
                        "description": "Field name on which rate-of-change operation needs to be performed",
                        "format": "string",
                        "pattern": "^[$][a-z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      },
                      "hold-time": {
                        "description": "How long previous value should be stored. Should match the pattern [0-9]*(seconds|minutes|hours|days|weeks|years|offset). Default is 1 day",
                        "pattern": "[0-9]*(\\.[0-9]+)?(seconds|minutes|hours|days|weeks|years|offset)",
                        "format": "string",
                        "type": "string"
                      },
                      "multiplication-factor": {
                        "description": "Value to be multiplied with calculated rate. Default is 1.0. Should be IEEE-754 64-bit floating-point numbers",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "field-name"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "rate-of-change"
                  },
                  "elapsed-time": {
                    "additionalProperties": false,
                    "description": "Elapsed time between present and previous value",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "field-name": {
                        "description": "Field name on which elapsed operation needs to be performed",
                        "format": "string",
                        "pattern": "^[$][a-z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      },
                      "hold-time": {
                        "description": "How long previous value should be stored. Should match the pattern [0-9]*(seconds|minutes|hours|days|weeks|years|offset). Default is 1 day",
                        "pattern": "[0-9]*(\\.[0-9]+)?(seconds|minutes|hours|days|weeks|years|offset)",
                        "format": "string",
                        "type": "string"
                      },
                      "multiplication-factor": {
                        "description": "Value to be multiplied with calculated time. Default is 1.0. Should be IEEE-754 64-bit floating-point numbers",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "field-name"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "elapsed-time"
                  },
                  "value-difference": {
                    "additionalProperties": false,
                    "description": "Value difference between present and previous value",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "field-name": {
                        "description": "Field name on which delta operation needs to be performed",
                        "format": "string",
                        "pattern": "^[$][a-z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      },
                      "hold-time": {
                        "description": "How long previous value should be stored. Should match the pattern [0-9]*(seconds|minutes|hours|days|weeks|years|offset). Default is 1 day",
                        "pattern": "[0-9]*(\\.[0-9]+)?(seconds|minutes|hours|days|weeks|years|offset)",
                        "format": "string",
                        "type": "string"
                      },
                      "multiplication-factor": {
                        "description": "Value to be multiplied with calculated time. Default is 1.0. Should be IEEE-754 64-bit floating-point numbers",
                        "format": "string",
                        "type": "string"
                      },
                      "extra-keys": {
                        "items": {
                          "description": "Optional extra unspecified rule keys used for aggregating field data when periodic aggregation is enabled",
                          "format": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "field-name"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "value-difference"
                  },
                  "stddev": {
                    "additionalProperties": false,
                    "description": "Find the standard deviation",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "field-name": {
                        "description": "Field name on which standard deviation operation needs to be performed",
                        "format": "string",
                        "type": "string"
                      },
                      "time-range": {
                        "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "time-range",
                      "field-name"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "stddev",
                    "x-ref": [
                      "time-range-mandatory"
                    ]
                  },
                  "sum": {
                    "additionalProperties": false,
                    "description": "Find the sum of values",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "field-name": {
                        "description": "Field name on which sum operation needs to be performed",
                        "format": "string",
                        "type": "string"
                      },
                      "time-range": {
                        "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                        "format": "string",
                        "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "time-range",
                      "field-name"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "sum",
                    "x-ref": [
                      "time-range-mandatory"
                    ]
                  },
                  "user-defined-function": {
                    "additionalProperties": false,
                    "description": "User defined function to populate field value",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "argument": {
                        "items": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "argument": {
                              "description": "Argument name",
                              "maxLength": 64,
                              "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                              "type": "string",
                              "x-path": "../../../../../function[function-name=current()/../../function-name]/argument/argument-name"
                            },
                            "value": {
                              "description": "Argument value",
                              "format": "string",
                              "type": "string"
                            }
                          },
                          "required": [
                            "argument",
                            "value"
                          ]
                        },
                        "type": "array",
                        "x-key": "argument value"
                      },
                      "function-name": {
                        "description": "Function name",
                        "maxLength": 64,
                        "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                        "type": "string",
                        "x-path": "../../../../function/function-name"
                      }
                    },
                    "required": [
                      "function-name"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "user-defined-function"
                  }
                },
                "type": "object",
                "x-choice": "ingest-type",
                "x-choice-case": "formula"
              },
              "reference": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "data-if-missing": {
                    "additionalProperties": false,
                    "description": "Assign value for field in case of data missing",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "value": {
                        "description": "Assign given default value for field in case of data missing",
                        "format": "string",
                        "type": "string",
                        "x-choice": "data-if-missing",
                        "x-choice-case": "value"
                      }
                    },
                    "type": "object"
                  },
                  "path": {
                    "description": "Reference to a field or trigger in different rule. Format is /topic[topic-name=<topic-name>]/rule[rule-name=<rule-name>]/field[<condition>]/<field-name> for field reference and /topic[topic-name=<topic-name>]/rule[rule-name=<rule-name>]/trigger[trigger-name=<trigger-name>]/key[condition]/trigger_field for trigger reference. Filtering part where field and key are mentioned is optional",
                    "format": "string",
                    "type": "string"
                  },
                  "time-range": {
                    "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                    "format": "string",
                    "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                    "type": "string"
                  }
                },
                "required": [
                  "path"
                ],
                "type": "object",
                "x-choice": "ingest-type",
                "x-choice-case": "reference",
                "x-ref": [
                  "time-range-group"
                ]
              },
              "sensor": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "data-if-missing": {
                      "additionalProperties": false,
                      "description": "Assign value for field in case of data missing. Zero-suppression takes priority over data-if-missing",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "value": {
                          "description": "Assign given default value for field in case of data missing",
                          "format": "string",
                          "type": "string",
                          "x-choice": "data-if-missing",
                          "x-choice-case": "value"
                        }
                      },
                      "type": "object"
                    },
                    "path": {
                      "description": "Sensor path",
                      "format": "string",
                      "pattern": "^\\S+$",
                      "type": "string"
                    },
                    "sensor-name": {
                      "description": "Name of the sensor",
                      "maxLength": 64,
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                      "type": "string",
                      "x-path": "../../../sensor/sensor-name"
                    },
                    "where": {
                      "description": "List of where clauses to filter ingest data",
                      "items": {
                        "additionalProperties": false,
                        "patternProperties": {
                          "^@": {
                            "type": "object"
                          }
                        },
                        "properties": {
                          "query": {
                            "description": "Query to filter ingest data",
                            "format": "string",
                            "type": "string"
                          }
                        },
                        "required": [
                          "query"
                        ]
                      },
                      "type": "array",
                      "x-key": "query"
                    },
                    "zero-suppression": {
                      "description": "Assign zero as default value for field in case of zero-suppression",
                      "items": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "path",
                    "sensor-name"
                  ]
                },
                "type": "array",
                "x-choice": "ingest-type",
                "x-choice-case": "sensors",
                "x-key": "sensor-name"
              },
              "type": {
                "enum": [
                  "string",
                  "integer",
                  "unsigned-integer",
                  "float"
                ],
                "type": "string"
              }
            },
            "required": [
              "field-name"
            ]
          },
          "type": "array",
          "x-key": "field-name"
        },
        "function": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "argument": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "argument-name": {
                      "description": "Name of the argument. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                      "format": "string",
                      "maxLength": 64,
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                      "type": "string"
                    },
                    "mandatory": {
                      "description": "Flag to indicate a mandatory attribute",
                      "items": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "argument-name"
                  ]
                },
                "type": "array",
                "x-key": "argument-name"
              },
              "description": {
                "description": "Description of the function",
                "format": "string",
                "type": "string"
              },
              "function-name": {
                "description": "Name of the function. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "format": "string",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string"
              },
              "method": {
                "description": "Function to be called",
                "format": "string",
                "type": "string"
              },
              "path": {
                "description": "File in which function is defined. This is relative path to the data directory",
                "format": "string",
                "type": "string"
              }
            },
            "required": [
              "function-name",
              "method",
              "path"
            ]
          },
          "type": "array",
          "x-key": "function-name"
        },
        "keys": {
          "items": {
            "description": "List of values which form the unique identifier of the rule",
            "format": "string",
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
            "type": "string"
          },
          "type": "array"
        },
        "network-rule": {
          "description": "Flag to denote a network rule",
          "items": {
            "type": "object",
            "x-nullable": true
          },
          "type": "array"
        },
        "disable-no-data-alarm": {
          "description": "Disable No Data Alarm",
          "items": {
            "type": "object",
            "x-nullable": true
          },
          "type": "array"
        },
        "rule-frequency": {
          "description": "Frequency at which the rule\u2019s field, reference, and vector elements should be computed. Required only when a rule doesn\u2019t have a sensor defined. Specify integer >= 0 followed by s/m/h/d/w/y representing seconds/minutes/hours/days/weeks/years. Eg: 2s",
          "format": "string",
          "pattern": "^[1-9][0-9]*[smhdwy]$",
          "type": "string"
        },
        "rule-name": {
          "description": "Name of the rule. Should be of pattern [a-z][a-z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-z][a-z0-9_-]*$",
          "type": "string"
        },
        "sensor": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "description": {
                "description": "Description about the sensor",
                "format": "string",
                "type": "string"
              },
              "sflow": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "sensor-name": {
                    "description": "Sensor to subscribe",
                    "format": "string",
                    "pattern": "^\\S+$",
                    "type": "string"
                  }
                },
                "required": [
                  "sensor-name"
                ],
                "type": "object",
                "x-choice": "sensor-type",
                "x-choice-case": "sflow"
              },
              "flow": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "template-name": {
                    "format": "string",
                    "type": "string"
                  }
                },
                "required": [
                  "template-name"
                ],
                "type": "object",
                "x-choice": "sensor-type",
                "x-choice-case": "flow"
              },
              "iAgent": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "args": {
                    "items": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "arg-name": {
                          "description": "name of argument",
                          "format": "string",
                          "type": "string"
                        },
                        "arg-value": {
                          "description": "value of argument",
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "required": [
                        "arg-name"
                      ]
                    },
                    "type": "array",
                    "x-key": "arg-name"
                  },
                  "file": {
                    "description": "File where table and views are defined",
                    "format": "string",
                    "type": "string"
                  },
                  "frequency": {
                    "description": "Frequency at which the iagent should execute the commands and extract the data. Specify positive integer followed by s/m/h/d/w/y representing seconds/minutes/hours/days/weeks/years. Eg: 2s",
                    "format": "string",
                    "pattern": "^[1-9][0-9]*[smhdwy]$",
                    "type": "string"
                  },
                  "table": {
                    "description": "Table which needs to be used to extract the data",
                    "format": "string",
                    "type": "string"
                  },
                  "target": {
                    "description": "To run command on FPC, specifiy FPC target (optional)",
                    "format": "string",
                    "type": "string"
                  }
                },
                "required": [
                  "table",
                  "frequency",
                  "file"
                ],
                "type": "object",
                "x-choice": "sensor-type",
                "x-choice-case": "iAgent"
              },
              "native-gpb": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "frequency": {
                    "description": "Sensor subscription duration. Specify integer >= 0 followed by s/m/h/d/w/y representing seconds/minutes/hours/days/weeks/years. Eg: 2s. A frequency of zero should be used only in case of events subscription",
                    "format": "string",
                    "pattern": "^[0-9]+[smhdwy]$",
                    "type": "string"
                  },
                  "port": {
                    "description": "Port on which the native sensors will be received",
                    "format": "int32",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                  },
                  "sensor-name": {
                    "description": "Sensor to subscribe",
                    "format": "string",
                    "type": "string",
                    "pattern": "^\\S+$"
                  }
                },
                "required": [
                  "sensor-name",
                  "port"
                ],
                "type": "object",
                "x-choice": "sensor-type",
                "x-choice-case": "native-gpb"
              },
              "open-config": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "frequency": {
                    "description": "Sensor subscription duration. Specify integer >= 0 followed by s/m/h/d/w/y representing seconds/minutes/hours/days/weeks/years. Eg: 2s. A frequency of zero should be used only in case of events subscription",
                    "format": "string",
                    "pattern": "^[0-9]+[smhdwy]$",
                    "type": "string"
                  },
                  "sensor-name": {
                    "description": "Sensor to subscribe",
                    "format": "string",
                    "type": "string",
                    "pattern": "^\\S+$"
                  }
                },
                "required": [
                  "frequency",
                  "sensor-name"
                ],
                "type": "object",
                "x-choice": "sensor-type",
                "x-choice-case": "open-config"
              },
              "server-monitoring": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "frequency": {
                    "description": "Sensor subscription duration. Specify integer >= 0 followed by s/m/h/d/w/y representing seconds/minutes/hours/days/weeks/years. Eg: 2s. A frequency of zero should be used only in case of events subscription",
                    "format": "string",
                    "pattern": "^[0-9]+[smhdwy]$",
                    "type": "string"
                  },
                  "sensor-name": {
                    "description": "Sensor to subscribe",
                    "format": "string",
                    "type": "string",
                    "pattern": "^\\S+$"
                  }
                },
                "required": [
                  "frequency",
                  "sensor-name"
                ],
                "type": "object",
                "x-choice": "sensor-type",
                "x-choice-case": "open-config"
              },
              "sensor-name": {
                "description": "Name of sensor. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "format": "string",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string"
              },
              "snmp": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "frequency": {
                    "description": "Frequency at which data needs to be extracted from given SNMP table. Specify positive integer followed by s/m/h/d/w/y representing seconds/minutes/hours/days/weeks/years. Eg: 2s",
                    "format": "string",
                    "pattern": "^[1-9][0-9]*[smhdwy]$",
                    "type": "string"
                  },
                  "scalars": {
                    "items": {
                      "description": "List of SNMP scalar OIDs",
                      "format": "string",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "table": {
                    "description": "OID of an SNMP table",
                    "format": "string",
                    "type": "string"
                  }
                },
                "required": [
                  "frequency"
                ],
                "type": "object",
                "x-choice": "sensor-type",
                "x-choice-case": "snmp"
              },
              "snmp-notification": {
                "additionalProperties": false,
                "description": "SNMP Trap/Inform sensors",
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "notification-name": {
                    "format": "string",
                    "type": "string"
                  }
                },
                "required": [
                  "notification-name"
                ],
                "type": "object",
                "x-choice": "sensor-type",
                "x-choice-case": "snmp-notification"
              },
              "syslog": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "pattern-set": {
                    "description": "Pattern-set applicable for this sensor",
                    "format": "string",
                    "type": "string"
                  },
                  "maximum-hold-period": {
                    "description": "Maximum time (in units of seconds/minutes/hours/days) system will wait for all fields to arrive before flushing all the field data. Default is 1 second",
                    "format": "string",
                    "pattern": "[1-9][0-9]*[smhd]",
                    "type": "string",
                    "default": "1s"
                  }
                },
                "required": [
                  "pattern-set"
                ],
                "type": "object",
                "x-choice": "sensor-type",
                "x-choice-case": "syslog"
              },
              "synopsis": {
                "description": "Synopsis about the sensor",
                "format": "string",
                "type": "string"
              },
              "byoi": {
                "additionalProperties": false,
                "description": "Bring your own ingest ingest plugin config",
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "plugin": {
                    "additionalProperties": false,
                    "description": "Input plugin",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "name": {
                        "description": "Name of the input plugin",
                        "format": "string",
                        "type": "string"
                      },
                      "parameters": {
                        "description": "Plugin specific parameters (config)",
                        "items": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "key": {
                              "description": "Key of the parameter",
                              "format": "string",
                              "type": "string"
                            },
                            "value": {
                              "description": "Value of the parameter",
                              "format": "string",
                              "type": "string"
                            }
                          },
                          "required": [
                            "value",
                            "key"
                          ]
                        },
                        "type": "array",
                        "x-key": "key"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  }
                },
                "type": "object",
                "x-choice": "sensor-type",
                "x-choice-case": "byoi"
              }
            },
            "required": [
              "sensor-name"
            ]
          },
          "type": "array",
          "x-key": "sensor-name"
        },
        "synopsis": {
          "description": "Synopsis about the rule",
          "format": "string",
          "type": "string"
        },
        "field-aggregation-time-range": {
          "description": "How much back in time should we look for field aggregation. Specify positive integer followed by o/s/m/h/d/w/y/offset representing seconds/minutes/hours/days/weeks/years. Eg: 2s",
          "format": "string",
          "pattern": "^[1-9][0-9]*(o|s|m|h|d|w|y|offset)$",
          "type": "string"
        },
        "trigger": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "description": {
                "description": "Description about the trigger",
                "format": "string",
                "type": "string"
              },
              "frequency": {
                "description": "Frequency or time interval at which the trigger needs to be evaluated. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                "format": "string",
                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                "type": "string"
              },
              "synopsis": {
                "description": "Synopsis about the trigger",
                "format": "string",
                "type": "string"
              },
              "disable-alarm-deduplication": {
                "description": "Disable alarm deduplication, so that alarms are always generated",
                "items": {
                  "type": "object",
                  "x-nullable": true
                },
                "type": "array"
              },
              "term": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "term-name": {
                      "description": "Term name. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                      "format": "string",
                      "maxLength": 64,
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                      "type": "string"
                    },
                    "then": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "next": {
                          "description": "Continue evaluating next term in a trigger",
                          "items": {
                            "type": "object",
                            "x-nullable": true
                          },
                          "type": "array"
                        },
                        "status": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "color": {
                              "description": "Color that needs to be shown in the health tree",
                              "enum": [
                                "green",
                                "yellow",
                                "red"
                              ],
                              "format": "string",
                              "type": "string"
                            },
                            "message": {
                              "description": "Descriotion that needs to be show in the health tree",
                              "format": "string",
                              "type": "string"
                            }
                          },
                          "required": [
                            "color"
                          ],
                          "type": "object"
                        },
                        "user-defined-action": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "argument": {
                                "items": {
                                  "additionalProperties": false,
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "argument": {
                                      "description": "Argument name",
                                      "maxLength": 64,
                                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                                      "type": "string",
                                      "x-path": "../../../../../../function[function-name=current()/../../function-name]/argument/argument-name"
                                    },
                                    "value": {
                                      "description": "Argument value",
                                      "format": "string",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "argument",
                                    "value"
                                  ]
                                },
                                "type": "array",
                                "x-key": "argument value"
                              },
                              "function-name": {
                                "description": "Function name",
                                "maxLength": 64,
                                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                                "type": "string",
                                "x-path": "../../../../../function/function-name"
                              }
                            },
                            "required": [
                              "function-name"
                            ]
                          },
                          "type": "array",
                          "x-key": "function-name"
                        },
                        "workflow": {
                          "description": "Trigger workflow execution",
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "argument": {
                                "$ref": "#/definitions/workflow_argument_group_schema"
                              },
                              "batch": {
                                "description": "Maximum parallel steps launched",
                                "format": "int32",
                                "type": "integer"
                              },
                              "retry": {
                                "additionalProperties": false,
                                "description": "Retry failed steps",
                                "patternProperties": {
                                  "^@": {
                                    "type": "object"
                                  }
                                },
                                "properties": {
                                  "backoff": {
                                    "additionalProperties": false,
                                    "description": "Backoff retry attempts exponentially",
                                    "patternProperties": {
                                      "^@": {
                                        "type": "object"
                                      }
                                    },
                                    "properties": {
                                      "duration": {
                                        "description": "Initial duration to wait before retrying failed step",
                                        "format": "string",
                                        "type": "string"
                                      },
                                      "factor": {
                                        "description": "Wait duration multiplication factor during each retry attempt",
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "max-duration": {
                                        "description": "Maximum duration to wait before retrying a failed step",
                                        "format": "string",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "limit": {
                                    "description": "Maximum number of retry attempts",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "timeout": {
                                "description": "Maximum time to wait for the step completion before bailing out (default 60 seconds)",
                                "format": "string",
                                "type": "string"
                              },
                              "workflow-name": {
                                "description": "Name of the workflow to trigger",
                                "format": "string",
                                "type": "string"
                              }
                            },
                            "required": [
                              "workflow-name"
                            ],
                            "x-ref": [
                              "attributes-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "workflow-name"
                        }
                      },
                      "type": "object"
                    },
                    "when": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "does-not-match-with": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "ignore-case": {
                                "description": "Flag to ignore case while matching the string",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array"
                              },
                              "left-operand": {
                                "description": "Left operand. This is the string in which we have to match the expression.",
                                "format": "string",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "Right operand. This is the match expression.",
                                "format": "string",
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "right-operand",
                              "left-operand"
                            ],
                            "x-ref": [
                              "time-range-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "equal-to": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "left-operand": {
                                "description": "Left operand",
                                "format": "string",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "right operand",
                                "format": "string",
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "right-operand",
                              "left-operand"
                            ],
                            "x-ref": [
                              "when-lhs-rhs-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "exists": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "field-name": {
                                "description": "Field name which needs to be present",
                                "format": "string",
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "field-name"
                            ],
                            "x-ref": [
                              "time-range-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "field-name"
                        },
                        "greater-than": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "left-operand": {
                                "description": "Left operand",
                                "format": "string",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "right operand",
                                "format": "string",
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "right-operand",
                              "left-operand"
                            ],
                            "x-ref": [
                              "when-lhs-rhs-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "greater-than-or-equal-to": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "left-operand": {
                                "description": "Left operand",
                                "format": "string",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "right operand",
                                "format": "string",
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "right-operand",
                              "left-operand"
                            ],
                            "x-ref": [
                              "when-lhs-rhs-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "increasing-at-least-by-rate": {
                          "description": "Rate of increase between successive values is at least given rate",
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "field-name": {
                                "description": "Field name. Should match the pattern $[a-z][a-zA-Z0-9_-]*",
                                "format": "string",
                                "pattern": "^\\$[a-z][a-zA-Z0-9_-]*$",
                                "type": "string"
                              },
                              "per": {
                                "description": "Time unit part of rate",
                                "enum": [
                                  "second",
                                  "minute",
                                  "hour",
                                  "day",
                                  "week",
                                  "month",
                                  "year"
                                ],
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value part of rate. This can be a float or field name from this rule and should match the pattern (\\d+(\\.\\d{0,2})?)|($[a-z][a-zA-Z0-9_-]*)",
                                "pattern": "(^\\d+(\\.\\d{0,2})?$)|(^\\$[a-z][a-zA-Z0-9_-]*$)",
                                "format": "string",
                                "type": "string",
                                "x-choice": "value-type",
                                "x-choice-case": "value"
                              },
                              "percentage": {
                                "description": "Percentage of change from previous value. This can be a float or field name from this rule and should match the pattern (\\d+(\\.\\d{0,2})?)|($[a-z][a-zA-Z0-9_-]*)",
                                "pattern": "(^\\d+(\\.\\d{0,2})?$)|(^\\$[a-z][a-zA-Z0-9_-]*$)",
                                "format": "string",
                                "type": "string",
                                "x-choice": "value-type",
                                "x-choice-case": "percentage"
                              }
                            },
                            "required": [
                              "field-name",
                              "per"
                            ],
                            "x-ref": [
                              "time-range-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "field-name"
                        },
                        "increasing-at-least-by-value": {
                          "description": "Increase between successive values is at least given value",
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "field-name": {
                                "description": "Field name. Should match the pattern $[a-z][a-zA-Z0-9_-]*",
                                "format": "string",
                                "pattern": "^\\$[a-z][a-zA-Z0-9_-]*$",
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of increase between current and last reported values",
                                "format": "string",
                                "type": "string"
                              }
                            },
                            "required": [
                              "field-name"
                            ],
                            "x-ref": [
                              "time-range-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "field-name"
                        },
                        "increasing-at-most-by-rate": {
                          "description": "Rate of increase between successive values is at most given rate",
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "field-name": {
                                "description": "Field name. Should match the pattern $[a-z][a-zA-Z0-9_-]*",
                                "format": "string",
                                "pattern": "^\\$[a-z][a-zA-Z0-9_-]*$",
                                "type": "string"
                              },
                              "per": {
                                "description": "Time unit part of rate",
                                "enum": [
                                  "second",
                                  "minute",
                                  "hour",
                                  "day",
                                  "week",
                                  "month",
                                  "year"
                                ],
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value part of rate. This can be a float or field name from this rule and should match the pattern (\\d+(\\.\\d{0,2})?)|($[a-z][a-zA-Z0-9_-]*)",
                                "pattern": "(^\\d+(\\.\\d{0,2})?$)|(^\\$[a-z][a-zA-Z0-9_-]*$)",
                                "format": "string",
                                "type": "string",
                                "x-choice": "value-type",
                                "x-choice-case": "value"
                              },
                              "percentage": {
                                "description": "Percentage of change from previous value. This can be a float or field name from this rule and should match the pattern (\\d+(\\.\\d{0,2})?)|($[a-z][a-zA-Z0-9_-]*)",
                                "pattern": "(^\\d+(\\.\\d{0,2})?$)|(^\\$[a-z][a-zA-Z0-9_-]*$)",
                                "format": "string",
                                "type": "string",
                                "x-choice": "value-type",
                                "x-choice-case": "percentage"
                              }
                            },
                            "required": [
                              "field-name",
                              "per"
                            ],
                            "x-ref": [
                              "time-range-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "field-name"
                        },
                        "increasing-at-most-by-value": {
                          "description": "Increase between successive values is at most given value",
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "field-name": {
                                "description": "Field name. Should match the pattern $[a-z][a-zA-Z0-9_-]*",
                                "format": "string",
                                "pattern": "^\\$[a-z][a-zA-Z0-9_-]*$",
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of increase between current and last reported values",
                                "format": "string",
                                "type": "string"
                              }
                            },
                            "required": [
                              "field-name"
                            ],
                            "x-ref": [
                              "time-range-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "field-name"
                        },
                        "less-than": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "left-operand": {
                                "description": "Left operand",
                                "format": "string",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "right operand",
                                "format": "string",
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "right-operand",
                              "left-operand"
                            ],
                            "x-ref": [
                              "when-lhs-rhs-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "less-than-or-equal-to": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "left-operand": {
                                "description": "Left operand",
                                "format": "string",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "right operand",
                                "format": "string",
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "right-operand",
                              "left-operand"
                            ],
                            "x-ref": [
                              "when-lhs-rhs-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "matches-with": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "ignore-case": {
                                "description": "Flag to ignore case while matching the string",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array"
                              },
                              "left-operand": {
                                "description": "Left operand. This is the string in which we have to match the expression.",
                                "format": "string",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "Right operand. This is the match expression.",
                                "format": "string",
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "right-operand",
                              "left-operand"
                            ],
                            "x-ref": [
                              "time-range-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "max-rate-of-increase": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "field-name": {
                                "description": "Field name on which rate should be compared",
                                "format": "string",
                                "type": "string"
                              },
                              "rate": {
                                "description": "Rate",
                                "format": "string",
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "field-name"
                            ],
                            "x-ref": [
                              "time-range-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "field-name"
                        },
                        "min-rate-of-increase": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "field-name": {
                                "description": "Field name on which rate should be compared",
                                "format": "string",
                                "type": "string"
                              },
                              "rate": {
                                "description": "Rate",
                                "format": "string",
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "field-name"
                            ],
                            "x-ref": [
                              "time-range-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "field-name"
                        },
                        "not-equal-to": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "left-operand": {
                                "description": "Left operand",
                                "format": "string",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "right operand",
                                "format": "string",
                                "type": "string"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "right-operand",
                              "left-operand"
                            ],
                            "x-ref": [
                              "when-lhs-rhs-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "range": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "field-name": {
                                "description": "Field name on which range should be applied",
                                "format": "string",
                                "type": "string"
                              },
                              "max": {
                                "description": "Maximum value in the range",
                                "format": "double",
                                "type": "number"
                              },
                              "min": {
                                "description": "Minumum value in the range",
                                "format": "double",
                                "type": "number"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "max",
                              "field-name",
                              "min"
                            ],
                            "x-ref": [
                              "time-range-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "field-name"
                        },
                        "user-defined-function": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "all": {
                                "description": "With this flag, result is set to True only if all the data matches the given condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "all"
                              },
                              "any": {
                                "description": "With this flag, result is set to True if any one of the data matches the condition",
                                "items": {
                                  "type": "object",
                                  "x-nullable": true
                                },
                                "type": "array",
                                "x-choice": "condition-check",
                                "x-choice-case": "any"
                              },
                              "argument": {
                                "items": {
                                  "additionalProperties": false,
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "argument": {
                                      "description": "Argument name",
                                      "maxLength": 64,
                                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                                      "type": "string",
                                      "x-path": "../../../../../../function[function-name=current()/../../function-name]/argument/argument-name"
                                    },
                                    "value": {
                                      "description": "Argument value",
                                      "format": "string",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "argument",
                                    "value"
                                  ]
                                },
                                "type": "array",
                                "x-key": "argument value"
                              },
                              "function-name": {
                                "description": "Function name",
                                "maxLength": 64,
                                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                                "type": "string",
                                "x-path": "../../../../../function/function-name"
                              },
                              "time-range": {
                                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                                "format": "string",
                                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "function-name"
                            ],
                            "x-ref": [
                              "time-range-group",
                              "condition-check-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "function-name"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "term-name"
                  ]
                },
                "minItems": 1,
                "type": "array",
                "x-key": "term-name"
              },
              "trigger-name": {
                "description": "Trigger name. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "format": "string",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string"
              }
            },
            "required": [
              "term",
              "trigger-name"
            ]
          },
          "type": "array",
          "x-key": "trigger-name"
        },
        "variable": {
          "description": "Playbook variable configuration",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "description": {
                "description": "Description about the variable",
                "format": "string",
                "type": "string"
              },
              "name": {
                "description": "Variable name used in the playbook. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "format": "string",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string"
              },
              "type": {
                "description": "Type of value supported. This information will be used by UI to display options available for the values",
                "enum": [
                  "int",
                  "integer",
                  "unsigned-integer",
                  "float",
                  "string",
                  "boolean",
                  "device-group",
                  "device",
                  "sensor-argument"
                ],
                "type": "string"
              },
              "value": {
                "description": "Default value for the variable",
                "format": "string",
                "type": "string"
              }
            },
            "required": [
              "type",
              "name"
            ]
          },
          "type": "array",
          "x-key": "name"
        },
        "vector": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "formula": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "and": {
                    "additionalProperties": false,
                    "description": "AND(intersection) operation between two vectors. Resultant vector is a set with elements common in both vectors",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "left-vector": {
                        "description": "Vector name. Pattern for giving vector name is @[a-z][a-zA-Z0-9_-]*",
                        "format": "string",
                        "pattern": "^@[a-z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      },
                      "right-vector": {
                        "description": "Vector name. Pattern for giving vector name is @[a-z][a-zA-Z0-9_-]*",
                        "format": "string",
                        "pattern": "^@[a-z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "left-vector",
                      "right-vector"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "and"
                  },
                  "or": {
                    "additionalProperties": false,
                    "description": "OR(union) operation between two vectors. Resultant vector is a set with elements from both the vectors",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "left-vector": {
                        "description": "Vector name. Pattern for giving vector name is @[a-z][a-zA-Z0-9_-]*",
                        "format": "string",
                        "pattern": "^@[a-z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      },
                      "right-vector": {
                        "description": "Vector name. Pattern for giving vector name is @[a-z][a-zA-Z0-9_-]*",
                        "format": "string",
                        "pattern": "^@[a-z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "left-vector",
                      "right-vector"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "or"
                  },
                  "unique": {
                    "additionalProperties": false,
                    "description": "Create a vector with unique elements from another vector",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "vector-name": {
                        "description": "Vector name in which unique elements needs to be computed. Pattern for giving vector name is @[a-z][a-zA-Z0-9_-]*",
                        "format": "string",
                        "pattern": "^@[a-z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "vector-name"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "unique"
                  },
                  "unless": {
                    "additionalProperties": false,
                    "description": "UNLESS(difference) operation between vectors. Resultant vector is a set with elements in left-vector but not in right-vector",
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "left-vector": {
                        "description": "Vector name. Pattern for giving vector name is @[a-z][a-zA-Z0-9_-]*",
                        "format": "string",
                        "pattern": "^@[a-z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      },
                      "right-vector": {
                        "description": "Vector name. Pattern for giving vector name is @[a-z][a-zA-Z0-9_-]*",
                        "format": "string",
                        "pattern": "^@[a-z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "left-vector",
                      "right-vector"
                    ],
                    "type": "object",
                    "x-choice": "formula-type",
                    "x-choice-case": "unless"
                  }
                },
                "type": "object",
                "x-choice": "ingest-type",
                "x-choice-case": "formula"
              },
              "path": {
                "items": {
                  "description": "List of elements that should form a vector. This can be fields of present rule or references to fields/triggers evaluations in different rule. Format of reference is /topic[topic-name=<topic-name>]/rule[rule-name=<rule-name>]/field[<condition>]/<field-name> for field reference and /topic[topic-name=<topic-name>]/rule[rule-name=<rule-name>]/trigger[trigger-name=<trigger-name>]/key[condition]/trigger_field for trigger reference. Filtering part where field and key are mentioned is optional",
                  "format": "string",
                  "type": "string"
                },
                "type": "array",
                "x-choice": "ingest-type",
                "x-choice-case": "path"
              },
              "time-range": {
                "description": "How much back in time should we look for data. Specify positive integer followed by s/m/h/d/w/y/o representing seconds/minutes/hours/days/weeks/years/offset. Eg: 2s",
                "format": "string",
                "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
                "type": "string"
              },
              "vector-name": {
                "description": "Name of the vector. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "format": "string",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string"
              }
            },
            "required": [
              "vector-name"
            ]
          },
          "type": "array",
          "x-key": "vector-name"
        },
        "rule-properties": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "author": {
              "description": "E-mail address of the rule writer",
              "format": "string",
              "pattern": "^([\\w\\-_\\.]+)@([\\w])+[.][\\w]+$",
              "type": "string"
            },
            "catalogue": {
              "additionalProperties": false,
              "description": "Metadata to classify the rules",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "tier": {
                  "enum": [
                    "1",
                    "2",
                    "3"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "contributor": {
              "enum": [
                "juniper",
                "external"
              ],
              "type": "string"
            },
            "date": {
              "pattern": "^(19|20)\\d\\d[/](0[1-9]|1[012])[/](0[1-9]|[12][0-9]|3[01])$",
              "format": "string",
              "type": "string"
            },
            "helper-files": {
              "items": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "file-type": {
                    "enum": [
                      "schema",
                      "mib",
                      "other"
                    ],
                    "type": "string"
                  },
                  "list-of-files": {
                    "items": {
                      "format": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                  }
                },
                "required": [
                  "file-type",
                  "list-of-files"
                ]
              },
              "type": "array",
              "x-key": "file-type"
            },
            "supported-devices": {
              "additionalProperties": false,
              "description": "Devices in which the sensors used by the rule are supported",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "juniper": {
                  "additionalProperties": false,
                  "description": "Supported juniper devices",
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "operating-system": {
                      "description": "Operating system of the device",
                      "items": {
                        "additionalProperties": false,
                        "patternProperties": {
                          "^@": {
                            "type": "object"
                          }
                        },
                        "properties": {
                          "os-name": {
                            "description": "Operating system for the supported devices",
                            "enum": [
                              "junos",
                              "junosEvolved"
                            ],
                            "type": "string"
                          },
                          "products": {
                            "description": "Product information of the device",
                            "items": {
                              "additionalProperties": false,
                              "patternProperties": {
                                "^@": {
                                  "type": "object"
                                }
                              },
                              "properties": {
                                "platforms": {
                                  "description": "Platform information",
                                  "items": {
                                    "additionalProperties": false,
                                    "patternProperties": {
                                      "^@": {
                                        "type": "object"
                                      }
                                    },
                                    "properties": {
                                      "platform-name": {
                                        "description": "Platform name, Ex: MX960. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                                        "format": "string",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                                        "type": "string"
                                      },
                                      "releases": {
                                        "description": "Release information for the products",
                                        "items": {
                                          "additionalProperties": false,
                                          "patternProperties": {
                                            "^@": {
                                              "type": "object"
                                            }
                                          },
                                          "properties": {
                                            "release-name": {
                                              "description": "Release name, Should be of pattern (\\d){1,2}[.](\\d){1}([\\w\\-_\\.]*)",
                                              "format": "string",
                                              "pattern": "^(\\d){1,2}[.](\\d){1}([\\w\\-_\\.]*)$",
                                              "type": "string"
                                            },
                                            "release-support": {
                                              "description": "Specifies the min/max support for this release",
                                              "enum": [
                                                "max-supported-release",
                                                "only-on-this-release",
                                                "min-supported-release"
                                              ],
                                              "type": "string"
                                            },
                                            "sensors": {
                                              "items": {
                                                "description": "List of sensors to to use",
                                                "format": "string",
                                                "maxLength": 64,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "release-name"
                                          ],
                                          "x-ref": [
                                            "sensor-choice-group",
                                            "release-support-grouping"
                                          ]
                                        },
                                        "type": "array",
                                        "x-key": "release-name"
                                      },
                                      "sensors": {
                                        "items": {
                                          "description": "List of sensors to to use",
                                          "format": "string",
                                          "maxLength": 64,
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "platform-name"
                                    ],
                                    "x-ref": [
                                      "sensor-choice-group"
                                    ]
                                  },
                                  "type": "array",
                                  "x-key": "platform-name"
                                },
                                "product-name": {
                                  "description": "Product name, Ex: MX, SRX. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                                  "format": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                                  "type": "string"
                                },
                                "releases": {
                                  "description": "Release information for the products",
                                  "items": {
                                    "additionalProperties": false,
                                    "patternProperties": {
                                      "^@": {
                                        "type": "object"
                                      }
                                    },
                                    "properties": {
                                      "platform": {
                                        "items": {
                                          "description": "List of platforms supported, Ex: MX80, MX2020. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                                          "format": "string",
                                          "maxLength": 64,
                                          "minLength": 1,
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "release-name": {
                                        "description": "Release name, Should be of pattern (\\d){1,2}[.](\\d){1}([\\w\\-_\\.]*)",
                                        "format": "string",
                                        "pattern": "^(\\d){1,2}[.](\\d){1}([\\w\\-_\\.]*)$",
                                        "type": "string"
                                      },
                                      "release-support": {
                                        "description": "Specifies the min/max support for this release",
                                        "enum": [
                                          "max-supported-release",
                                          "only-on-this-release",
                                          "min-supported-release"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "release-name"
                                    ]
                                  },
                                  "type": "array",
                                  "x-key": "release-name"
                                },
                                "sensors": {
                                  "items": {
                                    "description": "List of sensors to to use",
                                    "format": "string",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "product-name"
                              ],
                              "x-ref": [
                                "sensor-choice-group"
                              ]
                            },
                            "type": "array",
                            "x-key": "product-name"
                          },
                          "sensors": {
                            "items": {
                              "description": "List of sensors to to use",
                              "format": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "os-name"
                        ],
                        "x-ref": [
                          "sensor-choice-group"
                        ]
                      },
                      "type": "array",
                      "x-key": "os-name"
                    },
                    "sensors": {
                      "items": {
                        "description": "List of sensors to to use",
                        "format": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "x-ref": [
                    "sensor-choice-group"
                  ]
                },
                "other-vendor": {
                  "description": "Supported other-vendor devices",
                  "items": {
                    "additionalProperties": false,
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "apply-macro": {
                        "items": {
                          "$ref": "#/definitions/apply-macro_schema"
                        },
                        "type": "array",
                        "x-key": "name"
                      },
                      "operating-system": {
                        "description": "[Deprecated] Vendor operating system, Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                        "format": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      },
                      "operating-systems": {
                        "description": "Operating system of the device",
                        "items": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "os-name": {
                              "description": "Operating system for the supported devices",
                              "format": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "type": "string"
                            },
                            "products": {
                              "description": "Product information of the device",
                              "items": {
                                "additionalProperties": false,
                                "patternProperties": {
                                  "^@": {
                                    "type": "object"
                                  }
                                },
                                "properties": {
                                  "platforms": {
                                    "description": "Platform information",
                                    "items": {
                                      "additionalProperties": false,
                                      "patternProperties": {
                                        "^@": {
                                          "type": "object"
                                        }
                                      },
                                      "properties": {
                                        "platform-name": {
                                          "description": "Platform name, Ex: MX960",
                                          "format": "string",
                                          "maxLength": 64,
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "releases": {
                                          "description": "Release information for the products",
                                          "items": {
                                            "additionalProperties": false,
                                            "patternProperties": {
                                              "^@": {
                                                "type": "object"
                                              }
                                            },
                                            "properties": {
                                              "release-name": {
                                                "description": "Release name",
                                                "format": "string",
                                                "maxLength": 64,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "release-support": {
                                                "description": "Specifies the min/max support for this release",
                                                "enum": [
                                                  "max-supported-release",
                                                  "only-on-this-release",
                                                  "min-supported-release"
                                                ],
                                                "type": "string"
                                              },
                                              "sensors": {
                                                "items": {
                                                  "description": "List of sensors to to use",
                                                  "format": "string",
                                                  "maxLength": 64,
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "required": [
                                              "release-name"
                                            ],
                                            "x-ref": [
                                              "sensor-choice-group",
                                              "release-support-grouping"
                                            ]
                                          },
                                          "type": "array",
                                          "x-key": "release-name"
                                        },
                                        "sensors": {
                                          "items": {
                                            "description": "List of sensors to to use",
                                            "format": "string",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "platform-name"
                                      ],
                                      "x-ref": [
                                        "sensor-choice-group"
                                      ]
                                    },
                                    "type": "array",
                                    "x-key": "platform-name"
                                  },
                                  "product-name": {
                                    "description": "Product name, Ex: MX, SRX",
                                    "format": "string",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "sensors": {
                                    "items": {
                                      "description": "List of sensors to to use",
                                      "format": "string",
                                      "maxLength": 64,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "product-name"
                                ],
                                "x-ref": [
                                  "sensor-choice-group"
                                ]
                              },
                              "type": "array",
                              "x-key": "product-name"
                            },
                            "sensors": {
                              "items": {
                                "description": "List of sensors to to use",
                                "format": "string",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "os-name"
                          ],
                          "x-ref": [
                            "sensor-choice-group"
                          ]
                        },
                        "type": "array",
                        "x-key": "os-name"
                      },
                      "sensors": {
                        "items": {
                          "description": "List of sensors to to use",
                          "format": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "vendor-identifier": {
                        "description": "Unique key to identify the other vendor specific products",
                        "format": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                      },
                      "vendor-name": {
                        "description": "Vendor name",
                        "format": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "vendor-name",
                      "vendor-identifier"
                    ],
                    "x-ref": [
                      "sensor-choice-group"
                    ]
                  },
                  "type": "array",
                  "x-key": "vendor-identifier"
                },
                "sensors": {
                  "items": {
                    "description": "List of sensors to to use",
                    "format": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "x-ref": [
                "sensor-choice-group"
              ]
            },
            "supported-healthbot-version": {
              "description": "Healthbot version in which is rule is supported",
              "format": "string",
              "pattern": "^(\\d){1,2}[-.](\\d){1,2}[-.](\\d){1,2}$",
              "type": "string"
            },
            "version": {
              "description": "Rule version, an integer value needs to be incremented for any major change",
              "format": "int32",
              "type": "integer"
            },
            "apply-macro": {
              "items": {
                "$ref": "#/definitions/apply-macro_schema"
              },
              "type": "array",
              "x-key": "name"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "rule-name"
      ],
      "type": "object",
      "x-ref": [
        "functions-group",
        "sensors-group",
        "fields-group",
        "trigger-group",
        "variables-group",
        "vector-group"
      ],
      "example": {
        "description": "This rule collects bgp session route flap damping statistics periodically and notifies in case of anomalies",
        "field": [
          {
            "description": "This field is for neighbor address",
            "field-name": "neighbor-address",
            "sensor": [
              {
                "path": "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/@neighbor-address",
                "sensor-name": "bgp-sensor",
                "where": [
                  {
                    "query": "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/@neighbor-address =~ /{{neighbors}}/"
                  }
                ]
              }
            ],
            "type": "string"
          }
        ],
        "keys": [
          "neighbor-address"
        ],
        "rule-name": "check-bgp-route-flap-damping",
        "sensor": [
          {
            "description": "/protocol/bgp open-config sensor to collect telemetry data from network device",
            "open-config": {
              "frequency": "10s",
              "sensor-name": "/network-instances/network-instance/protocols/protocol/bgp/"
            },
            "sensor-name": "bgp-sensor",
            "synopsis": "bgp open-config sensor definition"
          }
        ],
        "synopsis": "bgp session state analyzer",
        "trigger": [
          {
            "description": "Sets health based on bgp neighbor route flap damping.",
            "synopsis": "bgp neighbor route flap damping kpi",
            "term": [
              {
                "term-name": "is-neighbor-route-flap-damping",
                "then": {
                  "status": {
                    "color": "red",
                    "message": "Observed route-flap-damping"
                  }
                },
                "when": {
                  "does-not-match-with": [
                    {
                      "left-operand": "$route-flap-damping",
                      "right-operand": "false"
                    }
                  ]
                }
              }
            ],
            "trigger-name": "neigbor-route-flap-damping"
          }
        ],
        "variable": [
          {
            "description": "Enter neighbor name or address using regular expression",
            "name": "neighbors",
            "type": "string",
            "value": ".*"
          }
        ]
      }
    },
    "serviceStatus": {
      "additionalProperties": {
        "description": "Property value is status of service",
        "type": "string"
      },
      "description": "Property key is service-name",
      "type": "object",
      "example": {
        "service1": "status1",
        "service2": "status2"
      }
    },
    "ingest-settings_schema": {
      "additionalProperties": false,
      "description": "Ingest related configuration",
      "patternProperties": {
        "^@": {
          "type": "object"
        },
        "(\\bingest\\b)|(\\bingest-settings\\b)": {
          "additionalProperties": false,
          "description": "Ingest settings configuration",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "sflow": {
              "additionalProperties": false,
              "description": "sFlow ingest configuration",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "counter-record": {
                  "description": "Counter record formats",
                  "items": {
                    "additionalProperties": false,
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "enterprise": {
                        "description": "Enterprise to which record belongs",
                        "format": "int32",
                        "type": "integer"
                      },
                      "field": {
                        "description": "List of fields",
                        "items": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "description": {
                              "description": "Description of field",
                              "format": "string",
                              "type": "string"
                            },
                            "export-as": {
                              "description": "Export field as tag/field",
                              "enum": [
                                "tag",
                                "field"
                              ],
                              "type": "string"
                            },
                            "field-name": {
                              "description": "Field name that needs to be exported",
                              "format": "string",
                              "type": "string"
                            },
                            "next-header": {
                              "description": "Flag to indicate current field points to next header format",
                              "items": {
                                "type": "null"
                              },
                              "type": "array"
                            },
                            "size-based-on-field": {
                              "additionalProperties": false,
                              "description": "Current field size derived using previous field values",
                              "patternProperties": {
                                "^@": {
                                  "type": "object"
                                }
                              },
                              "properties": {
                                "then": {
                                  "additionalProperties": false,
                                  "description": "Field size to be considered when none of comparison passes",
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "size": {
                                      "description": "Default field size",
                                      "format": "string",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "when-equal": {
                                  "description": "List of lhs, rhs, and field size for each comparison",
                                  "items": {
                                    "additionalProperties": false,
                                    "patternProperties": {
                                      "^@": {
                                        "type": "object"
                                      }
                                    },
                                    "properties": {
                                      "left-operand": {
                                        "description": "Left operand can be integer constant or '$' prefixed previous field name",
                                        "format": "string",
                                        "type": "string"
                                      },
                                      "right-operand": {
                                        "description": "Right operand can be integer constant or '$' prefixed previous field name",
                                        "format": "string",
                                        "type": "string"
                                      },
                                      "then": {
                                        "additionalProperties": false,
                                        "description": "Field size to be considered if when-equal is true",
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "size": {
                                            "description": "Field size",
                                            "format": "string",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "then",
                                      "right-operand",
                                      "left-operand"
                                    ]
                                  },
                                  "type": "array",
                                  "x-key": "left-operand right-operand"
                                }
                              },
                              "type": "object"
                            },
                            "size-in-bits": {
                              "description": "Field size in bits",
                              "format": "int32",
                              "type": "integer"
                            },
                            "type": {
                              "description": "Data type of field",
                              "enum": [
                                "number",
                                "string",
                                "IpAddress",
                                "hardwareAddr",
                                "numbers",
                                "ASPath"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "field-name"
                          ],
                          "x-ref": [
                            "sflow-field-size-group"
                          ]
                        },
                        "minItems": 1,
                        "type": "array",
                        "x-key": "field-name"
                      },
                      "format": {
                        "description": "Format of record",
                        "format": "int32",
                        "type": "integer"
                      },
                      "record-name": {
                        "description": "Name of record",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "format",
                      "record-name",
                      "enterprise",
                      "field"
                    ],
                    "x-ref": [
                      "sflow-record-group",
                      "sflow-fields-group"
                    ]
                  },
                  "type": "array",
                  "x-key": "record-name"
                },
                "flow-record": {
                  "description": "Flow record formats",
                  "items": {
                    "additionalProperties": false,
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "enterprise": {
                        "description": "Enterprise to which record belongs",
                        "format": "int32",
                        "type": "integer"
                      },
                      "field": {
                        "description": "List of fields",
                        "items": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "description": {
                              "description": "Description of field",
                              "format": "string",
                              "type": "string"
                            },
                            "export-as": {
                              "description": "Export field as tag/field",
                              "enum": [
                                "tag",
                                "field"
                              ],
                              "type": "string"
                            },
                            "field-name": {
                              "description": "Field name that needs to be exported",
                              "format": "string",
                              "type": "string"
                            },
                            "next-header": {
                              "description": "Flag to indicate current field points to next header format",
                              "items": {
                                "type": "null"
                              },
                              "type": "array"
                            },
                            "size-based-on-field": {
                              "additionalProperties": false,
                              "description": "Current field size derived using previous field values",
                              "patternProperties": {
                                "^@": {
                                  "type": "object"
                                }
                              },
                              "properties": {
                                "then": {
                                  "additionalProperties": false,
                                  "description": "Field size to be considered when none of comparison passes",
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "size": {
                                      "description": "Default field size",
                                      "format": "string",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "when-equal": {
                                  "description": "List of lhs, rhs, and field size for each comparison",
                                  "items": {
                                    "additionalProperties": false,
                                    "patternProperties": {
                                      "^@": {
                                        "type": "object"
                                      }
                                    },
                                    "properties": {
                                      "left-operand": {
                                        "description": "Left operand can be integer constant or '$' prefixed previous field name",
                                        "format": "string",
                                        "type": "string"
                                      },
                                      "right-operand": {
                                        "description": "Right operand can be integer constant or '$' prefixed previous field name",
                                        "format": "string",
                                        "type": "string"
                                      },
                                      "then": {
                                        "additionalProperties": false,
                                        "description": "Field size to be considered if when-equal is true",
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "size": {
                                            "description": "Field size",
                                            "format": "string",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "then",
                                      "right-operand",
                                      "left-operand"
                                    ]
                                  },
                                  "type": "array",
                                  "x-key": "left-operand right-operand"
                                }
                              },
                              "type": "object"
                            },
                            "size-in-bits": {
                              "description": "Field size in bits",
                              "format": "int32",
                              "type": "integer"
                            },
                            "type": {
                              "description": "Data type of field",
                              "enum": [
                                "number",
                                "string",
                                "IpAddress",
                                "hardwareAddr",
                                "numbers",
                                "ASPath"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "field-name"
                          ],
                          "x-ref": [
                            "sflow-field-size-group"
                          ]
                        },
                        "minItems": 1,
                        "type": "array",
                        "x-key": "field-name"
                      },
                      "format": {
                        "description": "Format of record",
                        "format": "int32",
                        "type": "integer"
                      },
                      "record-name": {
                        "description": "Name of record",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "format",
                      "record-name",
                      "enterprise",
                      "field"
                    ],
                    "x-ref": [
                      "sflow-record-group",
                      "sflow-fields-group"
                    ]
                  },
                  "type": "array",
                  "x-key": "record-name"
                },
                "protocol": {
                  "description": "Decoding schema for protocols found in sflow",
                  "items": {
                    "additionalProperties": false,
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "field": {
                        "description": "List of fields",
                        "items": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "description": {
                              "description": "Description of field",
                              "format": "string",
                              "type": "string"
                            },
                            "export-as": {
                              "description": "Export field as tag/field",
                              "enum": [
                                "tag",
                                "field"
                              ],
                              "type": "string"
                            },
                            "field-name": {
                              "description": "Field name that needs to be exported",
                              "format": "string",
                              "type": "string"
                            },
                            "next-header": {
                              "description": "Flag to indicate current field points to next header format",
                              "items": {
                                "type": "null"
                              },
                              "type": "array"
                            },
                            "size-based-on-field": {
                              "additionalProperties": false,
                              "description": "Current field size derived using previous field values",
                              "patternProperties": {
                                "^@": {
                                  "type": "object"
                                }
                              },
                              "properties": {
                                "then": {
                                  "additionalProperties": false,
                                  "description": "Field size to be considered when none of comparison passes",
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "size": {
                                      "description": "Default field size",
                                      "format": "string",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "when-equal": {
                                  "description": "List of lhs, rhs, and field size for each comparison",
                                  "items": {
                                    "additionalProperties": false,
                                    "patternProperties": {
                                      "^@": {
                                        "type": "object"
                                      }
                                    },
                                    "properties": {
                                      "left-operand": {
                                        "description": "Left operand can be integer constant or '$' prefixed previous field name",
                                        "format": "string",
                                        "type": "string"
                                      },
                                      "right-operand": {
                                        "description": "Right operand can be integer constant or '$' prefixed previous field name",
                                        "format": "string",
                                        "type": "string"
                                      },
                                      "then": {
                                        "additionalProperties": false,
                                        "description": "Field size to be considered if when-equal is true",
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "size": {
                                            "description": "Field size",
                                            "format": "string",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "then",
                                      "right-operand",
                                      "left-operand"
                                    ]
                                  },
                                  "type": "array",
                                  "x-key": "left-operand right-operand"
                                }
                              },
                              "type": "object"
                            },
                            "size-in-bits": {
                              "description": "Field size in bits",
                              "format": "int32",
                              "type": "integer"
                            },
                            "type": {
                              "description": "Data type of field",
                              "enum": [
                                "number",
                                "string",
                                "IpAddress",
                                "hardwareAddr",
                                "numbers",
                                "ASPath"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "field-name"
                          ],
                          "x-ref": [
                            "sflow-field-size-group"
                          ]
                        },
                        "minItems": 1,
                        "type": "array",
                        "x-key": "field-name"
                      },
                      "number": {
                        "description": "Protocol number unique to each protocol",
                        "format": "int32",
                        "type": "integer"
                      },
                      "protocol-name": {
                        "description": "Name of protocol",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "number",
                      "protocol-name",
                      "field"
                    ],
                    "x-ref": [
                      "sflow-fields-group"
                    ]
                  },
                  "type": "array",
                  "x-key": "protocol-name"
                },
                "sample": {
                  "description": "Sample types and their header fields",
                  "items": {
                    "additionalProperties": false,
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "enterprise": {
                        "description": "Enterprise to which sample belongs",
                        "format": "int32",
                        "type": "integer"
                      },
                      "field": {
                        "description": "List of fields",
                        "items": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "description": {
                              "description": "Description of field",
                              "format": "string",
                              "type": "string"
                            },
                            "export-as": {
                              "description": "Export field as tag/field",
                              "enum": [
                                "tag",
                                "field"
                              ],
                              "type": "string"
                            },
                            "field-name": {
                              "description": "Field name that needs to be exported",
                              "format": "string",
                              "type": "string"
                            },
                            "next-header": {
                              "description": "Flag to indicate current field points to next header format",
                              "items": {
                                "type": "null"
                              },
                              "type": "array"
                            },
                            "size-based-on-field": {
                              "additionalProperties": false,
                              "description": "Current field size derived using previous field values",
                              "patternProperties": {
                                "^@": {
                                  "type": "object"
                                }
                              },
                              "properties": {
                                "then": {
                                  "additionalProperties": false,
                                  "description": "Field size to be considered when none of comparison passes",
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "size": {
                                      "description": "Default field size",
                                      "format": "string",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "when-equal": {
                                  "description": "List of lhs, rhs, and field size for each comparison",
                                  "items": {
                                    "additionalProperties": false,
                                    "patternProperties": {
                                      "^@": {
                                        "type": "object"
                                      }
                                    },
                                    "properties": {
                                      "left-operand": {
                                        "description": "Left operand can be integer constant or '$' prefixed previous field name",
                                        "format": "string",
                                        "type": "string"
                                      },
                                      "right-operand": {
                                        "description": "Right operand can be integer constant or '$' prefixed previous field name",
                                        "format": "string",
                                        "type": "string"
                                      },
                                      "then": {
                                        "additionalProperties": false,
                                        "description": "Field size to be considered if when-equal is true",
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "size": {
                                            "description": "Field size",
                                            "format": "string",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "then",
                                      "right-operand",
                                      "left-operand"
                                    ]
                                  },
                                  "type": "array",
                                  "x-key": "left-operand right-operand"
                                }
                              },
                              "type": "object"
                            },
                            "size-in-bits": {
                              "description": "Field size in bits",
                              "format": "int32",
                              "type": "integer"
                            },
                            "type": {
                              "description": "Data type of field",
                              "enum": [
                                "number",
                                "string",
                                "IpAddress",
                                "hardwareAddr",
                                "numbers",
                                "ASPath"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "field-name"
                          ],
                          "x-ref": [
                            "sflow-field-size-group"
                          ]
                        },
                        "minItems": 1,
                        "type": "array",
                        "x-key": "field-name"
                      },
                      "format": {
                        "description": "Format of sample",
                        "format": "int32",
                        "type": "integer"
                      },
                      "record-type": {
                        "description": "Type of records in this sample type",
                        "enum": [
                          "flow",
                          "counter"
                        ],
                        "type": "string"
                      },
                      "sample-name": {
                        "description": "Name of sample type",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "format",
                      "sample-name",
                      "field",
                      "enterprise"
                    ],
                    "x-ref": [
                      "sflow-fields-group"
                    ]
                  },
                  "type": "array",
                  "x-key": "sample-name"
                }
              },
              "type": "object",
              "x-ref": [
                "sflow-ingest-group"
              ]
            },
            "flow": {
              "additionalProperties": false,
              "description": "Flow ingest configuration",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "template": {
                  "items": {
                    "additionalProperties": false,
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "description": {
                        "format": "string",
                        "type": "string"
                      },
                      "key-fields": {
                        "items": {
                          "format": "string",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "name": {
                        "format": "string",
                        "type": "string"
                      },
                      "priority": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "protocol-version": {
                        "enum": [
                          "v9",
                          "v10"
                        ],
                        "type": "string"
                      },
                      "recognition-pattern": {
                        "additionalProperties": false,
                        "patternProperties": {
                          "^@": {
                            "type": "object"
                          }
                        },
                        "properties": {
                          "exclude-fields": {
                            "items": {
                              "format": "string",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "include-fields": {
                            "items": {
                              "format": "string",
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "type": "array",
                  "x-key": "name"
                }
              },
              "type": "object",
              "x-ref": [
                "flow-templates-group"
              ]
            },
            "native-gpb": {
              "additionalProperties": false,
              "description": "Native-gpb ingest configuration",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "port": {
                  "description": "Port to listen for native-gpb messages",
                  "format": "int32",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 65535
                }
              },
              "type": "object"
            },
            "outbound-ssh": {
              "additionalProperties": false,
              "description": "Outbound SSH ingest configuration",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "port": {
                  "description": "Port to listen for Outbound SSH connection",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "snmp-notification": {
              "additionalProperties": false,
              "description": "SNMP Notification messages(Traps/Informs) ingest configuration",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "engine-id": {
                  "description": "Autogenerated Engine-id for Healthbot in Hex Format Eg: '80001f8880bd5b8d052eb40d6000000000'",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 5,
                  "type": "string",
                  "readOnly": true
                },
                "port": {
                  "description": "Port to listen for SNMP Notification(Traps/Informs) messages",
                  "format": "int32",
                  "type": "integer"
                },
                "v3": {
                  "additionalProperties": false,
                  "description": "SNMP version 3 configuration for HealthBot",
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "usm": {
                      "additionalProperties": false,
                      "description": "SNMP User Security Model configuration",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "users": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "authentication": {
                                "additionalProperties": false,
                                "description": "Configure authentication for the SNMPv3 user",
                                "patternProperties": {
                                  "^@": {
                                    "type": "object"
                                  }
                                },
                                "properties": {
                                  "passphrase": {
                                    "description": "Passphrase for SNMPv3 authentication",
                                    "format": "string",
                                    "maxLength": 1024,
                                    "minLength": 8,
                                    "type": "string"
                                  },
                                  "protocol": {
                                    "description": "SNMPv3 authentication protocol",
                                    "enum": [
                                      "MD5",
                                      "SHA",
                                      "SHA224",
                                      "SHA256",
                                      "SHA384",
                                      "SHA512"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "protocol",
                                  "passphrase"
                                ],
                                "type": "object"
                              },
                              "authentication-none": {
                                "description": "Configure no authentication for the SNMPv3 user",
                                "items": {
                                  "type": "null"
                                },
                                "type": "array"
                              },
                              "privacy": {
                                "additionalProperties": false,
                                "description": "Configure privacy for the SNMPv3 user",
                                "patternProperties": {
                                  "^@": {
                                    "type": "object"
                                  }
                                },
                                "properties": {
                                  "passphrase": {
                                    "description": "Passphrase for SNMPv3 privacy",
                                    "format": "string",
                                    "maxLength": 1024,
                                    "minLength": 8,
                                    "type": "string"
                                  },
                                  "protocol": {
                                    "description": "SNMPv3 privacy protocol",
                                    "enum": [
                                      "DES",
                                      "AES",
                                      "AES192",
                                      "AES256",
                                      "AES192C",
                                      "AES256C",
                                      "3DES"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "protocol",
                                  "passphrase"
                                ],
                                "type": "object"
                              },
                              "privacy-none": {
                                "description": "Configure no privacy for the SNMPv3 user",
                                "items": {
                                  "type": "null"
                                },
                                "type": "array"
                              },
                              "username": {
                                "description": "SNMPv3 username",
                                "format": "string",
                                "maxLength": 255,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "username"
                            ],
                            "x-ref": [
                              "snmpv3-usm-config"
                            ]
                          },
                          "type": "array",
                          "x-key": "username"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "syslog": {
              "additionalProperties": false,
              "description": "Syslog ingest configuration",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "header-pattern": {
                  "description": "Pattern details for parsing syslog header",
                  "items": {
                    "additionalProperties": false,
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "description": {
                        "description": "Pattern description",
                        "format": "string",
                        "type": "string"
                      },
                      "field": {
                        "description": "Field details",
                        "items": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "description": {
                              "description": "Field description",
                              "format": "string",
                              "type": "string"
                            },
                            "from": {
                              "description": "Field that supplies the value. For a structured syslog, this will be the attribute name from the message. For a grok pattern, this will be name of the field given in the pattern. For a regex pattern, this will be the capture group number prefixed by $, eg: $1, $2",
                              "format": "string",
                              "type": "string"
                            },
                            "name": {
                              "description": "Field name",
                              "format": "string",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "integer",
                                "unsigned-integer",
                                "float",
                                "string"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "from"
                          ]
                        },
                        "type": "array",
                        "x-key": "name"
                      },
                      "filter": {
                        "description": "Regex filter to parse syslog header",
                        "format": "string",
                        "type": "string"
                      },
                      "filter-type": {
                        "description": "Filter type, default is regex",
                        "enum": [
                          "regex"
                        ],
                        "type": "string"
                      },
                      "key-fields": {
                        "items": {
                          "description": "Key fields, can be a combination of fields and constants",
                          "format": "string",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "name": {
                        "description": "Name of a pattern. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                        "format": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "filter"
                    ],
                    "x-ref": [
                      "syslog-fields-group",
                      "syslog-key-fields-group"
                    ]
                  },
                  "type": "array",
                  "x-key": "name"
                },
                "pattern": {
                  "description": "Pattern details",
                  "items": {
                    "additionalProperties": false,
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "constant": {
                        "description": "Constant details",
                        "items": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "description": {
                              "description": "Constant description",
                              "format": "string",
                              "type": "string"
                            },
                            "name": {
                              "description": "Constant field name",
                              "format": "string",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "integer",
                                "unsigned-integer",
                                "float",
                                "string"
                              ],
                              "type": "string"
                            },
                            "value": {
                              "description": "Value of the constant",
                              "format": "string",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "value"
                          ]
                        },
                        "type": "array",
                        "x-key": "name"
                      },
                      "description": {
                        "description": "Pattern description",
                        "format": "string",
                        "type": "string"
                      },
                      "event-id": {
                        "description": "Event id that identifies a log uniquely. Field names also can be part of event-id. Example my-event+$field1",
                        "format": "string",
                        "type": "string"
                      },
                      "field": {
                        "description": "Field details",
                        "items": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "description": {
                              "description": "Field description",
                              "format": "string",
                              "type": "string"
                            },
                            "from": {
                              "description": "Field that supplies the value. For a structured syslog, this will be the attribute name from the message. For a grok pattern, this will be name of the field given in the pattern. For a regex pattern, this will be the capture group number prefixed by $, eg: $1, $2",
                              "format": "string",
                              "type": "string"
                            },
                            "name": {
                              "description": "Field name",
                              "format": "string",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "integer",
                                "unsigned-integer",
                                "float",
                                "string"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ]
                        },
                        "type": "array",
                        "x-key": "name"
                      },
                      "filter": {
                        "description": "Filter to match a log line",
                        "format": "string",
                        "type": "string"
                      },
                      "filter-type": {
                        "description": "Filter type, default is grok",
                        "enum": [
                          "grok"
                        ],
                        "type": "string"
                      },
                      "key-fields": {
                        "items": {
                          "description": "Key fields, can be a combination of fields and constants",
                          "format": "string",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "name": {
                        "description": "Name of a pattern. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                        "format": "string",
                        "maxLength": 64,
                        "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "event-id"
                    ],
                    "x-ref": [
                      "syslog-fields-group",
                      "syslog-constants-group",
                      "syslog-key-fields-group"
                    ]
                  },
                  "type": "array",
                  "x-key": "name"
                },
                "pattern-set": {
                  "description": "Pattern-set details",
                  "items": {
                    "additionalProperties": false,
                    "patternProperties": {
                      "^@": {
                        "type": "object"
                      }
                    },
                    "properties": {
                      "description": {
                        "description": "Pattern-set description",
                        "format": "string",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of a pattern-set. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                        "format": "string",
                        "maxLength": 64,
                        "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                        "type": "string"
                      },
                      "pattern-names": {
                        "items": {
                          "description": "Patterns associated with the pattern-set",
                          "maxLength": 64,
                          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                          "type": "string",
                          "x-path": "../../pattern/name"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "type": "array",
                  "x-key": "name"
                },
                "port": {
                  "description": "Port to listen for syslog messages, default is 514",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object",
              "x-ref": [
                "syslog-header-patterns-group",
                "syslog-patterns-group",
                "syslog-pattern-sets-group"
              ]
            },
            "byoi": {
              "additionalProperties": false,
              "description": "Bring your own ingest",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "custom-plugin": {
                  "items": {
                    "$ref": "#/definitions/custom-plugin_schema"
                  },
                  "type": "array"
                },
                "default-plugin": {
                  "additionalProperties": false,
                  "description": "Configure default input plugin",
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "tlive-kafka-oc": {
                      "description": "TLive Kafka ingest",
                      "items": {
                        "$ref": "#/definitions/tlive-kafka-oc_schema"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "ingest-mapping": {
                  "description": "Ingest to sensor/device mapping",
                  "items": {
                    "$ref": "#/definitions/ingest-mapping_schema"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "frequency-profile": {
              "items": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "name": {
                    "description": "Frequency profile name",
                    "format": "string",
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                    "type": "string"
                  },
                  "non-sensor": {
                    "items": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "frequency": {
                          "description": "Sensor subscription duration. Specify integer >= 0 followed by s/m/h/d/w/y representing seconds/minutes/hours/days/weeks/years. Eg: 2s. A frequency of zero should be used only in case of events subscription",
                          "pattern": "^[0-9]+(seconds|minutes|hours|days|weeks|years)$",
                          "format": "string",
                          "type": "string"
                        },
                        "rule-name": {
                          "description": "Name of non-sensor or network rule i.e topic-name/rule-name",
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "required": [
                        "frequency",
                        "rule-name"
                      ]
                    },
                    "type": "array",
                    "x-key": "rule-name"
                  },
                  "sensor": {
                    "items": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "frequency": {
                          "description": "Sensor subscription duration. Specify integer >= 0 followed by s/m/h/d/w/y representing seconds/minutes/hours/days/weeks/years. Eg: 2s. A frequency of zero should be used only in case of events subscription",
                          "pattern": "^[0-9]+(seconds|minutes|hours|days|weeks|years)$",
                          "format": "string",
                          "type": "string"
                        },
                        "sensor-name": {
                          "description": "Name of sensor. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "required": [
                        "frequency",
                        "sensor-name"
                      ]
                    },
                    "type": "array",
                    "x-key": "sensor-name"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "type": "array",
              "x-key": "name"
            },
            "data-enrichment": {
              "additionalProperties": false,
              "description": "Data enrichment details",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "tagging-profile": {
                  "description": "Tagging-profile details",
                  "items": {
                    "$ref": "#/definitions/tagging-profile_schema"
                  },
                  "type": "array",
                  "x-key": "name"
                }
              },
              "required": [
                "tagging-profile"
              ],
              "type": "object"
            }
          },
          "type": "object",
          "x-ref": [
            "frequency-profile-group",
            "data-enrichment-group"
          ]
        }
      },
      "type": "object",
      "x-ref": [
        "frequency-profile-group",
        "data-enrichment-group"
      ]
    },
    "system-settings_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        },
        "(\\bsystem\\b)|(\\bsystem-settings\\b)": {
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "persist-raw-data": {
              "description": "Persist raw data in the database",
              "items": {
                "type": "object",
                "x-nullable": true
              },
              "type": "array"
            },
            "report-generation": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "destination": {
                  "items": {
                    "$ref": "#/definitions/destination_schema"
                  },
                  "type": "array",
                  "x-key": "name"
                },
                "report": {
                  "items": {
                    "$ref": "#/definitions/report_schema"
                  },
                  "type": "array",
                  "x-key": "name"
                }
              }
            },
            "scheduler": {
              "items": {
                "$ref": "#/definitions/scheduler_schema"
              },
              "type": "array",
              "x-key": "name"
            },
            "time-series-database": {
              "$ref": "#/definitions/tsdb_schema"
            },
            "trigger-action": {
              "$ref": "#/definitions/trigger_action_schema"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "table_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "name": {
          "description": "Name of the table",
          "type": "string"
        },
        "type": {
          "enum": [
            "Prediction table",
            "Rule Evaluation table",
            "Field table",
            "Sensor table"
          ],
          "type": "string"
        },
        "db_name": {
          "description": "Database name in which the measurement is present.",
          "type": "string"
        },
        "retention_policy": {
          "description":  "Retention policy of the measurement",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "type": "object"
    },
    "time-range-mandatory": {
      "discriminator": "time-range",
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "time-range": {
          "description": "How much back in time should we look for data",
          "pattern": "^[1-9][0-9]*(\\.[0-9]+)?(o|s|m|h|d|w|y|offset)$",
          "type": "string"
        }
      },
      "required": [
        "time-range"
      ],
      "type": "object"
    },
    "topic_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Description about this topic",
          "format": "string",
          "type": "string"
        },
        "resource": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "depends-on": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "depends-on-multiple-instances": {
                      "description": "Depends on multiple instances of the depends-on resource. One to many relationship. Eg: ae interface can be dependent on multiple interfaces",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "Description about the dependency",
                      "format": "string",
                      "type": "string"
                    },
                    "resource-name": {
                      "description": "Name of dependent resource <topic-name>/<resource-name>. Should be of pattern [a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*",
                      "format": "string",
                      "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*$",
                      "type": "string"
                    },
                    "term": {
                      "items": {
                        "additionalProperties": false,
                        "patternProperties": {
                          "^@": {
                            "type": "object"
                          }
                        },
                        "properties": {
                          "for-every-device": {
                            "additionalProperties": false,
                            "description": "Loop over all devices",
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "across-all-device-groups": {
                                "description": "evaluate for all device groups",
                                "type": "boolean",
                                "x-choice": "device-groups",
                                "x-choice-case": "across-all-device-groups"
                              },
                              "in-groups": {
                                "items": {
                                  "description": "Limit the loop to device groups in this list",
                                  "format": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                                  "type": "string"
                                },
                                "type": "array",
                                "x-choice": "device-groups",
                                "x-choice-case": "in-groups"
                              },
                              "label-as": {
                                "format": "string",
                                "maxLength": 64,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "label-as"
                            ],
                            "type": "object"
                          },
                          "for-every-network-group": {
                            "additionalProperties": false,
                            "description": "Loop over all network groups",
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "across-all-network-groups": {
                                "description": "evaluate for all network groups",
                                "type": "boolean",
                                "x-choice": "network-groups",
                                "x-choice-case": "across-all-network-groups"
                              },
                              "in-groups": {
                                "items": {
                                  "description": "Limit the loop to network groups in this list",
                                  "format": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                                  "type": "string"
                                },
                                "type": "array",
                                "x-choice": "network-groups",
                                "x-choice-case": "in-groups"
                              },
                              "label-as": {
                                "format": "string",
                                "maxLength": 64,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "label-as"
                            ],
                            "type": "object"
                          },
                          "get-dependencies-from-cache": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "path": {
                                "description": "Instance name given while pushing the dependencies to HealthBot",
                                "format": "string",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "locate-resource": {
                            "items": {
                              "additionalProperties": false,
                              "patternProperties": {
                                "^@": {
                                  "type": "object"
                                }
                              },
                              "properties": {
                                "label-as": {
                                  "format": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                                  "type": "string"
                                },
                                "resource": {
                                  "description": "Name of the resource which needs to looped over. Format: <optional-idetifier followed by :><topic-name/rule-name>. Should be of pattern ([a-zA-Z][a-zA-Z0-9-]*:)?[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*.",
                                  "format": "string",
                                  "pattern": "^([a-zA-Z][a-zA-Z0-9-]*:)?[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*$",
                                  "type": "string"
                                },
                                "where": {
                                  "additionalProperties": false,
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "does-not-match-with": {
                                      "items": {
                                        "additionalProperties": false,
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "left-operand": {
                                            "description": "Left operand. This is the string in which we have to match the expression",
                                            "format": "string",
                                            "type": "string"
                                          },
                                          "right-operand": {
                                            "description": "Right operand. This is the match expression",
                                            "format": "string",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "right-operand",
                                          "left-operand"
                                        ]
                                      },
                                      "type": "array",
                                      "x-key": "left-operand right-operand"
                                    },
                                    "equal-to": {
                                      "items": {
                                        "additionalProperties": false,
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "left-operand": {
                                            "description": "Left operand",
                                            "format": "string",
                                            "pattern": "^\\S+$",
                                            "type": "string"
                                          },
                                          "right-operand": {
                                            "description": "right operand",
                                            "format": "string",
                                            "pattern": "^\\S+$",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "right-operand",
                                          "left-operand"
                                        ],
                                        "x-ref": [
                                          "lhs-rhs-group"
                                        ]
                                      },
                                      "type": "array",
                                      "x-key": "left-operand right-operand"
                                    },
                                    "eval": {
                                      "items": {
                                        "additionalProperties": false,
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "expression": {
                                            "description": "Expression for evaluation must be a valid golang expression. Field-name if used in expression must be prefixed with $. operators should be prefix and suffix with spaces. For Example: $a + $b > $c",
                                            "format": "string",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "expression"
                                        ]
                                      },
                                      "type": "array",
                                      "x-key": "expression"
                                    },
                                    "greater-than": {
                                      "items": {
                                        "additionalProperties": false,
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "left-operand": {
                                            "description": "Left operand",
                                            "format": "string",
                                            "pattern": "^\\S+$",
                                            "type": "string"
                                          },
                                          "right-operand": {
                                            "description": "right operand",
                                            "format": "string",
                                            "pattern": "^\\S+$",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "right-operand",
                                          "left-operand"
                                        ],
                                        "x-ref": [
                                          "lhs-rhs-group"
                                        ]
                                      },
                                      "type": "array",
                                      "x-key": "left-operand right-operand"
                                    },
                                    "greater-than-or-equal-to": {
                                      "items": {
                                        "additionalProperties": false,
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "left-operand": {
                                            "description": "Left operand",
                                            "format": "string",
                                            "pattern": "^\\S+$",
                                            "type": "string"
                                          },
                                          "right-operand": {
                                            "description": "right operand",
                                            "format": "string",
                                            "pattern": "^\\S+$",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "right-operand",
                                          "left-operand"
                                        ],
                                        "x-ref": [
                                          "lhs-rhs-group"
                                        ]
                                      },
                                      "type": "array",
                                      "x-key": "left-operand right-operand"
                                    },
                                    "less-than": {
                                      "items": {
                                        "additionalProperties": false,
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "left-operand": {
                                            "description": "Left operand",
                                            "format": "string",
                                            "pattern": "^\\S+$",
                                            "type": "string"
                                          },
                                          "right-operand": {
                                            "description": "right operand",
                                            "format": "string",
                                            "pattern": "^\\S+$",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "right-operand",
                                          "left-operand"
                                        ],
                                        "x-ref": [
                                          "lhs-rhs-group"
                                        ]
                                      },
                                      "type": "array",
                                      "x-key": "left-operand right-operand"
                                    },
                                    "less-than-or-equal-to": {
                                      "items": {
                                        "additionalProperties": false,
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "left-operand": {
                                            "description": "Left operand",
                                            "format": "string",
                                            "pattern": "^\\S+$",
                                            "type": "string"
                                          },
                                          "right-operand": {
                                            "description": "right operand",
                                            "format": "string",
                                            "pattern": "^\\S+$",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "right-operand",
                                          "left-operand"
                                        ],
                                        "x-ref": [
                                          "lhs-rhs-group"
                                        ]
                                      },
                                      "type": "array",
                                      "x-key": "left-operand right-operand"
                                    },
                                    "matches-with": {
                                      "items": {
                                        "additionalProperties": false,
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "ignore-case": {
                                            "description": "Flag to ignore case while matching the string",
                                            "items": {
                                              "type": "null"
                                            },
                                            "type": "array"
                                          },
                                          "left-operand": {
                                            "description": "Left operand. This is the string in which we have to match the expression",
                                            "format": "string",
                                            "type": "string"
                                          },
                                          "right-operand": {
                                            "description": "Right operand. This is the match expression",
                                            "format": "string",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "right-operand",
                                          "left-operand"
                                        ]
                                      },
                                      "type": "array",
                                      "x-key": "left-operand right-operand"
                                    },
                                    "not-equal-to": {
                                      "items": {
                                        "additionalProperties": false,
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "left-operand": {
                                            "description": "Left operand",
                                            "format": "string",
                                            "pattern": "^\\S+$",
                                            "type": "string"
                                          },
                                          "right-operand": {
                                            "description": "right operand",
                                            "format": "string",
                                            "pattern": "^\\S+$",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "right-operand",
                                          "left-operand"
                                        ],
                                        "x-ref": [
                                          "lhs-rhs-group"
                                        ]
                                      },
                                      "type": "array",
                                      "x-key": "left-operand right-operand"
                                    },
                                    "user-defined-function": {
                                      "description": "User defined function to populate field value",
                                      "items": {
                                        "additionalProperties": false,
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "argument": {
                                            "items": {
                                              "additionalProperties": false,
                                              "patternProperties": {
                                                "^@": {
                                                  "type": "object"
                                                }
                                              },
                                              "properties": {
                                                "argument-name": {
                                                  "description": "Name of the argument. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                                                  "format": "string",
                                                  "maxLength": 64,
                                                  "minLength": 1,
                                                  "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "description": "Argument value",
                                                  "format": "string",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "value",
                                                "argument-name"
                                              ]
                                            },
                                            "type": "array",
                                            "x-key": "argument-name value"
                                          },
                                          "function-name": {
                                            "description": "Name of the function that is defined in the resource. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                                            "format": "string",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "function-name"
                                        ]
                                      },
                                      "type": "array",
                                      "x-key": "function-name"
                                    }
                                  },
                                  "type": "object"
                                },
                                "with-capture-group": {
                                  "items": {
                                    "additionalProperties": false,
                                    "patternProperties": {
                                      "^@": {
                                        "type": "object"
                                      }
                                    },
                                    "properties": {
                                      "capture-group-name": {
                                        "description": "Name of the capture group. Should be of pattern [a-zA-Z][a-zA-Z0-9-]*",
                                        "format": "string",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                                        "type": "string"
                                      },
                                      "expression": {
                                        "description": "Regular expression to extract sub strings",
                                        "format": "string",
                                        "type": "string"
                                      },
                                      "field-name": {
                                        "description": "Name of the local or depending resource field name",
                                        "format": "string",
                                        "type": "string"
                                      },
                                      "ignore-case": {
                                        "description": "If true, regex match with be case insensitive",
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "capture-group-name"
                                    ]
                                  },
                                  "type": "array",
                                  "x-key": "capture-group-name"
                                }
                              },
                              "required": [
                                "resource",
                                "label-as"
                              ]
                            },
                            "type": "array",
                            "x-key": "resource"
                          },
                          "next": {
                            "description": "Continue evaluating next term",
                            "type": "boolean"
                          },
                          "term-name": {
                            "description": "Term name. Should be of pattern [a-zA-Z][a-zA-Z0-9-]*",
                            "format": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                            "type": "string"
                          },
                          "user-defined-function": {
                            "additionalProperties": false,
                            "description": "User defined function to populate field value",
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "argument": {
                                "items": {
                                  "additionalProperties": false,
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "argument-name": {
                                      "description": "Name of the argument. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                                      "format": "string",
                                      "maxLength": 64,
                                      "minLength": 1,
                                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Argument value",
                                      "format": "string",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "value",
                                    "argument-name"
                                  ]
                                },
                                "type": "array",
                                "x-key": "argument-name value"
                              },
                              "function-name": {
                                "description": "Name of the function that is defined in the resource. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                                "format": "string",
                                "maxLength": 64,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "function-name"
                            ],
                            "type": "object"
                          },
                          "with-capture-group": {
                            "items": {
                              "additionalProperties": false,
                              "patternProperties": {
                                "^@": {
                                  "type": "object"
                                }
                              },
                              "properties": {
                                "capture-group-name": {
                                  "description": "Name of the capture group. Should be of pattern [a-zA-Z][a-zA-Z0-9-]*",
                                  "format": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Regular expression to extract sub strings",
                                  "format": "string",
                                  "type": "string"
                                },
                                "field-name": {
                                  "description": "Name of the local or depending resource field name",
                                  "format": "string",
                                  "type": "string"
                                },
                                "ignore-case": {
                                  "description": "If true, regex match with be case insensitive",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "capture-group-name"
                              ]
                            },
                            "type": "array",
                            "x-key": "capture-group-name"
                          }
                        },
                        "required": [
                          "term-name"
                        ]
                      },
                      "minItems": 1,
                      "type": "array",
                      "x-key": "term-name"
                    },
                    "triggered-by": {
                      "items": {
                        "description": "Triggers based on which the dependency should be triggered",
                        "format": "string",
                        "maxLength": 129,
                        "minLength": 1,
                        "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9_-]*$",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "with-capture-group": {
                      "items": {
                        "additionalProperties": false,
                        "patternProperties": {
                          "^@": {
                            "type": "object"
                          }
                        },
                        "properties": {
                          "capture-group-name": {
                            "description": "Name of the capture group. Should be of pattern [a-zA-Z][a-zA-Z0-9-]*",
                            "format": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                            "type": "string"
                          },
                          "expression": {
                            "description": "Regular expression to extract sub strings",
                            "format": "string",
                            "type": "string"
                          },
                          "field-name": {
                            "description": "Name of the local or depending resource field name",
                            "format": "string",
                            "type": "string"
                          },
                          "ignore-case": {
                            "description": "If true, regex match with be case insensitive",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "capture-group-name"
                        ]
                      },
                      "type": "array",
                      "x-key": "capture-group-name"
                    }
                  },
                  "required": [
                    "resource-name",
                    "term"
                  ]
                },
                "type": "array",
                "x-key": "resource-name"
              },
              "description": {
                "description": "Description about the resource",
                "format": "string",
                "type": "string"
              },
              "field": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "description": {
                      "description": "Description about resource field",
                      "format": "string",
                      "type": "string"
                    },
                    "field-name": {
                      "description": "Name of the resource field. Should be of pattern [a-z][a-zA-Z0-9-]*",
                      "format": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "pattern": "^[a-z][a-zA-Z0-9-]*$",
                      "type": "string"
                    },
                    "source": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "rule": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "field-name": {
                                "description": "Rule field name from where resource field should be populated. Should be of pattern [a-z][a-zA-Z0-9_-]*",
                                "format": "string",
                                "maxLength": 64,
                                "minLength": 1,
                                "pattern": "^[a-z][a-zA-Z0-9_-]*$",
                                "type": "string"
                              },
                              "rule-name": {
                                "description": "Rule name from where the resource needs to be discovered. Format: <topic-name>/<rule-name>. Should be of pattern [a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9_-]*",
                                "format": "string",
                                "maxLength": 129,
                                "minLength": 1,
                                "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9_-]*$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "rule-name",
                              "field-name"
                            ]
                          },
                          "type": "array",
                          "x-key": "rule-name"
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "description": "Resource field type",
                      "enum": [
                        "string",
                        "integer",
                        "unsigned-integer",
                        "float"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "field-name"
                  ]
                },
                "type": "array",
                "x-key": "field-name"
              },
              "function": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "argument": {
                      "items": {
                        "additionalProperties": false,
                        "patternProperties": {
                          "^@": {
                            "type": "object"
                          }
                        },
                        "properties": {
                          "argument-name": {
                            "description": "Name of the argument. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                            "format": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                            "type": "string"
                          },
                          "mandatory": {
                            "description": "Flag to indicate a mandatory attribute",
                            "items": {
                              "type": "null"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "argument-name"
                        ]
                      },
                      "type": "array",
                      "x-key": "argument-name"
                    },
                    "description": {
                      "description": "Description of the function",
                      "format": "string",
                      "type": "string"
                    },
                    "function-name": {
                      "description": "Name of the function. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                      "format": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                      "type": "string"
                    },
                    "method": {
                      "description": "Function to be called",
                      "format": "string",
                      "type": "string"
                    },
                    "path": {
                      "description": "File in which function is defined. This is relative path to the data directory",
                      "format": "string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "function-name",
                    "path",
                    "method"
                  ]
                },
                "type": "array",
                "x-key": "function-name"
              },
              "keys": {
                "items": {
                  "description": "List of values which form the unique identifier of the resource. Should be of pattern [a-z][a-z0-9-]*",
                  "format": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "^[a-z][a-z0-9-]*$",
                  "type": "string"
                },
                "type": "array"
              },
              "resource-name": {
                "description": "Name of the resource. Should be of pattern [a-z][a-z0-9-]*",
                "format": "string",
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[a-z][a-z0-9-]*$",
                "type": "string"
              },
              "variable": {
                "description": "Resource variable configuration",
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "description": {
                      "description": "Description about the variable",
                      "format": "string",
                      "type": "string"
                    },
                    "name": {
                      "description": "Variable name used in the playbook. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                      "format": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of value supported. This information will be used by UI to display options available for the values",
                      "enum": [
                        "device-group",
                        "device",
                        "sensor-argument",
                        "group-type"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "description": "Default value for the variable",
                      "format": "string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "name"
                  ]
                },
                "type": "array",
                "x-key": "name"
              }
            },
            "required": [
              "resource-name"
            ],
            "x-ref": [
              "resource-fields-group",
              "functions-group",
              "dependency-group",
              "resource-variables-group"
            ]
          },
          "type": "array",
          "x-key": "resource-name"
        },
        "rule": {
          "items": {
            "$ref": "#/definitions/rule_schema"
          },
          "type": "array",
          "x-key": "rule-name"
        },
        "sub-topics": {
          "items": {
            "description": "Sub topics",
            "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*$",
            "type": "string",
            "x-path": "../topic-name"
          },
          "type": "array"
        },
        "synopsis": {
          "description": "Short description about this topic",
          "format": "string",
          "type": "string"
        },
        "topic-name": {
          "description": "Name of the topic. Should be of pattern [a-z][a-z-]*(\\.{1}[a-z0-9-]+)*",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*$",
          "type": "string"
        }
      },
      "required": [
        "topic-name"
      ],
      "type": "object",
      "x-ref": [
        "rules-group"
      ]
    },
    "topics_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "topic": {
          "items": {
            "$ref": "#/definitions/topic_schema"
          },
          "type": "array",
          "x-key": "topic-name"
        }
      },
      "required": [
        "topic"
      ],
      "type": "object"
    },
    "when-lhs-rhs-group": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "left-operand": {
          "description": "Left operand",
          "type": "string"
        },
        "right-operand": {
          "description": "right operand",
          "type": "string"
        },
        "time-range": {
          "description": "How much back in time should we look for data",
          "type": "string"
        }
      },
      "type": "object"
    },
    "lhs-rhs-group": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "left-operand": {
          "description": "Left operand",
          "type": "string"
        },
        "right-operand": {
          "description": "right operand",
          "type": "string"
        }
      },
      "type": "object"
    },
    "apply-macro_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "data": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "name": {
                "description": "Keyword part of the keyword-value pair",
                "format": "string",
                "type": "string"
              },
              "value": {
                "description": "Value part of the keyword-value pair",
                "format": "string",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "x-ref": [
              "macro-data-type"
            ]
          },
          "type": "array",
          "x-key": "name"
        },
        "name": {
          "description": "Name of the macro to be expanded",
          "format": "string",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object",
      "x-ref": [
        "apply-macro-type"
      ]
    },
    "datastore_schema": {
      "additionalProperties": false,
      "properties": {
        "group-name": {
          "description": "group name",
          "type": "string"
        },
        "key": {
          "description": "key name for the group",
          "type": "string"
        },
        "value": {
          "description": "value for the key",
          "type": "object"
        }
      },
      "type": "object"
    },
    "scheduler_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "end-time": {
          "description": "End scheduler at this time",
          "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[01])T([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]Z$",
          "format": "string",
          "type": "string"
        },
        "name": {
          "description": "Name of the scheduler",
          "format": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "repeat": {
          "additionalProperties": false,
          "description": "Control when to repeat scheduling",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "every": {
              "description": "Repeat every",
              "enum": [
                "week",
                "day",
                "month",
                "year"
              ],
              "type": "string"
            },
            "interval": {
              "additionalProperties": false,
              "description": "Regular interval repetition",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "days": {
                  "description": "Duration of time in days",
                  "format": "int32",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 65535
                },
                "hours": {
                  "description": "Duration of time in hours",
                  "format": "int32",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 65535
                },
                "minutes": {
                  "description": "Duration of time in minutes",
                  "format": "int32",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 65535
                }
              },
              "type": "object"
            },
            "never": {
              "description": "Never repeat scheduling",
              "items": {
                "type": "object",
                "x-nullable": true
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "start-time": {
          "description": "Start scheduler at this time",
          "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[01])T([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]Z$",
          "format": "string",
          "type": "string"
        },
        "run-for": {
          "additionalProperties": false,
          "description": "Duration of time for the schedule to run after the start time",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "days": {
              "description": "Duration of time in days",
              "format": "int32",
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            },
            "hours": {
              "description": "Duration of time in hours",
              "format": "int32",
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            },
            "minutes": {
              "description": "Duration of time in minutes",
              "format": "int32",
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            }
          },
          "type": "object"
        },
        "type": {
          "description": "Type of the scheduler.",
          "enum": [
            "continuous",
            "discrete"
          ],
          "type": "string",
          "default": "continuous"
        }
      },
      "required": [
        "start-time",
        "repeat",
        "name"
      ],
      "type": "object"
    },
    "tsdb_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "dedicate": {
          "description": "Dedicate given nodes only for tsdb instances. No other services will be spawned on tsdb nodes when set to true",
          "type": "boolean"
        },
        "nodes": {
          "items": {
            "description": "Nodes on which tsdb instances needs to run",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "replication-factor": {
          "description": "High availability. Number of copies of data to be stored",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "trigger_action_schema": {
      "additionalProperties": false,
      "description": "Action schedulers associated with triggers",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "schedulers": {
          "items": {
            "description": "List of action schedulers",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
            "type": "string",
            "x-path": "../../scheduler/name"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "type": "object"
    },
    "schedulers_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "scheduler": {
          "items": {
            "$ref": "#/definitions/scheduler_schema"
          },
          "type": "array",
          "x-key": "name"
        }
      },
      "type": "object"
    },
    "ssh-key-profile_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "name": {
          "description": "SSH Key profile name. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "ssh-private-key-file": {
          "description": "SSH private key file name",
          "format": "string",
          "type": "string"
        },
        "ssh-private-key-passphrase": {
          "description": "SSH private key passphrase",
          "format": "string",
          "type": "string"
        }
      },
      "required": [
        "ssh-private-key-passphrase",
        "name",
        "ssh-private-key-file"
      ],
      "type": "object"
    },
    "destination_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "disk": {
          "additionalProperties": false,
          "description": "Store report on disk",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "max-reports": {
              "description": "Maximux repots to store on disk",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "email": {
          "additionalProperties": false,
          "description": "Send report over email",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "id": {
              "description": "Email ID",
              "format": "string",
              "pattern": "^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.)\\w+([-]?\\w+)$",
              "type": "string"
            }
          },
          "type": "object"
        },
        "name": {
          "description": "Name of the destination. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "destinations_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "destination": {
          "items": {
            "$ref": "#/definitions/destination_schema"
          },
          "type": "array",
          "x-key": "name"
        }
      },
      "type": "object"
    },
    "report-generation_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "destination": {
          "items": {
            "$ref": "#/definitions/destination_schema"
          },
          "type": "array",
          "x-key": "name"
        },
        "report": {
          "items": {
            "$ref": "#/definitions/report_schema"
          },
          "type": "array",
          "x-key": "name"
        }
      },
      "type": "object"
    },
    "report_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "capture-fields": {
          "items": {
            "description": "List of XPATHs specifying fields to capture",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "destination": {
          "items": {
            "description": "Report destination",
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
            "type": "string",
            "x-path": "../../destination/name"
          },
          "minItems": 1,
          "type": "array"
        },
        "format": {
          "description": "Generated report format",
          "enum": [
            "json",
            "html",
            "pdf"
          ],
          "type": "string"
        },
        "graph-canvas": {
          "description": "Canvas name",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "canvas-panel": {
                "description": "Canvas panel",
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "name": {
                      "description": "Name of the panel.",
                      "format": "string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "type": "array",
                "x-key": "name"
              },
              "name": {
                "description": "Name of the canvas.",
                "format": "string",
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          },
          "type": "array",
          "x-key": "name"
        },
        "name": {
          "description": "Name of the report",
          "format": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "schedule": {
          "items": {
            "description": "Attach the report to scheduler",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
            "type": "string",
            "x-path": "../../../scheduler/name"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "name",
        "destination",
        "schedule",
        "format"
      ],
      "type": "object",
      "x-ref": [
        "graph-canvas",
        "capture-fields"
      ]
    },
    "reports_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "report": {
          "items": {
            "$ref": "#/definitions/report_schema"
          },
          "type": "array",
          "x-key": "name"
        }
      },
      "type": "object"
    },
    "instance_schedule_state_schema": {
      "description": "Instance associated with active schedule and its corresponding scheduled state",
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "group-name": {
          "description": "Name of the group",
          "type": "string"
        },
        "group-type": {
          "description": "Type of the group. Can be one of device-group or network-group",
          "type": "string",
          "enum": [
            "device-group",
            "network-group"
          ]
        },
        "name": {
          "description": "Name of the instance",
          "type": "string"
        },
        "rule": {
          "description": "Name of the rule associated with the instance",
          "type": "string"
        },
        "playbook": {
          "description": "Name of the playbook associated with the instance",
          "type": "string"
        },
        "state": {
          "description": "Scheduled state of the instance. Can be one of active or inactive",
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ]
        },
        "update-time": {
          "description": "Time the current status is updated for this instance in elapsed seconds since epoch",
          "format": "int64",
          "readOnly": true
        }
      },
      "required": [
        "group-name",
        "group-type",
        "name",
        "rule",
        "playbook",
        "state"
      ],
      "type": "object",
      "x-key": "group-name name rule playbook"
    },
    "instances_schedule_state_schema": {
      "description": "List of instance associated with active schedule and their corresponding scheduled state",
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "instance": {
          "items": {
            "$ref": "#/definitions/instance_schedule_state_schema"
          },
          "type": "array",
          "x-key": "group-name name rule playbook"
        }
      },
      "required": [
        "instance"
      ],
      "type": "object"
    },
    "debug-arguments_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "arguments": {
          "description": "Optional key/value pair arguments to table",
          "type": "object"
        }
      },
      "required": [
        "arguments"
      ],
      "type": "object"
    },
    "debug-job-response_schema": {
      "properties": {
        "job-id": {
          "format": "uuid",
          "type": "string"
        },
        "job-status": {
          "enum": [
            "finished",
            "started",
            "error",
            "pending"
          ],
          "type": "string"
        },
        "job-details": {
          "type": "string"
        },
        "debug-data": {
          "type": "string"
        },
        "debug-type": {
          "enum": [
            "scenario",
            "service"
          ],
          "type": "string"
        },
        "debug-name": {
          "type": "string"
        }
      }
    },
    "role_schema": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "description": "ID generated by system"
          },
          "roleName": {
            "type": "string",
            "description": "Name of the role"
          }
        }
      }
    },
    "user_schema": {
      "properties": {
        "userName": {
          "type": "string",
          "description": "Name of the user"
        },
        "firstName": {
          "type": "string",
          "description": "First name of the user"
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the user"
        },
        "email": {
          "type": "string",
          "description": "Email of the user"
        },
        "password": {
          "type": "string",
          "description": "Password of the user"
        },
        "active": {
          "type": "boolean",
          "description": "Status of the user"
        },
        "groups": {
          "type": "array",
          "description": "list of groups associated",
          "items": {
            "type": "object",
            "properties": {
              "groupId": {
                "type": "string"
              },
              "groupName": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "associated_group_schema": {
      "type": "array",
      "description": "list of groups associated",
      "items": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          }
        }
      }
    },
    "associated_user_schema": {
      "type": "array",
      "description": "list of users associated",
      "items": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          }
        }
      }
    },
    "associated_role_schema": {
      "type": "array",
      "description": "list of roles associated",
      "items": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string"
          },
          "roleName": {
            "type": "string"
          }
        }
      }
    },
    "tsdb_post_body": {
      "additionalProperties": false,
      "description": "TSDB Post Body",
      "properties": {
        "items": {
          "type": "object",
          "properties": {
            "queryName": {
              "type": "string",
              "description": "Name of the query object. Optional. Not used for now"
            },
            "deviceGroup": {
              "type": "string",
              "description": "Name of the deviceGroup(s). Multiple device groups should be separated by ','. This can be used in combination with device, but is not mandatory. If device is given, then query will be executed only for that particular devices in the given device group, else all devices in group will be considered. Given devices will be applicable for all give device-groups."
            },
            "device": {
              "type": "string",
              "description": "Name of the device. Multiple device should be separated by ','. This should be used along with deviceGroup. Without deviceGroup, this config will not be considered"
            },
            "db": {
              "type": "string",
              "description": "Name of the database. Multiple databases should be separated by ','. '*' can be used to specify all databases."
            },
            "topic": {
              "type": "string",
              "description": "Name of Healthbot topic. Optional if measurement is used"
            },
            "rule": {
              "type": "string",
              "description": "Name of Healthbot rule. Required if topic is used. Optional if measurement is used"
            },
            "trigger": {
              "type": "string",
              "description": "Name of Healthbot trigger. Optional if measurement is used or rule table is being queried"
            },
            "measurement": {
              "type": "string",
              "description": "Name of the measurement. Optional if topic/rule/trigger is used"
            },
            "where": {
              "type": "string",
              "description": "Where clause filters data based on fields, tags, and/or timestamps. Eg: where=\"interface-name\" = 'ge-0/0/1' and \"in-pkts\" > 0"
            },
            "order": {
              "type": "string",
              "description": "Sort points in descending order based on time. By default points will be sorted in ascending order. Eg: order=desc"
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "description": "Limit number of points in the result. If groupBy is used limit is applied per group. Eg: limit=10"
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Fields that needs to be retrieved. Use * for to query all fields"
              }
            },
            "GroupBy": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Group results based on specified tags. Use * to group by all tags"
              }
            },
            "outerQueries": {
              "items": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "fields": {
                    "items": {
                      "format": "string",
                      "type": "string",
                      "description": "List of fields in outer query"
                    },
                    "type": "array"
                  },
                  "groupBy": {
                    "items": {
                      "format": "string",
                      "type": "string",
                      "description": "List of group by tags in outer query"
                    },
                    "type": "array"
                  }
                }
              },
              "type": "array"
            },
            "deviceAggregation": {
              "additionalProperties": false,
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "addDeviceAsTag": {
                  "type": "boolean",
                  "description": "Add device-id tag as basis for aggregation"
                },
                "bottomLimit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Fetch bottom N results"
                },
                "field": {
                  "format": "string",
                  "type": "string",
                  "description": "Field based on whiuch to aggregate data"
                },
                "topLimit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Fetch Top N results"
                }
              },
              "required": [
                "field"
              ],
              "type": "object"
            }
          }
        }
      }
    },
    "tsdb_results": {
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "statement_id": {
                "type": "integer",
                "format": "int32"
              },
              "database": {
                "type": "string"
              },
              "series": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "tagging-profiles_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "tagging-profile": {
          "items": {
            "$ref": "#/definitions/tagging-profile_schema"
          },
          "type": "array"
        }
      },
      "required": [
        "tagging-profile"
      ],
      "type": "object"
    },
    "deployment_schema": {
      "additionalProperties": false,
      "description": "Configurable deployment settings",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "deployment": {
          "additionalProperties": false,
          "description": "Store report on disk",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "kubernetes": {
              "additionalProperties": false,
              "description": "Kubernetes deployment configuration",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "loadbalancer": {
                  "additionalProperties": false,
                  "description": "Loadbalancer deployment configuration",
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "snmp-proxy": {
                      "additionalProperties": false,
                      "description": "Loadbalancer deployment configuration for SNMP Notifications",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "virtual-ip-address": {
                          "description": "load balancer virtual ipv4 address exclusive for SNMP",
                          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$",
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "required": [
                        "virtual-ip-address"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "tagging-profile_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Description about this tagging profile",
          "format": "string",
          "type": "string"
        },
        "name": {
          "description": "Tagging profile name. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "policy": {
          "description": "Policy details",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "description": {
                "description": "Description about policy",
                "format": "string",
                "type": "string"
              },
              "name": {
                "description": "Policy name. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "format": "string",
                "maxLength": 64,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string"
              },
              "rules": {
                "items": {
                  "description": "List of rules over which this profile will be applied. This can also consist of Unix filename pattern matching. For Example: 'topic-name/*' will match all rules within topic-name",
                  "format": "string",
                  "type": "string"
                },
                "type": "array"
              },
              "term": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "term-name": {
                      "description": "Term name. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                      "format": "string",
                      "maxLength": 64,
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                      "type": "string"
                    },
                    "then": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "add-field": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "name": {
                                "description": "Tagged field name",
                                "format": "string",
                                "maxLength": 64,
                                "pattern": "^[a-z][a-zA-Z0-9_-]*$",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "string",
                                  "integer",
                                  "unsigned-integer",
                                  "float"
                                ],
                                "type": "string"
                              },
                              "value": {
                                "description": "Tagged value",
                                "format": "string",
                                "type": "string"
                              },
                              "in-memory": {
                                "description": "Look for value in internal cache",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "value",
                              "name"
                            ]
                          },
                          "type": "array",
                          "x-key": "name"
                        },
                        "add-key": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "name": {
                                "description": "Tagged key field name",
                                "format": "string",
                                "maxLength": 64,
                                "pattern": "^[a-z][a-zA-Z0-9_-]*$",
                                "type": "string"
                              },
                              "value": {
                                "description": "Tagged value",
                                "format": "string",
                                "type": "string"
                              },
                              "in-memory": {
                                "description": "Look for value in internal cache",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "value",
                              "name"
                            ]
                          },
                          "type": "array",
                          "x-key": "name"
                        },
                        "next": {
                          "description": "Continue evaluating next term in the policy",
                          "items": {
                            "type": "object",
                            "x-nullable": true
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "when": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "does-not-match-with": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "left-operand": {
                                "description": "Left operand. This is the string in which we have to match the expression",
                                "format": "string",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "Right operand. This is the match expression",
                                "format": "string",
                                "type": "string"
                              },
                              "in-memory": {
                                "description": "Look for right-operand in internal cache",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "left-operand",
                              "right-operand"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "equal-to": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "left-operand": {
                                "description": "Left operand",
                                "format": "string",
                                "pattern": "^\\S+$",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "right operand",
                                "format": "string",
                                "pattern": "^\\S+$",
                                "type": "string"
                              },
                              "in-memory": {
                                "description": "Look for right-operand in internal cache",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "left-operand",
                              "right-operand"
                            ],
                            "x-ref": [
                              "lhs-rhs-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "eval": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "expression": {
                                "description": "Expression for evaluation must be a valid golang expression. Field-name if used in expression must be prefixed with $. operators should be prefix and suffix with spaces. For Example: $a + $b > $c",
                                "format": "string",
                                "type": "string"
                              }
                            },
                            "required": [
                              "expression"
                            ]
                          },
                          "type": "array",
                          "x-key": "expression"
                        },
                        "exists": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "field": {
                                "description": "This is the string that we need to look for within path when in-memory is set to True, else this contains the field-name that we need to look for in TSDB",
                                "format": "string",
                                "type": "string"
                              },
                              "path": {
                                "description": "Look for the field value in the given path, if it exist as key in dict or value in list if in-memory is set to true",
                                "format": "string",
                                "type": "string"
                              },
                              "in-memory": {
                                "description": "Look for field in internal cache path",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "field"
                            ]
                          },
                          "type": "array",
                          "x-key": "field"
                        },
                        "greater-than": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "left-operand": {
                                "description": "Left operand",
                                "format": "string",
                                "pattern": "^\\S+$",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "right operand",
                                "format": "string",
                                "pattern": "^\\S+$",
                                "type": "string"
                              },
                              "in-memory": {
                                "description": "Look for right-operand in internal cache",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "left-operand",
                              "right-operand"
                            ],
                            "x-ref": [
                              "lhs-rhs-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "greater-than-or-equal-to": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "left-operand": {
                                "description": "Left operand",
                                "format": "string",
                                "pattern": "^\\S+$",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "right operand",
                                "format": "string",
                                "pattern": "^\\S+$",
                                "type": "string"
                              },
                              "in-memory": {
                                "description": "Look for right-operand in internal cache",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "left-operand",
                              "right-operand"
                            ],
                            "x-ref": [
                              "lhs-rhs-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "less-than": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "left-operand": {
                                "description": "Left operand",
                                "format": "string",
                                "pattern": "^\\S+$",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "right operand",
                                "format": "string",
                                "pattern": "^\\S+$",
                                "type": "string"
                              },
                              "in-memory": {
                                "description": "Look for right-operand in internal cache",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "left-operand",
                              "right-operand"
                            ],
                            "x-ref": [
                              "lhs-rhs-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "less-than-or-equal-to": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "left-operand": {
                                "description": "Left operand",
                                "format": "string",
                                "pattern": "^\\S+$",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "right operand",
                                "format": "string",
                                "pattern": "^\\S+$",
                                "type": "string"
                              },
                              "in-memory": {
                                "description": "Look for right-operand in internal cache",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "left-operand",
                              "right-operand"
                            ],
                            "x-ref": [
                              "lhs-rhs-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "matches-with": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "left-operand": {
                                "description": "Left operand. This is the string in which we have to match the expression",
                                "format": "string",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "Right operand. This is the match expression",
                                "format": "string",
                                "type": "string"
                              },
                              "in-memory": {
                                "description": "Look for right-operand in internal cache",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "left-operand",
                              "right-operand"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        },
                        "matches-with-scheduler": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "scheduler": {
                              "description": "Name of the scheduler defined within system/scheduler hierarchy",
                              "format": "string",
                              "type": "string"
                            },
                            "time": {
                              "description": "Field holding time in UNIX time format. Optional default is point time",
                              "format": "string",
                              "pattern": "^[$][a-z][a-zA-Z0-9_-]*$",
                              "type": "string"
                            },
                            "in-memory": {
                              "description": "Look for time in internal cache",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "scheduler"
                          ],
                          "type": "object"
                        },
                        "does-not-match-with-scheduler": {
                          "additionalProperties": false,
                          "patternProperties": {
                            "^@": {
                              "type": "object"
                            }
                          },
                          "properties": {
                            "scheduler": {
                              "description": "Name of the scheduler defined within system/scheduler hierarchy",
                              "format": "string",
                              "type": "string"
                            },
                            "time": {
                              "description": "Field holding time in UNIX time format. Optional default is point time",
                              "format": "string",
                              "pattern": "^[$][a-z][a-zA-Z0-9_-]*$",
                              "type": "string"
                            },
                            "in-memory": {
                              "description": "Look for time in internal cache",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "scheduler"
                          ],
                          "type": "object"
                        },
                        "not-equal-to": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "left-operand": {
                                "description": "Left operand",
                                "format": "string",
                                "pattern": "^\\S+$",
                                "type": "string"
                              },
                              "right-operand": {
                                "description": "right operand",
                                "format": "string",
                                "pattern": "^\\S+$",
                                "type": "string"
                              },
                              "in-memory": {
                                "description": "Look for right-operand in internal cache",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "left-operand",
                              "right-operand"
                            ],
                            "x-ref": [
                              "lhs-rhs-group"
                            ]
                          },
                          "type": "array",
                          "x-key": "left-operand right-operand"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "term-name",
                    "then"
                  ]
                },
                "minItems": 1,
                "type": "array",
                "x-key": "term-name"
              }
            },
            "required": [
              "term",
              "name",
              "rules"
            ]
          },
          "type": "array",
          "x-key": "name"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "trigger_schema": {
      "additionalProperties": false,
      "properties": {
        "triggers": {
          "items": {
            "type": "object",
            "properties": {
              "fields": {
                "items": {
                  "description": "List of fields used in evaluating the trigger",
                  "format": "string",
                  "type": "string"
                },
                "type": "array"
              },
              "name": {
                "description": "Name of the trigger",
                "format": "string",
                "type": "string"
              }
            }
          },
          "type": "array",
          "x-key": "name"
        }
      }
    },
    "organization_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Description about the organization",
          "format": "string",
          "type": "string"
        },
        "organization-name": {
          "description": "Name of the organization. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "minLength": 1,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "site": {
          "items": {
            "$ref": "#/definitions/site_schema"
          },
          "type": "array",
          "x-key": "site-name"
        }
      },
      "required": [
        "organization-name"
      ],
      "type": "object"
    },
    "organizations_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "organization": {
          "items": {
            "$ref": "#/definitions/organization_schema"
          },
          "type": "array",
          "x-key": "organization-name"
        }
      },
      "type": "object"
    },
    "site_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Description about the site",
          "format": "string",
          "type": "string"
        },
        "edge": {
          "items": {
            "$ref": "#/definitions/edge_schema"
          },
          "type": "array",
          "x-key": "edge-name"
        },
        "site-name": {
          "description": "Name of the site. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "minLength": 1,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        }
      },
      "required": [
        "site-name"
      ]
    },
    "edge_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Description about the edge",
          "format": "string",
          "type": "string"
        },
        "edge-id": {
          "description": "uuid of the edge in string",
          "format": "string",
          "type": "string"
        },
        "edge-name": {
          "description": "Name of the edge. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "minLength": 1,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        }
      },
      "required": [
        "edge-name",
        "edge-id"
      ]
    },
    "workflow_argument_group_schema": {
      "description": "Workflow input arguments",
      "items": {
        "additionalProperties": false,
        "patternProperties": {
          "^@": {
            "type": "object"
          }
        },
        "properties": {
          "description": {
            "description": "Optional description about the argument",
            "format": "string",
            "type": "string"
          },
          "name": {
            "description": "Name of the input argument passed to the workflow. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
            "format": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
            "type": "string"
          },
          "value": {
            "description": "Optional default value for the argument",
            "format": "string",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ]
      },
      "type": "array",
      "x-key": "name"
    },
    "workflow_cron_options_schema": {
      "description": "Workflow Cron Workflow Options information",
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Description about this cron workflow options",
          "format": "string",
          "type": "string"
        },
        "schedule": {
          "description": "Cron expression of time at which workflow will be run",
          "format": "string",
          "type": "string"
        },
        "concurrency-policy": {
          "description": "Policy that determines what to do if multiple Workflows are scheduled at the same time",
          "format": "string",
          "enum": [
            "allow",
            "replace",
            "forbid"
          ],
          "type": "string"
        },
        "starting-deadline-duration": {
          "description": "Duration after the last successful run during which a missed Workflow will be run",
          "format": "string",
          "type": "string"
        },
        "successful-jobs-history-limit": {
          "description": "Number of successful Workflows that will be persisted at a time",
          "format": "int32",
          "type": "integer"
        },
        "failed-jobs-history-limit": {
          "description": "Policy that determines what to do if multiple Workflows are scheduled at the same time",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "schedule"
      ]
    },
    "workflow_notification_schema": {
      "description": "Workflow notification configuration",
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "type": "object",
      "properties": {
        "tag": {
          "description": "Notification key tag",
          "type": "string"
        },
        "payload": {
          "description": "Payload of the notification",
          "type": "string"
        }
      },
      "required": [
        "tag"
      ]
    },
    "workflow_command_schema": {
      "description": "Workflow command configuration",
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "type": "object",
      "properties": {
        "command-tag": {
          "description": "Command tag",
          "format": "string",
          "type": "string"
        },
        "commands": {
          "description": "List of commands to execute",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "command": {
                "description": "Execute this command",
                "format": "string",
                "type": "string"
              }
            },
            "type": "object",
            "required": [
              "command"
            ]
          },
          "type": "array",
          "x-key": "command"
        },
        "ignore": {
          "description": "Ignore if this command fails",
          "items": {
            "type": "object",
            "x-nullable": true
          },
          "type": "array"
        },
        "delay": {
          "description": "Delay between this command's repeated attempts",
          "format": "string",
          "type": "string",
          "default": "10s"
        },
        "repeat": {
          "description": "Repeat this command on failure",
          "type": "number",
          "default": 0
        },
        "type": {
          "description": "Type of the data produced or consumed",
          "type": "string",
          "enum": [
            "data-xml",
            "json",
            "text"
          ]
        },
        "arguments": {
          "items": {
            "description": "List of arguments to the command invoked",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "environment": {
          "items": {
            "description": "key=value environment variables to associate to the executable at runtime",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "device": {
          "items": {
            "description": "Run command against this set of devices",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "device-group": {
          "items": {
            "description": "Run command against this set of device groups",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "command-tag"
      ]
    },
    "workflow_schema": {
      "description": "Workflows configuration",
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Description about this workflow",
          "format": "string",
          "type": "string"
        },
        "entry-task": {
          "description": "Starting entry task of this workflow",
          "maxLength": 64,
          "minLength": 1,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string",
          "x-path": "../task/task-name"
        },
        "exit-task": {
          "description": "Exit/Cleanup task to invoke after the completion of the workflow",
          "maxLength": 64,
          "minLength": 1,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string",
          "x-path": "../task/task-name"
        },
        "argument": {
          "$ref": "#/definitions/workflow_argument_group_schema"
        },
        "cron-options": {
          "$ref": "#/definitions/workflow_cron_options_schema"
        },
        "batch": {
          "description": "Maximum parallel steps launched",
          "format": "int32",
          "type": "integer"
        },
        "retry": {
          "additionalProperties": false,
          "description": "Retry failed steps",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "backoff": {
              "additionalProperties": false,
              "description": "Backoff retry attempts exponentially",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "duration": {
                  "description": "Initial duration to wait before retrying failed step",
                  "format": "string",
                  "type": "string"
                },
                "factor": {
                  "description": "Wait duration multiplication factor during each retry attempt",
                  "format": "int32",
                  "type": "integer"
                },
                "max-duration": {
                  "description": "Maximum duration to wait before retrying a failed step",
                  "format": "string",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "limit": {
              "description": "Maximum number of retry attempts",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "timeout": {
          "description": "Maximum time to wait for the step completion before bailing out (default 60 seconds)",
          "format": "string",
          "type": "string"
        },
        "task": {
          "description": "Task configuration which holds a list of steps to execute",
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "parallel": {
                "description": "Run all steps in this task in parallel to one another",
                "items": {
                  "type": "object",
                  "x-nullable": true
                },
                "type": "array"
              },
              "step": {
                "description": "Workflow step configuration",
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "cli-command": {
                      "additionalProperties": false,
                      "description": "Run CLI command(s)",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "items": {
                        "$ref": "#/definitions/workflow_command_schema"
                      },
                      "type": "array",
                      "x-key": "command-tag",
                      "x-choice": "step-type",
                      "x-choice-case": "cli-command"
                    },
                    "executable": {
                      "additionalProperties": false,
                      "description": "Run an arbitrary executable file such as bash, python, ruby, etc.",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "items": {
                        "$ref": "#/definitions/workflow_command_schema"
                      },
                      "type": "array",
                      "x-key": "command-tag",
                      "x-choice": "step-type",
                      "x-choice-case": "executable"
                    },
                    "netconf-command": {
                      "additionalProperties": false,
                      "description": "Run netconf command(s)",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "items": {
                        "$ref": "#/definitions/workflow_command_schema"
                      },
                      "type": "array",
                      "x-key": "command-tag",
                      "x-choice": "step-type",
                      "x-choice-case": "netconf-command"
                    },
                    "notification": {
                      "additionalProperties": false,
                      "description": "Send a notification message (configured under notification section)",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "items": {
                        "$ref": "#/definitions/workflow_notification_schema"
                      },
                      "type": "array",
                      "x-key": "tag",
                      "x-choice": "step-type",
                      "x-choice-case": "notification"
                    },
                    "condition": {
                      "items": {
                        "description": "Optional conditions only under which the step must be called",
                        "format": "string",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "condition-description": {
                      "description": "Description of the configured conditions",
                      "format": "string",
                      "type": "string"
                    },
                    "condition-type": {
                      "description": "Call the step if any of the conditions evaluates to true or all of the conditions evaluate to true (default any)",
                      "enum": [
                        "any",
                        "all"
                      ],
                      "type": "string"
                    },
                    "dependencies": {
                      "items": {
                        "description": "Run this step only after dependent steps (in this task) are complete",
                        "format": "string",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "description": {
                      "description": "Description about the step being called",
                      "format": "string",
                      "type": "string"
                    },
                    "input": {
                      "description": "Workflow input parameters configuration",
                      "items": {
                        "additionalProperties": false,
                        "patternProperties": {
                          "^@": {
                            "type": "object"
                          }
                        },
                        "properties": {
                          "name": {
                            "description": "Input paraameter name passed. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                            "format": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                            "type": "string"
                          },
                          "value": {
                            "description": "Input parameter value passed",
                            "format": "string",
                            "type": "string"
                          },
                          "artifact": {
                            "description": "Input data are artifact",
                            "items": {
                              "type": "object",
                              "x-nullable": true
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "type": "array",
                      "x-key": "name"
                    },
                    "output": {
                      "description": "Workflow output parameters configuration",
                      "items": {
                        "additionalProperties": false,
                        "patternProperties": {
                          "^@": {
                            "type": "object"
                          }
                        },
                        "properties": {
                          "artifact": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "path": {
                                "description": "Full path of file or directory to be exported as output of this step",
                                "format": "string",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "x-choice": "output-type",
                            "x-choice-case": "artifact"
                          },
                          "command-tag": {
                            "description": "Command tag whose output is used for pattern match",
                            "format": "string",
                            "type": "string"
                          },
                          "data-xml": {
                            "additionalProperties": false,
                            "description": "Glean output and export using xpath",
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "xpath": {
                                "description": "Export output using xpath",
                                "format": "string",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "x-choice": "output-type",
                            "x-choice-case": "data-xml"
                          },
                          "description": {
                            "description": "Exported output field desciption",
                            "format": "string",
                            "type": "string"
                          },
                          "grok": {
                            "additionalProperties": false,
                            "description": "Glean output and export using grok pattern",
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "pattern": {
                                "format": "string",
                                "type": "string"
                              }
                            },
                            "required": [
                              "pattern"
                            ],
                            "type": "object",
                            "x-choice": "output-type",
                            "x-choice-case": "grok"
                          },
                          "json": {
                            "additionalProperties": false,
                            "description": "Glean output and export using json path",
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "jqpath": {
                                "description": "Export output using jqpath",
                                "format": "string",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "x-choice": "output-type",
                            "x-choice-case": "json"
                          },
                          "name": {
                            "description": "Output parameter name exported from the workflow. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                            "format": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                            "type": "string"
                          },
                          "result": {
                            "description": "Export stdout output (stdout) of the step",
                            "items": {
                              "type": "object",
                              "x-nullable": true
                            },
                            "type": "array"
                          },
                          "regex": {
                            "additionalProperties": false,
                            "description": "Glean output using regular expressions",
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "pattern": {
                                "description": "Regular expression based pattern",
                                "format": "string",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "type": "array",
                      "x-key": "name"
                    },
                    "step-name": {
                      "description": "Name of the step being called. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                      "format": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                      "type": "string"
                    },
                    "suspend": {
                      "additionalProperties": false,
                      "description": "Suspend workflow execution",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "duration": {
                          "description": "Duration to suspend execution. Default is to wait indefinitely until resumed",
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-choice": "step-type",
                      "x-choice-case": "suspend"
                    },
                    "task": {
                      "additionalProperties": false,
                      "description": "Trigger another configured task in this workflow",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "name": {
                          "description": "Name of the task to be called",
                          "maxLength": 64,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                          "type": "string",
                          "x-path": "../../../../task/task-name"
                        }
                      },
                      "type": "object",
                      "x-choice": "step-type",
                      "x-choice-case": "task"
                    },
                    "workflow": {
                      "additionalProperties": false,
                      "description": "Trigger another configured worlflow",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "name": {
                          "description": "Name of the workflow to be called",
                          "maxLength": 64,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                          "type": "string",
                          "x-path": "../../../../../workflow/workflow-name"
                        }
                      },
                      "type": "object",
                      "x-choice": "step-type",
                      "x-choice-case": "workflow"
                    }
                  },
                  "required": [
                    "step-name"
                  ],
                  "x-ref": [
                    "input-group",
                    "output-group",
                    "condition-group"
                  ]
                },
                "type": "array",
                "x-key": "step-name"
              },
              "task-name": {
                "description": "Name of the task being called. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "format": "string",
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string"
              }
            },
            "required": [
              "task-name"
            ],
            "x-ref": [
              "step-group"
            ]
          },
          "type": "array",
          "x-key": "task-name"
        },
        "workflow-name": {
          "description": "Name of the workflow. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "minLength": 1,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        }
      },
      "required": [
        "workflow-name"
      ]
    },
    "workflows_schema": {
      "additionalProperties": false,
      "description": "Workflow configuration in bulk",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "workflow": {
          "items": {
            "$ref": "#/definitions/workflow_schema"
          },
          "type": "array",
          "x-key": "workflow-name"
        }
      },
      "required": [
        "workflow"
      ],
      "type": "object"
    },
    "workflow_instance_schema": {
      "description": "Workflow instance information",
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Description about this workflow instance",
          "format": "string",
          "type": "string"
        },
        "created-at": {
          "description": "Workflow instance creation time",
          "type": "string"
        },
        "started-at": {
          "description": "Workflow instance startup time",
          "type": "string"
        },
        "finished-at": {
          "description": "Workflow instance completion time",
          "type": "string"
        },
        "status": {
          "description": "Workflow instance current status",
          "type": "string"
        },
        "message": {
          "description": "Workflow instance current status message",
          "type": "string"
        },
        "devices": {
          "items": {
            "description": "Workflow instance target devices",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "device-groups": {
          "items": {
            "description": "Workflow instance target device-groups",
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "parameters": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "name": {
                "description": "Input argument name",
                "format": "string",
                "type": "string"
              },
              "value": {
                "description": "Input argument value",
                "format": "string",
                "type": "string"
              },
              "value-from": {
                "description": "Input argument value-from",
                "format": "string",
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          },
          "type": "array",
          "x-key": "parameter-name"
        },
        "argument": {
          "$ref": "#/definitions/workflow_argument_group_schema"
        },
        "cron-options": {
          "$ref": "#/definitions/workflow_cron_options_schema"
        },
        "batch": {
          "description": "Maximum parallel steps launched",
          "format": "int32",
          "type": "integer"
        },
        "retry": {
          "additionalProperties": false,
          "description": "Retry failed steps",
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "backoff": {
              "additionalProperties": false,
              "description": "Backoff retry attempts exponentially",
              "patternProperties": {
                "^@": {
                  "type": "object"
                }
              },
              "properties": {
                "duration": {
                  "description": "Initial duration to wait before retrying failed step",
                  "format": "string",
                  "type": "string"
                },
                "factor": {
                  "description": "Wait duration multiplication factor during each retry attempt",
                  "format": "int32",
                  "type": "integer"
                },
                "max-duration": {
                  "description": "Maximum duration to wait before retrying a failed step",
                  "format": "string",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "limit": {
              "description": "Maximum number of retry attempts",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "timeout": {
          "description": "Maximum time to wait for the step completion before bailing out (default 60 seconds)",
          "format": "string",
          "type": "string"
        },
        "workflow-instance-name": {
          "description": "Name of the workflow instance",
          "format": "string",
          "minLength": 1,
          "type": "string"
        },
        "workflow-name": {
          "description": "Name of the workflow. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
          "format": "string",
          "maxLength": 64,
          "minLength": 1,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
          "type": "string"
        }
      },
      "required": [
        "workflow-name"
      ]
    },
    "workflow_statistics_schema": {
      "description": "Workflow statistics information",
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "description": {
          "description": "Description about this workflow statistics",
          "format": "string",
          "type": "string"
        },
        "total_run": {
          "description": "Total workflow instances run",
          "type": "integer",
          "minimum": 0
        },
        "total_succeeded": {
          "description": "Total workflow instances succeeded",
          "type": "integer",
          "minimum": 0
        },
        "total_failed": {
          "description": "Total workflow instances failed",
          "type": "integer",
          "minimum": 0
        },
        "total_running": {
          "description": "Total workflow instances running currently",
          "type": "integer",
          "minimum": 0
        },
        "total_suspended": {
          "description": "Total workflow instances suspended",
          "type": "integer",
          "minimum": 0
        }
      },
      "type": "object"
    },
    "workflow_instances_schema": {
      "additionalProperties": false,
      "description": "Workflow instances",
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "workflow": {
          "items": {
            "$ref": "#/definitions/workflow_instance_schema"
          },
          "type": "array",
          "x-key": "workflow-instance-name"
        }
      },
      "required": [
        "workflow"
      ],
      "type": "object"
    },
    "dynamic_taggings_schema_object": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "dynamic-tagging": {
          "items": {
            "$ref": "#/definitions/dynamic_tagging_schema_object"
          },
          "type": "array"
        }
      },
      "required": [
        "dynamic-tagging"
      ],
      "type": "object"
    },
    "dynamic_tagging_schema_object": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "key": {
          "description": "Dynamic-tagging key name",
          "format": "string",
          "type": "string"
        },
        "value": {
          "description": "Dynamic-tagging key value",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer",
                "format": "int32"
              },
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "object"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      },
      "required": [
        "key",
        "value"
      ],
      "type": "object"
    },
    "resource_schema": {
      "additionalProperties": false,
      "patternProperties": {
        "^@": {
          "type": "object"
        }
      },
      "properties": {
        "depends-on": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "depends-on-multiple-instances": {
                "description": "Depends on multiple instances of the depends-on resource. One to many relationship. Eg: ae interface can be dependent on multiple interfaces",
                "type": "boolean"
              },
              "description": {
                "description": "Description about the dependency",
                "format": "string",
                "type": "string"
              },
              "resource-name": {
                "description": "Name of dependent resource <topic-name>/<resource-name>. Should be of pattern [a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*",
                "format": "string",
                "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*$",
                "type": "string"
              },
              "term": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "for-every-device": {
                      "additionalProperties": false,
                      "description": "Loop over all devices",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "across-all-device-groups": {
                          "description": "evaluate for all device groups",
                          "type": "boolean",
                          "x-choice": "device-groups",
                          "x-choice-case": "across-all-device-groups"
                        },
                        "in-groups": {
                          "items": {
                            "description": "Limit the loop to device groups in this list",
                            "format": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                            "type": "string"
                          },
                          "type": "array",
                          "x-choice": "device-groups",
                          "x-choice-case": "in-groups"
                        },
                        "label-as": {
                          "format": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                          "type": "string"
                        }
                      },
                      "required": [
                        "label-as"
                      ],
                      "type": "object"
                    },
                    "for-every-network-group": {
                      "additionalProperties": false,
                      "description": "Loop over all network groups",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "across-all-network-groups": {
                          "description": "evaluate for all network groups",
                          "type": "boolean",
                          "x-choice": "network-groups",
                          "x-choice-case": "across-all-network-groups"
                        },
                        "in-groups": {
                          "items": {
                            "description": "Limit the loop to network groups in this list",
                            "format": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                            "type": "string"
                          },
                          "type": "array",
                          "x-choice": "network-groups",
                          "x-choice-case": "in-groups"
                        },
                        "label-as": {
                          "format": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                          "type": "string"
                        }
                      },
                      "required": [
                        "label-as"
                      ],
                      "type": "object"
                    },
                    "get-dependencies-from-cache": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "path": {
                          "description": "Instance name given while pushing the dependencies to HealthBot",
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "locate-resource": {
                      "items": {
                        "additionalProperties": false,
                        "patternProperties": {
                          "^@": {
                            "type": "object"
                          }
                        },
                        "properties": {
                          "label-as": {
                            "format": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                            "type": "string"
                          },
                          "resource": {
                            "description": "Name of the resource which needs to looped over. Format: <optional-idetifier followed by :><topic-name/rule-name>. Should be of pattern ([a-zA-Z][a-zA-Z0-9-]*:)?[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*.",
                            "format": "string",
                            "pattern": "^([a-zA-Z][a-zA-Z0-9-]*:)?[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9-]*$",
                            "type": "string"
                          },
                          "where": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "does-not-match-with": {
                                "items": {
                                  "additionalProperties": false,
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "left-operand": {
                                      "description": "Left operand. This is the string in which we have to match the expression",
                                      "format": "string",
                                      "type": "string"
                                    },
                                    "right-operand": {
                                      "description": "Right operand. This is the match expression",
                                      "format": "string",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "right-operand",
                                    "left-operand"
                                  ]
                                },
                                "type": "array",
                                "x-key": "left-operand right-operand"
                              },
                              "equal-to": {
                                "items": {
                                  "additionalProperties": false,
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "left-operand": {
                                      "description": "Left operand",
                                      "format": "string",
                                      "pattern": "^\\S+$",
                                      "type": "string"
                                    },
                                    "right-operand": {
                                      "description": "right operand",
                                      "format": "string",
                                      "pattern": "^\\S+$",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "right-operand",
                                    "left-operand"
                                  ],
                                  "x-ref": [
                                    "lhs-rhs-group"
                                  ]
                                },
                                "type": "array",
                                "x-key": "left-operand right-operand"
                              },
                              "eval": {
                                "items": {
                                  "additionalProperties": false,
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "expression": {
                                      "description": "Expression for evaluation must be a valid golang expression. Field-name if used in expression must be prefixed with $. operators should be prefix and suffix with spaces. For Example: $a + $b > $c",
                                      "format": "string",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "expression"
                                  ]
                                },
                                "type": "array",
                                "x-key": "expression"
                              },
                              "greater-than": {
                                "items": {
                                  "additionalProperties": false,
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "left-operand": {
                                      "description": "Left operand",
                                      "format": "string",
                                      "pattern": "^\\S+$",
                                      "type": "string"
                                    },
                                    "right-operand": {
                                      "description": "right operand",
                                      "format": "string",
                                      "pattern": "^\\S+$",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "right-operand",
                                    "left-operand"
                                  ],
                                  "x-ref": [
                                    "lhs-rhs-group"
                                  ]
                                },
                                "type": "array",
                                "x-key": "left-operand right-operand"
                              },
                              "greater-than-or-equal-to": {
                                "items": {
                                  "additionalProperties": false,
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "left-operand": {
                                      "description": "Left operand",
                                      "format": "string",
                                      "pattern": "^\\S+$",
                                      "type": "string"
                                    },
                                    "right-operand": {
                                      "description": "right operand",
                                      "format": "string",
                                      "pattern": "^\\S+$",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "right-operand",
                                    "left-operand"
                                  ],
                                  "x-ref": [
                                    "lhs-rhs-group"
                                  ]
                                },
                                "type": "array",
                                "x-key": "left-operand right-operand"
                              },
                              "less-than": {
                                "items": {
                                  "additionalProperties": false,
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "left-operand": {
                                      "description": "Left operand",
                                      "format": "string",
                                      "pattern": "^\\S+$",
                                      "type": "string"
                                    },
                                    "right-operand": {
                                      "description": "right operand",
                                      "format": "string",
                                      "pattern": "^\\S+$",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "right-operand",
                                    "left-operand"
                                  ],
                                  "x-ref": [
                                    "lhs-rhs-group"
                                  ]
                                },
                                "type": "array",
                                "x-key": "left-operand right-operand"
                              },
                              "less-than-or-equal-to": {
                                "items": {
                                  "additionalProperties": false,
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "left-operand": {
                                      "description": "Left operand",
                                      "format": "string",
                                      "pattern": "^\\S+$",
                                      "type": "string"
                                    },
                                    "right-operand": {
                                      "description": "right operand",
                                      "format": "string",
                                      "pattern": "^\\S+$",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "right-operand",
                                    "left-operand"
                                  ],
                                  "x-ref": [
                                    "lhs-rhs-group"
                                  ]
                                },
                                "type": "array",
                                "x-key": "left-operand right-operand"
                              },
                              "matches-with": {
                                "items": {
                                  "additionalProperties": false,
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "ignore-case": {
                                      "description": "Flag to ignore case while matching the string",
                                      "items": {
                                        "type": "null"
                                      },
                                      "type": "array"
                                    },
                                    "left-operand": {
                                      "description": "Left operand. This is the string in which we have to match the expression",
                                      "format": "string",
                                      "type": "string"
                                    },
                                    "right-operand": {
                                      "description": "Right operand. This is the match expression",
                                      "format": "string",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "right-operand",
                                    "left-operand"
                                  ]
                                },
                                "type": "array",
                                "x-key": "left-operand right-operand"
                              },
                              "not-equal-to": {
                                "items": {
                                  "additionalProperties": false,
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "left-operand": {
                                      "description": "Left operand",
                                      "format": "string",
                                      "pattern": "^\\S+$",
                                      "type": "string"
                                    },
                                    "right-operand": {
                                      "description": "right operand",
                                      "format": "string",
                                      "pattern": "^\\S+$",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "right-operand",
                                    "left-operand"
                                  ],
                                  "x-ref": [
                                    "lhs-rhs-group"
                                  ]
                                },
                                "type": "array",
                                "x-key": "left-operand right-operand"
                              },
                              "user-defined-function": {
                                "description": "User defined function to populate field value",
                                "items": {
                                  "additionalProperties": false,
                                  "patternProperties": {
                                    "^@": {
                                      "type": "object"
                                    }
                                  },
                                  "properties": {
                                    "argument": {
                                      "items": {
                                        "additionalProperties": false,
                                        "patternProperties": {
                                          "^@": {
                                            "type": "object"
                                          }
                                        },
                                        "properties": {
                                          "argument-name": {
                                            "description": "Name of the argument. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                                            "format": "string",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Argument value",
                                            "format": "string",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "value",
                                          "argument-name"
                                        ]
                                      },
                                      "type": "array",
                                      "x-key": "argument-name value"
                                    },
                                    "function-name": {
                                      "description": "Name of the function that is defined in the resource. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                                      "format": "string",
                                      "maxLength": 64,
                                      "minLength": 1,
                                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "function-name"
                                  ]
                                },
                                "type": "array",
                                "x-key": "function-name"
                              }
                            },
                            "type": "object"
                          },
                          "with-capture-group": {
                            "items": {
                              "additionalProperties": false,
                              "patternProperties": {
                                "^@": {
                                  "type": "object"
                                }
                              },
                              "properties": {
                                "capture-group-name": {
                                  "description": "Name of the capture group. Should be of pattern [a-zA-Z][a-zA-Z0-9-]*",
                                  "format": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Regular expression to extract sub strings",
                                  "format": "string",
                                  "type": "string"
                                },
                                "field-name": {
                                  "description": "Name of the local or depending resource field name",
                                  "format": "string",
                                  "type": "string"
                                },
                                "ignore-case": {
                                  "description": "If true, regex match with be case insensitive",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "capture-group-name"
                              ]
                            },
                            "type": "array",
                            "x-key": "capture-group-name"
                          }
                        },
                        "required": [
                          "resource",
                          "label-as"
                        ]
                      },
                      "type": "array",
                      "x-key": "resource"
                    },
                    "next": {
                      "description": "Continue evaluating next term",
                      "type": "boolean"
                    },
                    "term-name": {
                      "description": "Term name. Should be of pattern [a-zA-Z][a-zA-Z0-9-]*",
                      "format": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                      "type": "string"
                    },
                    "user-defined-function": {
                      "additionalProperties": false,
                      "description": "User defined function to populate field value",
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "argument": {
                          "items": {
                            "additionalProperties": false,
                            "patternProperties": {
                              "^@": {
                                "type": "object"
                              }
                            },
                            "properties": {
                              "argument-name": {
                                "description": "Name of the argument. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                                "format": "string",
                                "maxLength": 64,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                                "type": "string"
                              },
                              "value": {
                                "description": "Argument value",
                                "format": "string",
                                "type": "string"
                              }
                            },
                            "required": [
                              "value",
                              "argument-name"
                            ]
                          },
                          "type": "array",
                          "x-key": "argument-name value"
                        },
                        "function-name": {
                          "description": "Name of the function that is defined in the resource. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                          "format": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                          "type": "string"
                        }
                      },
                      "required": [
                        "function-name"
                      ],
                      "type": "object"
                    },
                    "with-capture-group": {
                      "items": {
                        "additionalProperties": false,
                        "patternProperties": {
                          "^@": {
                            "type": "object"
                          }
                        },
                        "properties": {
                          "capture-group-name": {
                            "description": "Name of the capture group. Should be of pattern [a-zA-Z][a-zA-Z0-9-]*",
                            "format": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                            "type": "string"
                          },
                          "expression": {
                            "description": "Regular expression to extract sub strings",
                            "format": "string",
                            "type": "string"
                          },
                          "field-name": {
                            "description": "Name of the local or depending resource field name",
                            "format": "string",
                            "type": "string"
                          },
                          "ignore-case": {
                            "description": "If true, regex match with be case insensitive",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "capture-group-name"
                        ]
                      },
                      "type": "array",
                      "x-key": "capture-group-name"
                    }
                  },
                  "required": [
                    "term-name"
                  ]
                },
                "minItems": 1,
                "type": "array",
                "x-key": "term-name"
              },
              "triggered-by": {
                "items": {
                  "description": "Triggers based on which the dependency should be triggered",
                  "format": "string",
                  "maxLength": 129,
                  "minLength": 1,
                  "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9_-]*$",
                  "type": "string"
                },
                "type": "array"
              },
              "with-capture-group": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "capture-group-name": {
                      "description": "Name of the capture group. Should be of pattern [a-zA-Z][a-zA-Z0-9-]*",
                      "format": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
                      "type": "string"
                    },
                    "expression": {
                      "description": "Regular expression to extract sub strings",
                      "format": "string",
                      "type": "string"
                    },
                    "field-name": {
                      "description": "Name of the local or depending resource field name",
                      "format": "string",
                      "type": "string"
                    },
                    "ignore-case": {
                      "description": "If true, regex match with be case insensitive",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "capture-group-name"
                  ]
                },
                "type": "array",
                "x-key": "capture-group-name"
              }
            },
            "required": [
              "resource-name",
              "term"
            ]
          },
          "type": "array",
          "x-key": "resource-name"
        },
        "description": {
          "description": "Description about the resource",
          "format": "string",
          "type": "string"
        },
        "field": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "description": {
                "description": "Description about resource field",
                "format": "string",
                "type": "string"
              },
              "field-name": {
                "description": "Name of the resource field. Should be of pattern [a-z][a-zA-Z0-9-]*",
                "format": "string",
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[a-z][a-zA-Z0-9-]*$",
                "type": "string"
              },
              "source": {
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "rule": {
                    "items": {
                      "additionalProperties": false,
                      "patternProperties": {
                        "^@": {
                          "type": "object"
                        }
                      },
                      "properties": {
                        "field-name": {
                          "description": "Rule field name from where resource field should be populated. Should be of pattern [a-z][a-zA-Z0-9_-]*",
                          "format": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "pattern": "^[a-z][a-zA-Z0-9_-]*$",
                          "type": "string"
                        },
                        "rule-name": {
                          "description": "Rule name from where the resource needs to be discovered. Format: <topic-name>/<rule-name>. Should be of pattern [a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9_-]*",
                          "format": "string",
                          "maxLength": 129,
                          "minLength": 1,
                          "pattern": "^[a-z][a-z-]*(\\.{1}[a-z0-9-]+)*/[a-z][a-z0-9_-]*$",
                          "type": "string"
                        }
                      },
                      "required": [
                        "rule-name",
                        "field-name"
                      ]
                    },
                    "type": "array",
                    "x-key": "rule-name"
                  }
                },
                "type": "object"
              },
              "type": {
                "description": "Resource field type",
                "enum": [
                  "string",
                  "integer",
                  "unsigned-integer",
                  "float"
                ],
                "type": "string"
              }
            },
            "required": [
              "type",
              "field-name"
            ]
          },
          "type": "array",
          "x-key": "field-name"
        },
        "function": {
          "items": {
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "argument": {
                "items": {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^@": {
                      "type": "object"
                    }
                  },
                  "properties": {
                    "argument-name": {
                      "description": "Name of the argument. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                      "format": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                      "type": "string"
                    },
                    "mandatory": {
                      "description": "Flag to indicate a mandatory attribute",
                      "items": {
                        "type": "null"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "argument-name"
                  ]
                },
                "type": "array",
                "x-key": "argument-name"
              },
              "description": {
                "description": "Description of the function",
                "format": "string",
                "type": "string"
              },
              "function-name": {
                "description": "Name of the function. Should be of pattern [a-zA-Z][a-zA-Z0-9_-]*",
                "format": "string",
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
                "type": "string"
              },
              "method": {
                "description": "Function to be called",
                "format": "string",
                "type": "string"
              },
              "path": {
                "description": "File in which function is defined. This is relative path to the data directory",
                "format": "string",
                "type": "string"
              }
            },
            "required": [
              "function-name",
              "path",
              "method"
            ]
          },
          "type": "array",
          "x-key": "function-name"
        },
        "keys": {
          "items": {
            "description": "List of values which form the unique identifier of the resource. Should be of pattern [a-z][a-z0-9-]*",
            "format": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-z][a-z0-9-]*$",
            "type": "string"
          },
          "type": "array"
        },
        "resource-name": {
          "description": "Name of the resource. Should be of pattern [a-z][a-z0-9-]*",
          "format": "string",
          "maxLength": 64,
          "minLength": 1,
          "pattern": "^[a-z][a-z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "resource-name"
      ],
      "type": "object",
      "x-ref": [
        "resource-fields-group",
        "functions-group",
        "dependency-group",
        "resource-variables-group"
      ]
    },
    "panel_schema": {
      "additionalProperties": false,
      "properties": {
        "db": {
          "description": "database name",
          "type": "string"
        },
        "decimals": {
          "description": "decimal value",
          "type": "string"
        },
        "panelData": {
          "description": "Panel data",
          "items":{
            "$ref": "#/definitions/panel_data_schema"
                },
          "type": "array"
        },
        "panelName": {
          "description": "Name of the panel",
          "type": "string"
        },
        "panelQuery": {
          "description": "Queries for the configured panel",
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "query": {
              "description": "Panel Query.",
              "format": "string",
              "type": "string"
            }
          },
          "required": [
            "query"
          ],
          "type": "array"
        },
        "panelType": {
          "description": "Type of chart",
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "label": {
              "description": "Label name",
              "format": "string",
              "type": "string"
            },
            "value": {
              "description": "Value of the label",
              "format": "string",
              "type": "string"
            }
          },
          "type": "object"
        },
        "panelUid": {
          "description": "Unique identifier for panel",
          "type": "string"
        },
        "timeRange": {
          "description": "Time range configured by user",
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "label": {
              "description": "Label name",
              "format": "string",
              "type": "string"
            },
            "value": {
              "description": "Value of label",
              "format": "string",
              "type": "string"
            }
          },
          "type": "object"
        },
        "unitType": {
          "description": "Unit configured",
          "additionalProperties": false,
          "patternProperties": {
            "^@": {
              "type": "object"
            }
          },
          "properties": {
            "label": {
              "description": "Label name",
              "format": "string",
              "type": "string"
            },
            "value": {
              "description": "Value of label",
              "format": "string",
              "type": "string"
            }
          },
          "type": "object"
        },
        "yLabel": {
          "description": "yLabel values",
          "type": "string"
        },
        "yMax": {
          "description": "yMax value",
          "type": "string"
        },
        "yMin": {
          "description": "yMin value",
          "type": "string"
        }
      },
      "type": "object"
    },
    "panel_data_schema": {
        "additionalProperties": false,
        "properties": {
          "addGroupByTag": {
            "description": "Group by values",
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
                  "dataType": {
                    "description": "Data type of the tag",
                    "format": "string",
                    "type": "string"
                  },
                  "label": {
                    "description": "label name",
                    "format": "string",
                    "type": "string"
                  },
                  "type": {
                    "description": "key type or field type",
                    "format": "string",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of label",
                    "format": "string",
                    "type": "string"
                  }
                },
            "type": "array"
          },
          "addWhereCondition": {
            "description": "Where condition to filter",
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "keyOrField": {
                "description": "Configured value is field/key type in influx",
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "dataType": {
                    "description": "Data type of the field/key",
                    "format": "string",
                    "type": "string"
                  },
                  "label": {
                    "description": "label name",
                    "format": "string",
                    "type": "string"
                  },
                  "type": {
                    "description": "key type or field type",
                    "format": "string",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of label",
                    "format": "string",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "keyOrFieldValue": {
                "description": "Key or Field value for the where condition",
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "label": {
                    "description": "Name of the panel.",
                    "format": "string",
                    "type": "string"
                  },
                  "value": {
                    "description": "Name of the panel.",
                    "format": "string",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "operator": {
                "description": "operator for where condition",
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "label": {
                    "description": "Name of the panel.",
                    "format": "string",
                    "type": "string"
                  },
                  "value": {
                    "description": "Name of the panel.",
                    "format": "string",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "array"
          },
          "changeWhereKeyField": {
            "description": "Change where key field",
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "keyField": {
                "description": "key field",
                "type": "object"
              }
            },
            "type": "array"
          },
          "groupByFill": {
                "description": "Group By Fill",
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "label": {
                    "description": "Label Name",
                    "format": "string",
                    "type": "string"
                  },
                  "value": {
                    "description": "Label Value",
                    "format": "string",
                    "type": "string"
                  }
                },
                "type": "object"
              },
          "groupByTime": {
                "description": "Group by time",
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "label": {
                    "description": "Label Name",
                    "format": "string",
                    "type": "string"
                  },
                  "value": {
                    "description": "Label Value",
                    "format": "string",
                    "type": "string"
                  }
                },
                "type": "object"
              },
          "groupType": {
            "description": "Group type(device/network)",
            "type": "string"
          },
          "selectedAggregation": {
                "description": "Aggregation type",
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "label": {
                    "description": "Label Name",
                    "format": "string",
                    "type": "string"
                  },
                  "value": {
                    "description": "Label value",
                    "format": "string",
                    "type": "string"
                  }
                },
                "type": "object"
              },
          "selectedDevice": {
                "description": "Device name",
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "label": {
                    "description": "Label Name",
                    "format": "string",
                    "type": "string"
                  },
                  "value": {
                    "description": "Label Value",
                    "format": "string",
                    "type": "string"
                  }
                },
                "type": "object"
              },
          "selectedDropdown": {
            "description": "Boolean value if selected from dropdown or not",
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "value": {
                "description": "Stores boolean value",
                "type": "boolean"
              }
            },
            "type": "array"
          },
          "selectedField": {
                "description": "Field selected for the panel",
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "label": {
                    "description": "Label name",
                    "format": "string",
                    "type": "string"
                  },
                  "value": {
                    "description": "Label value",
                    "format": "string",
                    "type": "string"
                  }
                },
                "type": "object"
              },
          "selectedGroup": {
                "description": "Device/Network group name",
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "label": {
                    "description": "Label name",
                    "format": "string",
                    "type": "string"
                  },
                  "type": {
                    "description": "Group type(device/network)",
                    "format": "string",
                    "type": "string"
                  },
                  "value": {
                    "description": "Label value",
                    "format": "string",
                    "type": "string"
                  }
                },
                "type": "object"
              },
          "selectedLogicalOperator": {
            "description": "Logical operator",
            "additionalProperties": false,
            "patternProperties": {
              "^@": {
                "type": "object"
              }
            },
            "properties": {
              "value": {
                "description": "Name of the panel.",
                "format": "string",
                "type": "string"
              }
            },
            "type": "array"
          },
          "selectedTopic": {
                "description": "Topic name",
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "label": {
                    "description": "Label name(Topic/rule name)",
                    "format": "string",
                    "type": "string"
                  },
                  "retention-policy": {
                    "description": "Retention policy of the topic",
                    "format": "string",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of measurement(field-table/trigger-table/rollup-table)",
                    "format": "string",
                    "type": "string"
                  },
                  "value": {
                    "description": "Label value",
                    "format": "string",
                    "type": "string"
                  }
                },
                "type": "object"
              },
          "selectedTransformation": {
                "description": "Transformation type",
                "additionalProperties": false,
                "patternProperties": {
                  "^@": {
                    "type": "object"
                  }
                },
                "properties": {
                  "label": {
                    "description": "Label name",
                    "format": "string",
                    "type": "string"
                  },
                  "value": {
                    "description": "Label value",
                    "format": "string",
                    "type": "string"
                  }
                },
                "type": "object"
              }
        },
        "type": "object"
      },
    "hb_graphs": {
      "description": "Create Panels in a Canvas",
      "properties": {
        "graph_name": {
          "description": "Graph name",
          "type": "string"
        },
        "graph_description": {
          "description": "Graph description",
          "type": "string"
        },
        "graph_type": {
          "description": "Graph type: Time Series or Histogram or Heatmap",
          "enum": [
            "Time Series",
            "Histogram",
            "Heatmap"
          ],
          "type": "string"
        },
        "time_range": {
          "description": "Time range for the graph",
          "enum": [
            "1h",
            "3h",
            "6h",
            "12h",
            "1d",
            "2d",
            "3d",
            "4d",
            "5d",
            "6d",
            "7d"
          ],
          "type": "string"
        },
        "query": {
          "description": "Query for the graph",
          "properties": {
            "group_name": {
              "description": "Device/Network group name",
              "format": "string",
              "type": "string"
            },
            "group_type": {
              "description": "Device/Network group type",
              "enum": [
                "device",
                "network"
              ],
              "type": "string"
            },
            "device_name": {
              "description": "label name",
              "format": "string",
              "type": "string"
            },
            "measurement_name": {
              "description": "Measurement name (topic/rule name)",
              "format": "string",
              "type": "string"
            },
            "measurement_type": {
              "description": "Measurement type: Field table/Trigger table/Rollup table",
              "enum": [
                "Field table",
                "Trigger table",
                "Rollup table"
              ],
              "type": "string"
            },
            "transformation": {
              "description": "Transformation value for query",
              "enum": [
                "derivative",
                "spread",
                "non-negative-derivative",
                "difference",
                "cumulative-sum",
                "elapsed"
              ],
              "type": "string"
            },
            "field_name": {
              "description": "Field name of a measurement ",
              "format": "string",
              "type": "string"
            },
            "field_type": {
              "description": "Field type of the measurement (int, float, string, uint)",
              "format": "string",
              "type": "string"
            },
            "field_aggregation": {
              "description": "Data aggregation type of the field/key",
              "enum": [
                "mean",
                "mode",
                "median",
                "count",
                "sum",
                "integral",
                "distinct"
              ],
              "type": "string"
            },
            "where": {
              "description": "where clause for graph",
              "properties": {
                "where_clause": {
                  "description": "label name",
                  "properties": {
                    "key": {
                      "description": "Field or key (type)",
                      "enum": [
                        "key",
                        "field"
                      ],
                      "type": "string"
                    },
                    "operator": {
                      "description": "Operator for where clause",
                      "enum": [
                        "=",
                        "!=",
                        "=~",
                        "!~"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "description": "Value for the field_tag_name to be validated",
                      "format": "string",
                      "type": "string"
                    },
                    "logical_operation": {
                      "description": "Graph type",
                      "enum": [
                        "AND",
                        "OR"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "list"
                }
              },
              "type": "list"
            },
            "group_by_interval": {
              "description": "Group by interval of the query",
              "format": "string",
              "type": "string"
            },
            "group_by_fill": {
              "description": "Group by fill value of the query",
              "enum": ["fill(null)", "none"],
              "type": "string"
            },
            "group_by_tag_key": {
              "description": "Group by tag key value of the query",
              "format": "string",
              "type": "string"
            },
            "retention_policy": {
              "description": "Retention policy name",
              "format": "string",
              "type": "string"
            }
          },
          "type": "list"
        },
        "y_label": {
          "description": "Y Label value in visualization",
          "type": "string"
        },
        "y_max": {
          "description": "Y max value in visualization",
          "type": "string"
        },
        "y_min": {
          "description": "Y min value in visualization",
          "type": "string"
        },
        "unit_type": {
          "description": "unit type value in visualization",
          "enum": [
            "Short",
            "Percentage(0-100)",
            "Bits",
            "Bytes",
            "Kilobytes",
            "Megabytes",
            "Gigabytes",
            "Parts per million(ppm)",
            "Parts per billion(ppb)"
          ],
          "type": "string"
        },
        "decimals": {
          "description": "Decimals value in visualization",
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}
